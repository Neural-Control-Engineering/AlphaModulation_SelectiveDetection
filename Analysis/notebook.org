* [2024-6-22 Sat] - new notebook specifically for selective detection 
** wish list for the extracted LFP data
*** positions of each channel along the probe 
*** non-event-aligned lfp time 
** TODOs 
*** DONE: fix issue where spike times stop so shortly after stimulus (need to include spikes from next trial)
**** added buffers before and after each trial where possible (in nCORTEx)
*** DONE: event aligned avg firing rates across session 
*** DONE: outcome aligned avg firing rates across session
*** TODO: reproduce single cell plots from original attention code 
*** DONE: return to *instAlphaPhseEachSpike.m* once lfp channels have positions 

* [2024-6-24 Mon] - npxls session table, new functions 
** started working on npxls session table, with metadata and trial averaged data for each cluster 
*** also isStimModulated.m determines if each cluster is stimulus modulated 
*** DONE: flesh out version for each outcome NPXLS/isStimModByOutcome.m
** wrote function for baseline alpha power on each channel 

* [2024-6-25 Tue] - lfp analysis, reproducing spiking analyses 
** LFP analyses 
*** DONE: trial averaged alpha power 
*** DONE: instantaneous power/phase for all bands 
** AP analyses 
*** DONE: area under ROC 
*** DONE: interspike intervals 
*** DONE: covariance analyses 
** 2 new folders for AP_Session (trial average spiking metrics by cluster) 
and LFP_Session (trial averaged metrics by channel)

* [2024-6-27 Thu] - more analyses, figuring probe out 
** AP session analyses 
*** DONE: trial averaged covariance matrix by outcome, action, correct/incorrect
*** DONE: PTSHs by correct/incorrect, action 
** probe issues 
*** assigning brain regions to lfp channels 
*** does kilosort reference a probe map (i.e. can we trust positions in kilosort output)
*** where in extraction to assign brain regions / probe positions?

* [2024-6-28 Fri] - wrapping up extraction process 
** TODOS 
*** DONE: event aligned signals in SLRT 
*** DONE: Assign positions to clusters (AP) and channels (LFP)
*** DONE: get extraction running on cluster
*** DONE: Session analyses by class and region 
*** DONE: ERPs by outcome, action, performance 
*** DONE: Baseline band power by outcome, action, performance 
*** DONE: Session analyses by cell class and region 
*** DONE: pull request for n-CORTEx 

* [2024-7-1 Mon] - extraction running on cluster 
** issues 
*** parfor keeps failing on a node and seemingly restarting 
*** date--2024-04-02... has too little lfp data and very few recorded clusters.  maybe revisit or toss out 
*** for sessions with a single miss, get single value for avg psths 

* [2024-7-2 Tue] - issue with brain region assignments 
** seems like clusters are out of order / assigned to the wrong regions
*** might be worked out 
** more analyses 
*** DONE: covariance by outcome 
*** DONE: spontaneous CV by outcome 

* [2024-7-4 Thu] - lfps 
** plotting baseline band power by outcome 
figure(); imagesc([cell2mat(lfp_session.avg_baseline_alpha_power_Hit), cell2mat(lfp_session.avg_baseline_alpha_power_Miss), cell2mat(lfp_session.avg_baseline_alpha_power_CR), cell2mat(lfp_session.avg_baseline_alpha_power_FA)])
title('Alpha')
figure(); imagesc([cell2mat(lfp_session.avg_baseline_theta_power_Hit), cell2mat(lfp_session.avg_baseline_theta_power_Miss), cell2mat(lfp_session.avg_baseline_theta_power_CR), cell2mat(lfp_session.avg_baseline_theta_power_FA)])
title('Theta')
figure(); imagesc([cell2mat(lfp_session.avg_baseline_delta_power_Hit), cell2mat(lfp_session.avg_baseline_delta_power_Miss), cell2mat(lfp_session.avg_baseline_delta_power_CR), cell2mat(lfp_session.avg_baseline_delta_power_FA)])
title('Delta')
figure(); imagesc([cell2mat(lfp_session.avg_baseline_beta_power_Hit), cell2mat(lfp_session.avg_baseline_beta_power_Miss), cell2mat(lfp_session.avg_baseline_beta_power_CR), cell2mat(lfp_session.avg_baseline_beta_power_FA)])
title('Beta')
figure(); imagesc([cell2mat(lfp_session.avg_baseline_gamma_power_Hit), cell2mat(lfp_session.avg_baseline_gamma_power_Miss), cell2mat(lfp_session.avg_baseline_gamma_power_CR), cell2mat(lfp_session.avg_baseline_gamma_power_FA)])
title('Gamma')

* [2024-7-8 Mon] - more lfps 
** issues
*** LFP ERP
**** 02-20 right trigger erp only has 3834 samples 
**** 02-22 has 3918
*** AP extraction 
**** 04-18 unusually small (no ap_data saved)

* [2024-7-9 Tue] - new analyses 
** instantaneous phase of spontaneous and all spikes for each lfp band 
** heat maps for ERPs and instantaneous power within LFP bands 

* [2024-7-10 Wed] - revisiting brain regions and waveform classes 
** code for working out region issue 
% sorting out probe and regions 
probe_insert = load('~/NEC_Drive/Project_Selective-Attention/Experiments/ATTN/Subjects/3387-20240121/npxls/trajectory/imec0/3387-probe-insert.mat');
load('/home/craig/NEC_Drive/Project_Selective-Attention/Experiments/ATTN/Subjects/3387-20240121/npxls/trajectory/imec0/probe_positions.mat'); % probe 
probe_depth = probe_insert.probe_areas{1,1}.probe_depth;
new_probe_depths = zeros(size(probe_depth));
lowest = max(max(probe_depth));
count = 1;
for i = size(probe_depth,1):-1:1
    dist = diff(probe_depth(i,:));
    new_probe_depths(count,1) = lowest;
    new_probe_depths(count,2) = lowest - dist;
    lowest = new_probe_depths(count,2);
    count = count + 1;
end

% plotting raster plots 
discont_ind = find(cell2mat(probe.regMap.channel) == 1);
spike_times = ap_ext.ap_data(27,:).spiking_data{1}.left_trigger_aligned_spike_times;
disordered_inds = find(cell2mat(ap_ext.ap_data(27,:).spiking_data{1}.channel) <= discont_ind);
ordered_spike_times = vertcat(spike_times(disordered_inds(end)+1:end), spike_times(disordered_inds));
channels = cell2mat(ap_ext.ap_data(27,:).spiking_data{1}.channel);
ordered_channels = vertcat(channels(disordered_inds(end)+1:end)-(discont_ind), channels(disordered_inds)+(385-discont_ind-1));
figure();
subplot(1,2,1)
hold on
for i = 1:length(ordered_spike_times)
    plot(spike_times{i}, repmat(i,length(spike_times{i}),1), 'k|')
end
subplot(1,2,2)
hold on
for i = 1:length(ordered_spike_times)
    plot(ordered_spike_times{i}, repmat(i,length(ordered_spike_times{i}),1), 'k|')
end

% assigning regions 
channel_depths = linspace(0, 3840, 385);
regions = cell(length(ordered_channels),1);
for i = 1:length(ordered_channels)
    y_pos = channel_depths(ordered_channels(i));
    dist = (mean(new_probe_depths,2)-y_pos).^2;
    [~, ind] = min(dist);
    regions{i} = probe.probe_areas{1,1}.acronym{ind};
end

% lfp example 
load ~/neuralctrl/users/ck3217/Selective-Attention/Data/FTR/LFP/date--2024-03-10_subj--3387-20240121_npxls--R-npx10_phase--3_g0.mat
tmp = [lfp_session(disordered_inds(end)+1:end,:); lfp_session(disordered_inds,:)];

* [2024-7-12 Fri] - working on channel maps and resorting data 

* [2024-7-17 Wed] - phase locking 
** added script which fits von Mises (circular normal distribution) to spike phases 

* [2024-7-18 Thu] - towards psychometric curves 
** cody's suggestion: simultaneous distractors for go/no-go stimuli 
*** for 'phase 4' of SELECT_DETECT, go stimulus (amp: 10) accompanied by distractor stimulus on no-go stide (amp: 3),
and no-go stimulus (amp: 10) accompanied by distractor stimulus on go side (amp: 3)
**** for first session, still got dprime > 1.0

* [2024-7-23 Tue] - issue with date--2024-07-23_subj--3787...
** single trial plots 
for i = 350:400
    figure();
    tl = tiledlayout(4,1);
    nexttile;
    plot(slrt_data(i,:).clock_time{1}, slrt_data(i,:).was_target{1})
    ylim([-1,2])
    nexttile;
    plot(slrt_data(i,:).clock_time{1}, slrt_data(i,:).right_amp{1});
    ylim([-1,11])
    nexttile
    plot(slrt_data(i,:).clock_time{1}, slrt_data(i,:).left_amp{1});
    ylim([-1,11])
    nexttile;
    plot(slrt_data(i,:).clock_time{1}, slrt_data(i,:).lick_detector{1});
    title(tl, sprintf('%i: %s', i, slrt_data(i,:).categorical_outcome{1}))
    ylim([0,1])
end

* [2024-7-25 Thu] - revisiting cell classification 
** NS spikes actually have normally distributed widths for first session I looked at
*** need to look at distribution for the whole dataset
** using extraction log for RAW->EXT 

* [2024-7-26 Fri] - new versions of tasks 
** internal-model
*** no new equipment
*** simultaneous left and right stimuli, difference cues go/no-go 
*** train at 50% go/no-go
*** after training, switch between 20%, 50%, 80% go 
** tactile integration 
*** no new equipment 
*** simultaneous left and right stimuli, difference cues go/no-go 
*** training remains the same
*** where to record?
**** parietal cortex
**** S1 - evidence for bilateral whisker integration in S1 - Shuler2001-wp
**** prefrontal 
** decision making 
*** would probably need to switch to two choice
**** don't know how it could be forced choice however (mouse could easily not lick at all)
**** would require second valve (digital output), second lickometer (analog input)
*** training similar, but instead of go/no-go, would be lick left/right 
*** recording from prefrontal 

* [2024-8-1 Thu] - saline vs dcz 3787
** saline 
*** 07/29, 07/31, 08/03, 08/06, 08/12, 08/14
** DCZ 
*** 08/01, 08/02, 08/05, 08/07, 08/09, 08/10

* [2024-8-3 Sat] - extraction issue 
** TODO: look into issue with *04-02*

* [2024-8-7 Wed] - trial history, ext->ftr 
** yesterday wrote code to analyze behavior and generate PSTHs based on previous trial outcome 
** SLRT EXT->FTR mostly settled 

* [2024-8-11 Sun] - todos 
** DONE: slrt extraction for 50:50 mice 
*** issue with most of the data from before [2024-8-12 Mon]
** DONE: compare behavior dcz vs saline for each mouse 
** DONE: characterize spiking by region, waveform class, and outcome for each expert mouse 
** TODO: characterize spiking in simultaneous distractor sessions

* [2024-8-14 Wed] 
** SLRT comparisons 
*** DONE: extract 07/31, 08/12 (sorted, not extracted)

* [2024-8-17 Sat] 
** DONE: rename overall striatum figs to basal ganglia 

* [2024-8-23 Fri] - lfp phase of spikes 

* [2024-8-26 Mon] - catching up on analysis 
** internal model, simultaneous distractors 
*** for both animals, psychometric curves are relatively flat 
*** DONE: try reducing go probability back to 30% for a few days 
*** TODO: get pupil data to Dillon 
** running extraction on DCZ/Saline data for poster 
*** DONE: make sure npxls_extraction.sbatch runs through 
*** DONE: rerun feature extraction for 3787 DCZ vs Saline 
** npxls + simultaneous distractors 
*** DONE: generate psths for each left-right amplitude 
** expert data analysis 
*** DONE: add figures on alpha phase of spikes to project slides 
*** TODO: flesh out coefficient of variation and fano factor analyses/plotting 
*** DONE: are two distributions of anlges different?
**** maybe circ_kuipertest
**** for basal ganglia, correct vs. incorrect, kuiper = 0.1 (trend)

* [2024-8-28 Wed] - lfp modulation of spike times 
** single cells 
*** DONE: rerun with 0.05/n_cells rather than n_spikes 
*** DONE: compute phase modulation index 
*** DONE: compute MSE
*** DONE: get working for all bands 
*** DONE: do it all for evoked 
** populations 
*** TODO: lfp modulation of population activity trial-by-trial 
** lfps 
*** DONE: generate lfp ftrs 
*** DONE: example lfp traces 

* [2024-9-1 Sun] - prep for meetings 
** afrl-coe
*** DONE: get poster together for [2024-9-10 Tue]
**** Intro panel
***** explanation of behavior
***** demo raster plots and lfps 
***** basic behavior data 
*** DONE: put slides together for [2024-9-11 Wed]
** sfn 
*** DONE: put poster together for [2024-10-7 Mon]

* [2024-9-2 Mon] - back to straight lfp analysis 
** lfps 
*** DONE: double check, but last channel in 'lfp_session' looks dead
*** DONE: double check channel numbering for 'lfp_sesison'
*** can look into [[/insomnia001/depts/neuralctrl/users/ck3217/Selective-Attention/Data/FTR/][first pass of lfp analysis]]
*** DONE: get a nice trace of an alpha oscillation 
** spiking 
*** DONE: get a nice raster plot 

* [2024-9-5 Thu] - issue with lack of miss trials 
** debugging *avgPSTHbyOutcome.m* - fixed 

* [2024-9-6 Fri] 
** DONE: work on summarizing behavior data for simultaneous distractor experiments 

* [2024-9-8 Sun] - finishing poster for arfl coe meeting 
** network phase modulation across trials 
load network_p_values 

[ctx, ctx_edges] = histcounts(log10(out.ctx), 100);
for i = 2:length(ctx_edges)
    ctx_centers(i-1) = mean([ctx_edges(i-1), ctx_edges(i)]);
end
figure()
subplot(1,2,1)
bar(ctx_centers, log10(ctx), 'FaceColor', [0.5,0.5,0.5], 'EdgeColor', [0.5,0.5,0.5])
hold on
plot(log10([0.05/41,0.05/41]), [0,7], 'k--', 'LineWidth', 2)
xlim([-8,0])
ylim([0,3])
xlabel('log(p)')
ylabel('log(N_{trials})')
title('Cortex')

[bg, bg_edges] = histcounts(log10(out.bg), 100);
for i = 2:length(bg_edges)
    bg_centers(i-1) = mean([bg_edges(i-1), bg_edges(i)]);
end
%figure()
subplot(1,2,2)
bar(bg_centers, log10(bg), 'FaceColor', [0.5,0.5,0.5], 'EdgeColor', [0.5,0.5,0.5])
hold on
plot(log10([0.05/64,0.05/64]), [0,7], 'k--', 'LineWidth', 2)
xlim([-8,0])
ylim([0,3])
xlabel('log(p)')
ylabel('log(N_{trials})')
title('Basal Ganglia')

figure();
tl = tiledlayout(2,2,'TileSpacing','tight');
axs(1) = nexttile;
hold on 
%bar([1,2], [mean(out.sig_dprime), mean(out.insig_dprime)], 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
for i = 1:length(out.sig_dprime)
    plot([1,2], [out.sig_dprime(i), out.insig_dprime(i)], 'k.-', 'MarkerSize', 30)
end
%errorbar([1,2], [mean(out.sig_dprime), mean(out.insig_dprime)], [std(out.sig_dprime)/sqrt(length(out.sig_dprime)), std(out.insig_dprime)/sqrt(length(out.insig_dprime))], 'k.')
xticks([1,2])
xticklabels({'Modulated', 'Unmodulated'})
ylabel('d-prime')
xlim([0.5,2.5])

axs(2) = nexttile;
hold on 
%bar([1,2], [mean(out.sig_criterion), mean(out.insig_criterion)], 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
for i = 1:length(out.sig_criterion)
    plot([1,2], [out.sig_criterion(i), out.insig_criterion(i)], 'k.-', 'MarkerSize', 30)
end
%errorbar([1,2], [mean(out.sig_criterion), mean(out.insig_criterion)], [std(out.sig_criterion)/sqrt(length(out.sig_criterion)), std(out.insig_criterion)/sqrt(length(out.insig_criterion))], 'k.')
xticks([1,2])
xticklabels({'Modulated', 'Unmodulated'})
ylabel('Criterion')
xlim([0.5,2.5])
ylim([-1,2.75])

axs(3) = nexttile;
hold on 
%bar([1,2], [mean(out.sig_hr), mean(out.insig_hr)], 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
for i = 1:length(out.sig_hr)
    plot([1,2], [out.sig_hr(i), out.insig_hr(i)], 'k.-', 'MarkerSize', 30)
end
%errorbar([1,2], [mean(out.sig_hr), mean(out.insig_hr)], [std(out.sig_hr)/sqrt(length(out.sig_hr)), std(out.insig_hr)/sqrt(length(out.insig_hr))], 'k.')
xticks([1,2])
xticklabels({'Modulated', 'Unmodulated'})
ylabel('Hit Rate')
xlim([0.5,2.5])
ylim([0,1.3])

axs(4) = nexttile;
hold on 
%bar([1,2], [mean(out.sig_far), mean(out.insig_far)], 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
for i = 1:length(out.sig_far)
    plot([1,2], [out.sig_far(i), out.insig_far(i)], 'k.-', 'MarkerSize', 30)
end
%errorbar([1,2], [mean(out.sig_far), mean(out.insig_far)], [std(out.sig_far)/sqrt(length(out.sig_far)), std(out.insig_far)/sqrt(length(out.insig_far))], 'k.')
xticks([1,2])
xticklabels({'Modulated', 'Unmodulated'})
ylabel('False Alarm Rate')
xlim([0.5,2.5])


* [2024-9-10 Tue] - stim amp dependent firing rates 
** [[AP_Session/avgPSTHbyLeftMinusRight.m][new function PSTH by left minus right regardless of outcome]]
** [[AP_Session/avgPSTHbyLeftMinusRightAndOutcome.m][new function PSTH by left minus right and outcome]]
** plotting avg histograms 
amps = -10:2:10;
cm = colormap('jet');
cinds = round(linspace(1,size(cm,1),length(amps)));
for c = 1:10
    figure(); hold on;
    for a = 1:length(amps)
        amp = amps(a);
        signal = sprintf('amp_%i_avg_psth', amp);
        if amp == 0 
            plot(linspace(-2.9,4.9,80), smooth(ap_session(c,:).(signal){1},5), 'Color', 'k', 'LineWidth',2)
        else
            plot(linspace(-2.9,4.9,80), smooth(ap_session(c,:).(signal){1},5), 'Color', cm(cinds(a),:))
        end
    end
end
** plotting avg histograms for different outcomes for 50:50 stimulus 
for c = 1:10
    signals = ap_session(c,:).Properties.VariableNames(contains(ap_session.Properties.VariableNames, 'amp_0_avg_psth_'));
    figure(); hold on;
    for s = 1:length(signals)
        sig = strsplit(signals{s}, '_');
        dn = sig{end}
        plot(linspace(-2.9,4.9,80), ap_session(c,:).(signals{s}){1}, 'DisplayName', dn)
    end
    legend()
end

* [2024-9-12 Thu] - back to analysis 
** notes from COE meeting 
*** alpha is 8-12 Hz; theta is 4-8 Hz
*** from shadlen: try looking at oscillatory events
** simultaneous distractor experiments 
*** current state of experiments 
**** 3755 has 3 sessions at phase 5
**** 3752 has 2 sessions at phase 3
**** 3738 has 2 good sessions at phase 5
**** 10005 has 8 good sessions at phase 5 (30% target stimuli)
***** should try to get a few more 
*** current state of analysis 
**** have psths by left-minus-right difference and outcomes 
**** TODO: run npxls_extract.m for all phase 5 (rerun for 3738)
** standard go/no-go experiments 
**** 3738 has 5 sessions at half dose, 9 at full dose, 10 saline
** phase modulation analysis 
*** TODO: try a broader alpha-theta band 
*** DONE: look for oscillatory events 
*** TODO: formalize analysis of evoked activity 

* [2024-9-16 Mon] - wrapping up dcz vs saline in S1 mice 
** looks like there could be significant difference in criterion 
between DCZ and saline

* [2024-9-17 Tue] - fixed issues with combining features
** found a bug in ftr analysis scripts - fixed 
** edge of significance for d-prime 
** significant differences in prev-trial-dependent d-prime for DCZ sessions, not saline 
*** TODO: set up plotting for firing rates based on previous trial outcomes 

* [2024-9-19 Thu] - behavior and dcz admin 
** differences in history dependence of behavior in DCZ compared to saline 
*** dprime: DCZ p < 10-8; Saline p < 0.05 (anova, repeated measures)
correct vs incorrect: p < 0.05 (mann-whitney)
*** criterion: DCZ: p < 10-14; saline: p < 10-3 (anova repetated measures)
action vs inaction: p < 0.01
*** reaction time: DCZ: p < 0.05; saline: p = 0.11

* [2024-9-20 Fri] - expanding ap ftrs, comparing dcz and saline for phase 5
** working through expanding ap ftrs to include firing rates by previous and current outcome 
** compare dcz vs slrt psych curves (both)
ftr_files = {{'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat'}, ...
    {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat'}};
comparePsychCurves(ftr_files, true, false)
** just 3755
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat'};
comparePsychCurves(ftr_files, true, false, {'DCZ', 'Saline'});
compareReactionTimeCurves(ftr_files, true, false, {'DCZ', 'Saline'});
** just 3755 second round 
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g1.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g1.mat'};
comparePsychCurves(ftr_files, true, false, {'DCZ', 'Saline'});
compareReactionTimeCurves(ftr_files, true, false, {'DCZ', 'Saline'});
** combo 3755
ftr_files = {{'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat', ...
        '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g1.mat'}, ...
        {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat', ...
        '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g1.mat'}};
comparePsychCurves(ftr_files, true, false, {'DCZ', 'Saline'});
** just 3738
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat'};
comparePsychCurves(ftr_files, true, false, {'DCZ', 'Saline'});

* [2024-9-23 Mon] - todos
** TODOS 
*** DONE: spike sorting for 3755 for 9/20 on 
*** DONE: spike sorting for 3738 for 9/13 on 

* [2024-9-26 Thu] - working toward sfn poster 
** consider removing 9/24 from *lowTarget_10004_session_ids*
** compare psych curves for 10005 at different go probabilities 
ftr_files = {'subj--10005_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_lowTargetProbability.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves for 10004 at different go probabilities initial sessions 
ftr_files = {'subj--10004_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10004_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10004_geno-Wt_phase--5_lowTargetProbability.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves for 10004 at different go probabilities for pupil sessions 
ftr_files = {'subj--10004_geno-Wt_phase--5_highTargetProbability_pupil.mat', ...
    'subj--10004_geno-Wt_phase--5_midTargetProbability_pupil.mat', ...
    'subj--10004_geno-Wt_phase--5_lowTargetProbability_pupil.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves for 10004 at different go probabilities for all sessions 
ftr_files = {'subj--10004_geno-Wt_phase--5_highTargetProbability_all.mat', ...
    'subj--10004_geno-Wt_phase--5_midTargetProbability_all.mat', ...
    'subj--10004_geno-Wt_phase--5_lowTargetProbability_all.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves for 3755 at different go probabilities 
ftr_files = {'subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_highTargetProbability.mat', ...
    'subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_midTargetProbability.mat', ...
    'subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves for 10003 at different go probabilities 
ftr_files = {'subj--10003_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10003_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10003_geno-Wt_phase--5_lowTargetProbability.mat'};
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** compare psych curves across animals 
ftr_files = {{'subj--10003_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10004_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_highTargetProbability.mat'}, ...
    {'subj--10003_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10004_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_midTargetProbability.mat'}, ...
    {'subj--10003_geno-Wt_phase--5_lowTargetProbability.mat', ...
    'subj--10004_geno-Wt_phase--5_lowTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_lowTargetProbability.mat'}}
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    for j = 1:length(ftr_files{i})
        ftr_files{i}{j} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i}{j});
    end
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** just 4 and 5
ftr_files = {{'subj--10004_geno-Wt_phase--5_highTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_highTargetProbability.mat'}, ...
    {'subj--10004_geno-Wt_phase--5_midTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_midTargetProbability.mat'}, ...
    {'subj--10004_geno-Wt_phase--5_lowTargetProbability.mat', ...
    'subj--10005_geno-Wt_phase--5_lowTargetProbability.mat'}}
ftr_files = fliplr(ftr_files);
for i = 1:length(ftr_files)
    for j = 1:length(ftr_files{i})
        ftr_files{i}{j} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i}{j});
    end
end
comparePsychCurves(ftr_files, true, false, {'30%', '50%', '70%'});
compareReactionTimeCurves(ftr_files, true, false, {'30%', '50%', '70%'});
** TODO: spontaneous lick aligned spikes 
spon_lick_count = 1;
out = {};
for i = 1:size(slrt_data,1)
    stim_ind = slrt_data(i,:).left_trigger;
    if isnan(stim_ind)
        stim_ind = slrt_data(i,:).right_trigger;
    end
    if ~isnan(stim_ind)
        stim_time = slrt_data(i,:).clock_time{1}(stim_ind);
        if sum(slrt_data(i,:).lick_detector{1}(stim_ind-3000:stim_ind-1))
            lick_inds = find(slrt_data(i,:).lick_detector{1}(stim_ind-3000:stim_ind-1));
            if length(lick_inds) > 1
                %dt = diff(lick_inds);
                %[~,max_diff] = max(dt);
                %lick_ind = lick_inds(max_diff+1);
                lick_ind = lick_inds(end);
            else
                lick_ind = lick_inds;
            end
            lick_time = slrt_data(i,:).clock_time{1}(lick_ind+length(slrt_data(i,:).lick_detector{1}(1:stim_ind-3000)));
            spiking_data = ap_data(i,:).spiking_data{1};
            plths = cell(size(spiking_data,1),1);
            for c = 1:size(spiking_data,1)
                spike_times = spiking_data(c,:).spike_times{1} - lick_time;
                plths{c} = histcounts(spike_times, -1:0.05:1);
            end
            out{spon_lick_count} = plths;
            spon_lick_count = spon_lick_count + 1;
        end
    end
end
avgPLTHs = cell(size(ap_data(1,:).spiking_data{1},1),1);
for c = 1:length(avgPLTHs)
    plth_mat = [];
    for i = 1:length(out)
        plth_mat = [plth_mat; out{i}{c}];
    end
    avgPLTHs = mean(plth_mat);
end
** TODO: run alpha modulation for dcz and saline 
*** for network, setup in Plotting/networkAlphaPhaseDCZ.m 
*** also setup for single cells 

* [2024-9-27 Fri] - wrapping up behavior analyses 
** DONE: add hit and false alarm rates to slrt features 
** finally showing significant difference between 0.005 mg/kg DCZ and saline 
*** p: 0.0368 mann-whitney saline vs. 0.005 dcz; p: 0.0039 0.005 dcz vs 0.01 dcz
*** still shows significant difference in history dependent performance 
*** no longer significant differences for criterion 
*** both conditions show significant difference for reaction time by previous trial action 
** plotting saline and DCZ data 
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat'};
saline_ftr_files = horzcat(ftr_files(5), ftr_files(end));
half_dcz_ftr_files = horzcat(ftr_files(4), ftr_files(end-1));
full_dcz_ftr_files = horzcat(ftr_files(3), ftr_files(end-2));
all_ftr_files = {saline_ftr_files, half_dcz_ftr_files, full_dcz_ftr_files};
visualize = true;
out_path = '~/Documents/Project_Figures/SFN2024/';

% compare animals 
for i = 1:length(all_ftr_files)
    if iscell(all_ftr_files{i})
        % combine animals
        for j = 1:length(all_ftr_files{i})
            f = load(all_ftr_files{i}{j});
            if j == 1
                ftrs = f.slrt_ftr;
            else
                ftrs = combineTables(ftrs, f.slrt_ftr);
            end
        end
        expr = sprintf('ftr%i = ftrs;', i);
        eval(expr)
    else
        expr = sprintf('ftr%i = load(ftr_files{%i});', i, i);
        eval(expr)
        expr = sprintf('ftr%i = ftr%i.slrt_ftr;', i, i);
        eval(expr)
    end
end

% reaction times by outcome 
if visualize
    rt_fig = figure('Position', [1963, 1083, 628, 545]);
else
    rt_fig = figure('Visible', 'off');
end
rt_by_outcome1 = cell2mat(ftr1.qc_rt_by_outcome);
rt_by_outcome2 = cell2mat(ftr2.qc_rt_by_outcome);
rt_by_outcome3 = cell2mat(ftr3.qc_rt_by_outcome);
bar([1,5], nanmean(rt_by_outcome1,1), 0.2, 'EdgeColor', 'k', 'FaceColor', 'r')
hold on
errorbar([1,5], nanmean(rt_by_outcome1,1), nanstd(rt_by_outcome1,1) ./ sqrt(size(rt_by_outcome1,1)), 'k.')
bar([2,6], nanmean(rt_by_outcome2,1), 0.2, 'EdgeColor', 'k', 'FaceColor', 'b')
errorbar([2,6], nanmean(rt_by_outcome2,1), nanstd(rt_by_outcome2,1) ./ sqrt(size(rt_by_outcome2,1)), 'k.')
bar([3,7], nanmean(rt_by_outcome3,1), 0.2, 'EdgeColor', 'k', 'FaceColor', 'm')
errorbar([3,7], nanmean(rt_by_outcome3,1), nanstd(rt_by_outcome3,1) ./ sqrt(size(rt_by_outcome3,1)), 'k.')
xticks([2, 6])
xticklabels({'Hit', 'False Alarm'})
xtickangle(45)
xlabel('Outcome', 'FontSize', 14)
ylabel('Reaction Time (s)', 'FontSize', 14)
if out_path 
    saveas(rt_fig, strcat(out_path, 'dcz_reaction_times.fig'))
    saveas(rt_fig, strcat(out_path, 'dcz_reaction_times.svg'))
end
rt_axs = gca(rt_fig);
rt_axs.XAxis.FontSize=12;

% dprime 
if visualize
    dp_fig = figure('Position', [1963, 1083, 628, 545]);
else
    dp_fig = figure('Visible', 'off');
end
dprime1 = ftr1.qc_dprime;
dprime2 = ftr2.qc_dprime;
dprime3 = ftr3.qc_dprime;
bar([1], nanmean(dprime1), 'EdgeColor', 'k', 'FaceColor', 'r')
hold on
errorbar([1], nanmean(dprime1), nanstd(dprime1) ./ sqrt(length(dprime1)), 'k.')
bar([2], nanmean(dprime2), 'EdgeColor', 'k', 'FaceColor', 'b')
errorbar([2], nanmean(dprime2), nanstd(dprime2) ./ sqrt(length(dprime2)), 'k.')
bar([3], nanmean(dprime3), 'EdgeColor', 'k', 'FaceColor', 'm')
errorbar([3], nanmean(dprime3), nanstd(dprime3) ./ sqrt(length(dprime3)), 'k.')
xticks([1:3])
xticklabels({'Saline', '0.005 mg/kg', '0.01 mg/kg'})
xtickangle(45)
ylabel("Performance (d')", 'FontSize', 14)
ylim([0,2.7])
dp_axs = gca(dp_fig);
dp_axs.XAxis.FontSize=12;
if out_path 
    saveas(dp_fig, strcat(out_path, 'dcz_dprime.fig'))
    saveas(dp_fig, strcat(out_path, 'dcz_dprime.svg'))
end

% criterion
if visualize
    crit_fig = figure('Position', [1963, 1083, 628, 545]);
else
    crit_fig = figure('Visible', 'off');
end
criterion1 = ftr1.qc_criterion;
criterion2 = ftr2.qc_criterion;
criterion3 = ftr3.qc_criterion;
bar([1], nanmean(criterion1), 'EdgeColor', 'k', 'FaceColor', 'r')
hold on
errorbar([1], nanmean(criterion1), nanstd(criterion1) ./ sqrt(length(criterion1)), 'k.')
bar([2], nanmean(criterion2), 'EdgeColor', 'k', 'FaceColor', 'b')
errorbar([2], nanmean(criterion2), nanstd(criterion2) ./ sqrt(length(criterion2)), 'k.')
bar([3], nanmean(criterion3), 'EdgeColor', 'k', 'FaceColor', 'm')
errorbar([3], nanmean(criterion3), nanstd(criterion3) ./ sqrt(length(criterion3)), 'k.')
xticks([1:3])
xticklabels({'Saline', '0.005 mg/kg', '0.01 mg/kg'})
xtickangle(45)
crit_axs = gca(crit_fig);
crit_axs.XAxis.FontSize=12;
ylabel('Decision Criterion', 'FontSize', 14)
if out_path 
    saveas(crit_fig, strcat(out_path, 'dcz_decision_criterion.fig'))
    saveas(crit_fig, strcat(out_path, 'dcz_decision_criterion.svg'))
end

if visualize
    hr_fig = figure('Position', [1963, 1083, 628, 545]);
else
    hr_fig = figure('Visible', 'off');
end
hr1 = ftr1.qc_hr;
hr2 = ftr2.qc_hr;
hr3 = ftr3.qc_hr;
bar([1], nanmean(hr1), 'EdgeColor', 'k', 'FaceColor', 'r')
hold on
errorbar([1], nanmean(hr1), nanstd(hr1) ./ sqrt(length(hr1)), 'k.')
bar([2], nanmean(hr2), 'EdgeColor', 'k', 'FaceColor', 'b')
errorbar([2], nanmean(hr2), nanstd(hr2) ./ sqrt(length(hr2)), 'k.')
bar([3], nanmean(hr3), 'EdgeColor', 'k', 'FaceColor', 'm')
errorbar([3], nanmean(hr3), nanstd(hr3) ./ sqrt(length(hr3)), 'k.')
xticks([1:3])
xticklabels({'Saline', '0.005 mg/kg', '0.01 mg/kg'})
xtickangle(45)
ylabel('Hit Rate', 'FontSize', 14)
hr_axs = gca(hr_fig);
hr_axs.XAxis.FontSize=12;
if out_path 
    saveas(hr_fig, strcat(out_path, 'dcz_hit_rate.fig'))
    saveas(hr_fig, strcat(out_path, 'dcz_hit_rate.svg'))
end

if visualize
    far_fig = figure('Position', [1963, 1083, 628, 545]);
else
    far_fig = figure('Visible', 'off');
end
far1 = ftr1.qc_far;
far2 = ftr2.qc_far;
far3 = ftr3.qc_far;
bar([1], nanmean(far1), 'EdgeColor', 'k', 'FaceColor', 'r')
hold on
errorbar([1], nanmean(far1), nanstd(far1) ./ sqrt(length(far1)), 'k.')
bar([2], nanmean(far2), 'EdgeColor', 'k', 'FaceColor', 'b')
errorbar([2], nanmean(far2), nanstd(far2) ./ sqrt(length(far2)), 'k.')
bar([3], nanmean(far3), 'EdgeColor', 'k', 'FaceColor', 'm')
errorbar([3], nanmean(far3), nanstd(far3) ./ sqrt(length(far3)), 'k.')
xticks([1:3])
xticklabels({'Saline', '0.005 mg/kg', '0.01 mg/kg'})
xtickangle(45)
ylabel('False Alarm Rate', 'FontSize', 14)
far_axs = gca(far_fig);
far_axs.XAxis.FontSize=12;
if out_path 
    saveas(far_fig, strcat(out_path, 'dcz_false_alarm_rate.fig'))
    saveas(far_fig, strcat(out_path, 'dcz_false_alarm_rate.svg'))
end

* [2024-9-29 Sun] - getting npxls data up to speed 
** finished extraction of 3738
*** ftr extraction for half dcz waiting in queue 
*** DONE: run apFtrAnalysis for updated data
** DONE: debug issue with spontaneousAlphaPhase 
*** maybe to do with missing Miss trials
** DONE: update behavior figs for half dcz
*** behavior stats essentially unchanged 
** networkAlphaPhaseDCZ in queue on insomnia 

* [2024-9-30 Mon] - towards sfn poster 
** TODO: fix issue with nans for reaction time comparison of simultaneous stimuli 
** apFtrAnalysis is running on electro 
*** semshade not working 
** DONE: compare spontaneous network phase across conditions somehow 
** DONE: compare single cell phase modulation across conditions 
** differences firing rates when looking at all cells, but generall not at driven/suppressed 

* [2024-10-1 Tue] - sfn poster continued 
** saline vs dcz network alpha modulation 
*** code for comparisons 
saline = load('saline_network_p_values.mat');
dcz = load('half_dcz_network_p_values.mat');

figure(); plot(ones(1,length(saline.out.num_sig)), saline.out.num_sig ./ saline.out.num_insig, '*');
hold on 
plot(ones(1,length(dcz.out.num_sig))+1, dcz.out.num_sig ./ dcz.out.num_insig, '*');

a = saline.out.num_sig(11:end) ./ (saline.out.num_sig(11:end) + saline.out.num_insig(11:end));
b = dcz.out.num_sig(10:end) ./ (dcz.out.num_sig(10:end) + dcz.out.num_insig(10:end));
figure(); bar([1,2], [mean(a), mean(b)]); hold on; errorbar([1,2], [mean(a), mean(b)], [std(a)/sqrt(length(a)), std(b)/sqrt(length(b))], '.')

a = saline.out.num_sig(1:10) ./ (saline.out.num_sig(1:10) + saline.out.num_insig(1:10));
b = dcz.out.num_sig(1:10) ./ (dcz.out.num_sig(1:10) + dcz.out.num_insig(1:10));
figure(); bar([1,2], [mean(a), mean(b)]); hold on; errorbar([1,2], [mean(a), mean(b)], [std(a)/sqrt(length(a)), std(b)/sqrt(length(b))], '.')
*** way more significant network modulation in 3738 than in 3387
*** trying out with mua and threshold of 0.05
** saline vs dcz single cell alpha modulation
*** code for comparisons 
all_ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat'};

%% saline sessions
% combine animals
ftr_files = horzcat(all_ftr_files(5), all_ftr_files(end));
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
ctx = ftrs(startsWith(ftrs.region, 'SS'),:);
striatum_inds = strcmp(ftrs.region, 'STR') + strcmp(ftrs.region, 'CP');
striatum = ftrs(logical(striatum_inds), :);
clear ftrs 

saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/all_saline/Cortex/Spontaneous_Alpha_Modulation_v2/data.mat');
saline_sessions = unique(saline.out.alpha_modulated.session_id);
ctx_saline_rs_fracs = zeros(1,length(saline_sessions));
ctx_saline_fs_fracs = zeros(1,length(saline_sessions));
ctx_saline_action_fractions = zeros(1,length(saline_sessions));
ctx_saline_inaction_fractions = zeros(1,length(saline_sessions));
ctx_saline_correct_fractions = zeros(1,length(saline_sessions));
ctx_saline_incorrect_fractions = zeros(1,length(saline_sessions));
bg_saline_rs_fracs = zeros(1,length(saline_sessions));
bg_saline_fs_fracs = zeros(1,length(saline_sessions));
bg_saline_action_fractions = zeros(1,length(saline_sessions));
bg_saline_inaction_fractions = zeros(1,length(saline_sessions));
bg_saline_correct_fractions = zeros(1,length(saline_sessions));
bg_saline_incorrect_fractions = zeros(1,length(saline_sessions));
for s = 1:length(saline_sessions)
    session_id = saline_sessions{s};
    tmp = saline.out.alpha_modulated(strcmp(saline.out.alpha_modulated.session_id, session_id),:);
    tmp_all = ctx(strcmp(ctx.session_id, session_id),:);
    ctx_saline_rs_fracs(s) = sum(strcmp(tmp.waveform_class, 'RS')) / sum(strcmp(tmp_all.waveform_class, 'RS'));
    ctx_saline_fs_fracs(s) = sum(strcmp(tmp.waveform_class, 'FS')) / sum(strcmp(tmp_all.waveform_class, 'FS'));
    ctx_saline_action_fractions(s) = sum(tmp.p_action < saline.out.overall_p_threshold) / size(tmp,1);
    ctx_saline_inaction_fractions(s) = sum(tmp.p_inaction < saline.out.overall_p_threshold) / size(tmp,1);
    ctx_saline_correct_fractions(s) = sum(tmp.p_correct < saline.out.overall_p_threshold) / size(tmp,1);
    ctx_saline_incorrect_fractions(s) = sum(tmp.p_incorrect < saline.out.overall_p_threshold) / size(tmp,1);
end

saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/all_saline/Basal_Ganglia/Spontaneous_Alpha_Modulation_v2/data.mat');
bg_saline_rs_fracs = zeros(1,length(saline_sessions));
bg_saline_fs_fracs = zeros(1,length(saline_sessions));
bg_saline_action_fractions = zeros(1,length(saline_sessions));
bg_saline_inaction_fractions = zeros(1,length(saline_sessions));
bg_saline_correct_fractions = zeros(1,length(saline_sessions));
bg_saline_incorrect_fractions = zeros(1,length(saline_sessions));
for s = 1:length(saline_sessions)
    session_id = saline_sessions{s};
    tmp = saline.out.alpha_modulated(strcmp(saline.out.alpha_modulated.session_id, session_id),:);
    tmp_all = striatum(strcmp(striatum.session_id, session_id),:);
    bg_saline_rs_fracs(s) = sum(strcmp(tmp.waveform_class, 'RS')) / sum(strcmp(tmp_all.waveform_class, 'RS'));
    bg_saline_fs_fracs(s) = sum(strcmp(tmp.waveform_class, 'FS')) / sum(strcmp(tmp_all.waveform_class, 'FS'));
    bg_saline_action_fractions(s) = sum(tmp.p_action < saline.out.overall_p_threshold) / size(tmp,1);
    bg_saline_inaction_fractions(s) = sum(tmp.p_inaction < saline.out.overall_p_threshold) / size(tmp,1);
    bg_saline_correct_fractions(s) = sum(tmp.p_correct < saline.out.overall_p_threshold) / size(tmp,1);
    bg_saline_incorrect_fractions(s) = sum(tmp.p_incorrect < saline.out.overall_p_threshold) / size(tmp,1);
end

%% half dcz 
ftr_files = horzcat(all_ftr_files(4), all_ftr_files(end-1));
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
ctx = ftrs(startsWith(ftrs.region, 'SS'),:);
striatum_inds = strcmp(ftrs.region, 'STR') + strcmp(ftrs.region, 'CP');
striatum = ftrs(logical(striatum_inds), :);
clear ftrs 

dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/half_dcz/Cortex/Spontaneous_Alpha_Modulation_v2/data.mat');
dcz_sessions = unique(dcz.out.alpha_modulated.session_id);
ctx_dcz_rs_fracs = zeros(1,length(dcz_sessions));
ctx_dcz_fs_fracs = zeros(1,length(dcz_sessions));
ctx_dcz_action_fractions = zeros(1,length(dcz_sessions));
ctx_dcz_inaction_fractions = zeros(1,length(dcz_sessions));
ctx_dcz_correct_fractions = zeros(1,length(dcz_sessions));
ctx_dcz_incorrect_fractions = zeros(1,length(dcz_sessions));
for s = 1:length(dcz_sessions)
    session_id = dcz_sessions{s};
    tmp = dcz.out.alpha_modulated(strcmp(dcz.out.alpha_modulated.session_id, session_id),:);
    tmp_all = ctx(strcmp(ctx.session_id, session_id),:);
    ctx_dcz_rs_fracs(s) = sum(strcmp(tmp.waveform_class, 'RS')) / sum(strcmp(tmp_all.waveform_class, 'RS'));
    ctx_dcz_fs_fracs(s) = sum(strcmp(tmp.waveform_class, 'FS')) / sum(strcmp(tmp_all.waveform_class, 'FS'));
    ctx_dcz_action_fractions(s) = sum(tmp.p_action < dcz.out.overall_p_threshold) / size(tmp,1);
    ctx_dcz_inaction_fractions(s) = sum(tmp.p_inaction < dcz.out.overall_p_threshold) / size(tmp,1);
    ctx_dcz_correct_fractions(s) = sum(tmp.p_correct < dcz.out.overall_p_threshold) / size(tmp,1);
    ctx_dcz_incorrect_fractions(s) = sum(tmp.p_incorrect < dcz.out.overall_p_threshold) / size(tmp,1);
end

dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/half_dcz/Basal_Ganglia/Spontaneous_Alpha_Modulation_v2/data.mat');
bg_dcz_rs_fracs = zeros(1,length(dcz_sessions));
bg_dcz_fs_fracs = zeros(1,length(dcz_sessions));
bg_dcz_action_fractions = zeros(1,length(dcz_sessions));
bg_dcz_inaction_fractions = zeros(1,length(dcz_sessions));
bg_dcz_correct_fractions = zeros(1,length(dcz_sessions));
bg_dcz_incorrect_fractions = zeros(1,length(dcz_sessions));
for s = 1:length(dcz_sessions)
    session_id = dcz_sessions{s};
    tmp = dcz.out.alpha_modulated(strcmp(dcz.out.alpha_modulated.session_id, session_id),:);
    tmp_all = striatum(strcmp(striatum.session_id, session_id),:);
    bg_dcz_rs_fracs(s) = sum(strcmp(tmp.waveform_class, 'RS')) / sum(strcmp(tmp_all.waveform_class, 'RS'));
    bg_dcz_fs_fracs(s) = sum(strcmp(tmp.waveform_class, 'FS')) / sum(strcmp(tmp_all.waveform_class, 'FS'));
    bg_dcz_action_fractions(s) = sum(tmp.p_action < dcz.out.overall_p_threshold) / size(tmp,1);
    bg_dcz_inaction_fractions(s) = sum(tmp.p_inaction < dcz.out.overall_p_threshold) / size(tmp,1);
    bg_dcz_correct_fractions(s) = sum(tmp.p_correct < dcz.out.overall_p_threshold) / size(tmp,1);
    bg_dcz_incorrect_fractions(s) = sum(tmp.p_incorrect < dcz.out.overall_p_threshold) / size(tmp,1);
end

fig = figure('Position', [1151, 841, 925, 1081]);
tl = tiledlayout(3,2, 'TileSpacing', 'tight');
axs(1) = nexttile;
bar([1,4], [nanmean(ctx_saline_rs_fracs), nanmean(ctx_saline_fs_fracs)], 0.3, 'r')
hold on
errorbar([1,4], [nanmean(ctx_saline_rs_fracs), nanmean(ctx_saline_fs_fracs)], [nanstd(ctx_saline_rs_fracs)/sqrt(sum(~isnan(ctx_saline_rs_fracs))), nanmean(ctx_saline_fs_fracs)/sqrt(sum(~isnan(ctx_saline_fs_fracs)))], 'k.')
bar([2,5], [nanmean(ctx_dcz_rs_fracs), nanmean(ctx_dcz_fs_fracs)], 0.3, 'b')
errorbar([2,5], [nanmean(ctx_dcz_rs_fracs), nanmean(ctx_dcz_fs_fracs)], [nanstd(ctx_dcz_rs_fracs)/sqrt(sum(~isnan(ctx_dcz_rs_fracs))), nanmean(ctx_dcz_fs_fracs)/sqrt(sum(~isnan(ctx_dcz_fs_fracs)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'RS', 'FS'})
ylabel('Phase Moldulated Population Fraction')
title('Cortex')

axs(2) = nexttile;
bar([1,4], [nanmean(bg_saline_rs_fracs), nanmean(bg_saline_fs_fracs)], 0.3, 'r')
hold on
errorbar([1,4], [nanmean(bg_saline_rs_fracs), nanmean(bg_saline_fs_fracs)], [nanstd(bg_saline_rs_fracs)/sqrt(sum(~isnan(bg_saline_rs_fracs))), nanmean(bg_saline_fs_fracs)/sqrt(sum(~isnan(bg_saline_fs_fracs)))], 'k.')
bar([2,5], [nanmean(bg_dcz_rs_fracs), nanmean(bg_dcz_fs_fracs)], 0.3, 'b')
errorbar([2,5], [nanmean(bg_dcz_rs_fracs), nanmean(bg_dcz_fs_fracs)], [nanstd(bg_dcz_rs_fracs)/sqrt(sum(~isnan(bg_dcz_rs_fracs))), nanmean(bg_dcz_fs_fracs)/sqrt(sum(~isnan(bg_dcz_fs_fracs)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'RS', 'FS'})
title('Basal Ganglia')

axs(3) = nexttile;
hold on
bar([1,4], [nanmean(ctx_saline_correct_fractions), nanmean(ctx_saline_incorrect_fractions)], 0.3, 'r')
errorbar([1,4], [nanmean(ctx_saline_correct_fractions), nanmean(ctx_saline_incorrect_fractions)], [nanstd(ctx_saline_correct_fractions)/sqrt(sum(~isnan(ctx_saline_correct_fractions))), nanstd(ctx_saline_incorrect_fractions)/sqrt(sum(~isnan(ctx_saline_incorrect_fractions)))], 'k.')
bar([2,5], [nanmean(ctx_dcz_correct_fractions), nanmean(ctx_dcz_incorrect_fractions)], 0.3, 'b')
errorbar([2,5], [nanmean(ctx_dcz_correct_fractions), nanmean(ctx_dcz_incorrect_fractions)], [nanstd(ctx_dcz_correct_fractions)/sqrt(sum(~isnan(ctx_dcz_correct_fractions))), nanstd(ctx_dcz_incorrect_fractions)/sqrt(sum(~isnan(ctx_dcz_incorrect_fractions)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'Correct', 'Incorrect'})
ylabel('Fraction of Modulated Neurons')

axs(4) = nexttile;
hold on
bar([1,4], [nanmean(bg_saline_correct_fractions), nanmean(bg_saline_incorrect_fractions)], 0.3, 'r')
errorbar([1,4], [nanmean(bg_saline_correct_fractions), nanmean(bg_saline_incorrect_fractions)], [nanstd(bg_saline_correct_fractions)/sqrt(sum(~isnan(bg_saline_correct_fractions))), nanstd(bg_saline_incorrect_fractions)/sqrt(sum(~isnan(bg_saline_incorrect_fractions)))], 'k.')
bar([2,5], [nanmean(bg_dcz_correct_fractions), nanmean(bg_dcz_incorrect_fractions)], 0.3, 'b')
errorbar([2,5], [nanmean(bg_dcz_correct_fractions), nanmean(bg_dcz_incorrect_fractions)], [nanstd(bg_dcz_correct_fractions)/sqrt(sum(~isnan(bg_dcz_correct_fractions))), nanstd(bg_dcz_incorrect_fractions)/sqrt(sum(~isnan(bg_dcz_incorrect_fractions)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'Correct', 'Incorrect'})

axs(5) = nexttile;
hold on
bar([1,4], [nanmean(ctx_saline_action_fractions), nanmean(ctx_saline_inaction_fractions)], 0.3, 'r')
errorbar([1,4], [nanmean(ctx_saline_action_fractions), nanmean(ctx_saline_inaction_fractions)], [nanstd(ctx_saline_action_fractions)/sqrt(sum(~isnan(ctx_saline_action_fractions))), nanstd(ctx_saline_inaction_fractions)/sqrt(sum(~isnan(ctx_saline_inaction_fractions)))], 'k.')
bar([2,5], [nanmean(ctx_dcz_action_fractions), nanmean(ctx_dcz_inaction_fractions)], 0.3, 'b')
errorbar([2,5], [nanmean(ctx_dcz_action_fractions), nanmean(ctx_dcz_inaction_fractions)], [nanstd(ctx_dcz_action_fractions)/sqrt(sum(~isnan(ctx_dcz_action_fractions))), nanstd(ctx_dcz_inaction_fractions)/sqrt(sum(~isnan(ctx_dcz_inaction_fractions)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'Action', 'Inaction'})
ylabel('Fraction of Modulated Neurons')

axs(6) = nexttile;
hold on
bar([1,4], [nanmean(bg_saline_action_fractions), nanmean(bg_saline_inaction_fractions)], 0.3, 'r')
errorbar([1,4], [nanmean(bg_saline_action_fractions), nanmean(bg_saline_inaction_fractions)], [nanstd(bg_saline_action_fractions)/sqrt(sum(~isnan(bg_saline_action_fractions))), nanstd(bg_saline_inaction_fractions)/sqrt(sum(~isnan(bg_saline_inaction_fractions)))], 'k.')
bar([2,5], [nanmean(bg_dcz_action_fractions), nanmean(bg_dcz_inaction_fractions)], 0.3, 'b')
errorbar([2,5], [nanmean(bg_dcz_action_fractions), nanmean(bg_dcz_inaction_fractions)], [nanstd(bg_dcz_action_fractions)/sqrt(sum(~isnan(bg_dcz_action_fractions))), nanstd(bg_dcz_inaction_fractions)/sqrt(sum(~isnan(bg_dcz_inaction_fractions)))], 'k.')
xticks([1.5, 4.5])
xticklabels({'Action', 'Inaction'})
ylim([0,1.1])

* [2024-10-11 Fri] - catching up on analysis 
** running npxls_extract on remaining 3755 recordings 
** DONE: generate ap features for 3755 
** average psych curves for phase 5 animals
*** comapre animals 
ftr_files = {{'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat'}, ...
    {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat'}, ...
    {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--10004_geno-Wt_phase--5_lowTargetProbability.mat'}, ...
    {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--10005_geno-Wt_phase--5_lowTargetProbability.mat'}};
comparePsychCurves(ftr_files, true, false, {'3738', '3755', '10004', '10005'})
compareReactionTimeCurves(ftr_files, true, false, {'3738', '3755', '10004', '10005'})
*** average across animals 
ftr_files = {{'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--10004_geno-Wt_phase--5_lowTargetProbability.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--10003_geno-Wt_phase--5_lowTargetProbability.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--10005_geno-Wt_phase--5_lowTargetProbability.mat'}};
comparePsychCurves(ftr_files, true, false, {'All Sessions'})
compareReactionTimeCurves(ftr_files, true, false, {'All Sessions'})
** put slides together for expert phase 5 sessions 
** TODO: clean up slrt_extract, slrt_ftr_extraction 

* [2024-10-14 Mon] - ideas for papers and grant 
** phase modulation and task performance 
*** 2 animals with S1 implants analyzed
*** 1 animal with PFC implants unanalyzed 
*** only analyzed phase 3 sessions, haven't looked at phase 5 sessions 
**** not sure if reasonable to combine anyway 
*** single cell results very clear, network results less so 
*** issues 
**** purely observational (possible for a paper, less so for a grant)
**** concerned by possibility that results are a product of low number 
of miss/false alarm trials compared to number of hit/correct rejection 
trials 
** work presented at sfn 
*** 2 animals with S1 implants and chemogenetic activation of LC 
*** 2 is low N 
*** neural recordings don't provide hint of mechanism by which LC 
stim improves behavior 
*** behavioral effects are modest 
*** history-dependence is interesting, and fairly robust, but again 
issue with disconnect between neural recordings and mechanism 
** modified version of the task (simultaneous stimuli)
*** 4 animals with behavior, 2 with npxls (1 S1, 1 PFC), 1 with LC 
activation (w/ npxls in PFC)
*** results so far fairly clean/consistent 
*** haven't analyzed PFC yet, but think

* [2024-10-15 Tue] - starting to analyze contrasting stimuli neural data 
** left minus right amp firing rates
*** boilerplate 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
amps = -5:5;
to_correct = -10:2:10;
tmp = fixLeftMinusRightPSTHS(ap_ftr, slrt_ftr);
ctx = tmp(startsWith(tmp.region, 'SS'), :);
cp = tmp(strcmp(tmp.region, 'CP'), :);
fs = cp(strcmp(cp.waveform_class, 'FS'), :);
rs = cp(strcmp(cp.waveform_class, 'RS'), :);
*** regardless of outcome 
figure();
hold on 
cmap = colormap('jet');
cinds = round(linspace(1,256,length(amps)));
for a = 1:length(amps)
    expr = sprintf('amp_%i_avg_psth', amps(a));
    mat = cell2mat(fs.(expr));
    semshade(mat ./ 0.1, 0.3, cmap(cinds(a),:), cmap(cinds(a),:), linspace(-2.8,4.9,80), 1, num2str(amps(a)));
end
leg = legend();
title(leg, 'Stimulus Contrast')
xlabel('Time (s)')
ylabel('Firing Rate (Hz)')
xlim([-2.8,4.8])
*** ambiguous stimuli by outcome 
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
figure()
tl = tiledlayout(1,4);
axs = zeros(1,4);
for o = 1:length(outcomes)
    axs(o) = nexttile;
    expr = sprintf('amp_0_avg_psth_%s', outcomes{o});
    disp(expr)
    mat = cell2mat(rs.(expr));
    semshade(mat ./ 0.1, 0.3, 'k', 'k', linspace(-2.8,4.9,80), 1);
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
    xlim([-2.8,4.8])
end
unifyYLimits(gcf)
*** stimulus contrast and outcome 
% start with no-go 
neg_amps = amps(amps < 0);
pos_amps = amps(amps > 0);
unamb_amps = [neg_amps, pos_amps];
figure();
tl = tiledlayout(1,4);
axs = zeros(1,4);
axs(1) = nexttile;  hold on;
axs(2) = nexttile; hold on;
axs(3) = nexttile; hold on;
axs(4) = nexttile; hold on;
for a = 1:length(neg_amps)
    % correct rejection 
    expr = sprintf('amp_%i_avg_psth_CR', neg_amps(a));
    mat = cell2mat(fs.(expr));
    axes(axs(3))
    semshade(mat ./ 0.1, 0.3, cmap(cinds(a),:), cmap(cinds(a),:), linspace(-2.8,4.9,80), 1, num2str(neg_amps(a)));
    % false alarm 
    expr = sprintf('amp_%i_avg_psth_FA', neg_amps(a));
    mat = cell2mat(fs.(expr));
    axes(axs(4))
    semshade(mat ./ 0.1, 0.3, cmap(cinds(a),:), cmap(cinds(a),:), linspace(-2.8,4.9,80), 1, num2str(neg_amps(a)));
end
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    axes(axs(o))
    expr = sprintf('amp_0_avg_psth_%s', outcomes{o});
    disp(expr)
    mat = cell2mat(fs.(expr));
    semshade(mat ./ 0.1, 0.3, cmap(cinds(length(neg_amps)+1),:), cmap(cinds(length(neg_amps)+1),:), linspace(-2.8,4.9,80), 1, '0');
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
end
for a = 1:length(pos_amps)
    % correct rejection 
    expr = sprintf('amp_%i_avg_psth_Hit', pos_amps(a));
    mat = cell2mat(fs.(expr));
    axes(axs(1))
    semshade(mat ./ 0.1, 0.3, cmap(cinds(length(neg_amps)+1+a),:), cmap(cinds(length(neg_amps)+1+a),:), linspace(-2.8,4.9,80), 1, num2str(pos_amps(a)));
    % false alarm 
    expr = sprintf('amp_%i_avg_psth_Miss', pos_amps(a));
    mat = cell2mat(fs.(expr));
    axes(axs(2))
    semshade(mat ./ 0.1, 0.3, cmap(cinds(length(neg_amps)+1+a),:), cmap(cinds(length(neg_amps)+1+a),:), linspace(-2.8,4.9,80), 1, num2str(pos_amps(a)));
end
unifyYLimits(gcf)
for i = 1:4
    axes(axs(i)); xlim([-2.8,4.8])
end
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
*** issues
**** sessions that needed fixing *fixed*
~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-10-04_subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat
~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-07-21_subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat

* [2024-10-16 Wed] - more neural analysis contrasting stimuli 
** made above into a function 
** plotting contrast stim firing rates 
ap_ftr = fixLeftMinusRightPSTHS(ap_ftr, slrt_ftr);
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/';
firingRatesByStimContrast(ap_ftr, slrt_ftr, 'PFC', out_path)
** running single cell spontaneous alpha phase modulation on insomnia 

* [2024-10-17 Thu] - fleshing out results 
** 10003 reached expert performance on phase 3 
** fairly clean differences between go probabilities for 10005 
** added PS and TS units to analysis of phase 5 neural data 
** TODO: try doing third cluster of negative spiking units (very wide waveforms)
*** rerun negativeSpikeWidths 
sessionIDs
map1 = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3738-20240702/regionMap.mat');
map2 = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3755-20240828/regionMap.mat');
map3 = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/1075-20241202/regionMap.mat');
ap_dir = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/AP/';
% ap_files = horzcat(expert_3387_session_ids, expert_3738_session_ids, ... 
%     dcz_3387_session_ids, half_dcz_3387_session_ids, saline_3387_session_ids, ...
%     dcz_3738_session_ids, half_dcz_3738_session_ids, saline_3738_session_ids);
% ap_files = horzcat(expert_3387_session_ids, expert_3738_session_ids, expert_3755_session_ids, expert_1075_session_ids);
% ap_files = expert_3387_session_ids;
% ap_files = expert_3738_session_ids;
ap_files = expert_1075_session_ids;
for i = 1:length(ap_files)
    ap_files{i} = strcat(ap_files{i}, '.mat');
    if contains(ap_files{i}, '3755')
        regMaps{i} = map2.regMap;
    elseif contains(ap_files{i}, '1075')
        regMaps{i} = map3.regMap;
    else
        regMaps{i} = map1.regMap;
    end
end
negativeSpikeWidths(ap_dir, ap_files, regMaps)
*** DONE: make negativeSpikeWidths.m compatible with PFC recordings 
** DONE: look into dorso-ventral subdivision of prelimbic cortex 
addpath(genpath('./'))
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
pl = ap_ftr(startsWith(ap_ftr.region, 'PL'), :);
pl_rs = pl(strcmp(pl.waveform_class, 'RS'), :);
pl_fs = pl(strcmp(pl.waveform_class, 'FS'), :);
pl_ps = pl(strcmp(pl.waveform_class, 'PS'), :);
pl_ts = pl(strcmp(pl.waveform_class, 'TS'), :);
halfway = mean(pl.position(:,2));
units = pl_rs(pl_rs.position(:,2) <= halfway, :);
ttl = 'dPL RS';
dfig = figure('Visible', 'off', 'Position', [1215, 1419, 1604, 407]);
tl = tiledlayout(1,4);
axs = zeros(1,4);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    axs(o) = nexttile;
    mat = cell2mat(units.(strcat('left_trigger_aligned_avg_psth_', outcomes{o})));
    semshade(mat ./ 0.1, 0.3, 'k', 'k', linspace(-2.8,4.9,80), 1);
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
    xlim([-2.8,4.8])
end
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
title(tl, ttl)
unifyYLimits(dfig)
% saveas(dfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/dPL_RS_outcome.svg')
% saveas(dfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/dPL_RS_outcome.fig')
units = pl_rs(pl_rs.position(:,2) > halfway, :);
ttl = 'vPL RS';
vfig = figure('Visible', 'off', 'Position', [1215, 1419, 1604, 407]);
tl = tiledlayout(1,4);
axs = zeros(1,4);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    axs(o) = nexttile;
    mat = cell2mat(units.(strcat('left_trigger_aligned_avg_psth_', outcomes{o})));
    semshade(mat ./ 0.1, 0.3, 'k', 'k', linspace(-2.8,4.9,80), 1);
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
    xlim([-2.8,4.8])
end
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
title(tl, ttl)
unifyYLimits(vfig)
% saveas(vfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/vPL_RS_outcome.svg')
% saveas(vfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/vPL_RS_outcome.fig')
units = pl_fs(pl_fs.position(:,2) <= halfway, :);
ttl = 'dPL FS';
dfig = figure('Visible', 'off', 'Position', [1215, 1419, 1604, 407]);
tl = tiledlayout(1,4);
axs = zeros(1,4);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    axs(o) = nexttile;
    mat = cell2mat(units.(strcat('left_trigger_aligned_avg_psth_', outcomes{o})));
    semshade(mat ./ 0.1, 0.3, 'k', 'k', linspace(-2.8,4.9,80), 1);
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
    xlim([-2.8,4.8])
end
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
title(tl, ttl)
unifyYLimits(dfig)
% saveas(dfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/dPL_FS_outcome.svg')
% saveas(dfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/dPL_FS_outcome.fig')
units = pl_fs(pl_fs.position(:,2) > halfway, :);
ttl = 'vPL FS';
vfig = figure('Visible', 'off', 'Position', [1215, 1419, 1604, 407]);
tl = tiledlayout(1,4);
axs = zeros(1,4);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    axs(o) = nexttile;
    mat = cell2mat(units.(strcat('left_trigger_aligned_avg_psth_', outcomes{o})));
    semshade(mat ./ 0.1, 0.3, 'k', 'k', linspace(-2.8,4.9,80), 1);
    t = outcomes{o};
    if strcmp(t, 'CR')
        t = 'Correct Rejection';
    elseif strcmp(t, 'FA');
        t = 'False Alarm';
    end 
    title(t)
    xlim([-2.8,4.8])
end
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
title(tl, ttl)
unifyYLimits(vfig)
% saveas(vfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/vPL_FS_outcome.svg')
% saveas(vfig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/vPL_FS_outcome.fig')
% heatmaps fs
[~, inds] = sort(pl_fs.position(:,2));
mat = cell2mat(pl_fs(inds,:).left_trigger_aligned_avg_psth_Hit);
fsh_fig = figure();
imagesc(linspace(-2.8,4.9,80), pl_fs(inds,:).position(:,2), mat ./ 0.1)
xlabel('Time (s)')
ylabel('Depth')
title('FS')
% saveas(fsh_fig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/PL_FS_depth_heatmap.fig')
% saveas(fsh_fig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/PL_FS_depth_heatmap.svg')
% heatmaps rs
[~, inds] = sort(pl_rs.position(:,2));
mat = cell2mat(pl_rs(inds,:).left_trigger_aligned_avg_psth_Hit);
rsh_fig = figure();
imagesc(linspace(-2.8,4.9,80), pl_rs(inds,:).position(:,2), mat ./ 0.1)
xlabel('Time (s)')
ylabel('Depth')
title('RS')
% saveas(rsh_fig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/PL_RS_depth_heatmap.fig')
% saveas(rsh_fig, '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/PL_RS_depth_heatmap.svg')
*** strong dorsoventral differences in neuronal responses to reward, especially in FS cells 
*** FS cells seem to have three functional-anotomical groupings in PL 
*** DONE: flesh out heat maps for duplicate y-positions 
** little things 
*** DONE: fix titles in phase modulation figures (currently mpfc mislabeled amygdala)
*** DONE: titles - Cortex -> Somatosensory Cortex

* [2024-10-21 Mon] - spatial firing rate plots 
** spatial firing rate plots 
*** pfc phase 5 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
probe_type = 'PFC';
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5/spatial_fr_maps/';
spatialFiringRatePlots(ap_ftr, slrt_ftr, probe_type, out_path)
*** s1 phase 5 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
probe_type = 'S1';
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3738_phase5/spatial_fr_maps/';
spatialFiringRatePlots(ap_ftr, slrt_ftr, probe_type, out_path)
*** pfc phase 5 saline
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat
probe_type = 'PFC';
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5_Saline/spatial_fr_maps/';
spatialFiringRatePlots(ap_ftr, slrt_ftr, probe_type, out_path)
*** pfc phase 5 dcz
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat
probe_type = 'PFC';
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/3755_phase5_DCZ/spatial_fr_maps/';
spatialFiringRatePlots(ap_ftr, slrt_ftr, probe_type, out_path)
*** DONE: add other outcomes 
** PFC analysis 
*** strong dorsoventral differences in neuronal responses to reward, especially in FS cells 
*** FS cells seem to have three functional-anotomical groupings in PL 
*** DONE: average firing rates based on functional-anatomical groupings 
** single cells across days 
*** DONE: single cell firing rate comparisons across conditions 
% pfc 
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase5_g0.mat');
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase5_g0.mat');
il_dcz = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'IL'), :);
il_saline = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'IL'), :);
il_rs_dcz = il_dcz(strcmp(il_dcz.waveform_class, 'RS'), :);
il_fs_dcz = il_dcz(strcmp(il_dcz.waveform_class, 'FS'), :);
il_ps_dcz = il_dcz(strcmp(il_dcz.waveform_class, 'PS'), :);
il_ts_dcz = il_dcz(strcmp(il_dcz.waveform_class, 'TS'), :);
il_rs_saline = il_saline(strcmp(il_saline.waveform_class, 'RS'), :);
il_fs_saline = il_saline(strcmp(il_saline.waveform_class, 'FS'), :);
il_ps_saline = il_saline(strcmp(il_saline.waveform_class, 'PS'), :);
il_ts_saline = il_saline(strcmp(il_saline.waveform_class, 'TS'), :);
frAcrossDaysCompareConds(il_rs_dcz, il_rs_saline)
pl_dcz = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'PL'), :);
pl_saline = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'PL'), :);
pl_rs_dcz = pl_dcz(strcmp(pl_dcz.waveform_class, 'RS'), :);
pl_fs_dcz = pl_dcz(strcmp(pl_dcz.waveform_class, 'FS'), :);
pl_ps_dcz = pl_dcz(strcmp(pl_dcz.waveform_class, 'PS'), :);
pl_ts_dcz = pl_dcz(strcmp(pl_dcz.waveform_class, 'TS'), :);
pl_rs_saline = pl_saline(strcmp(pl_saline.waveform_class, 'RS'), :);
pl_fs_saline = pl_saline(strcmp(pl_saline.waveform_class, 'FS'), :);
pl_ps_saline = pl_saline(strcmp(pl_saline.waveform_class, 'PS'), :);
pl_ts_saline = pl_saline(strcmp(pl_saline.waveform_class, 'TS'), :);
frAcrossDaysCompareConds(pl_fs_dcz, pl_fs_saline)
% s1
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat');
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat');
ctx_dcz = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'SS'), :);
ctx_saline = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'SS'), :);
ctx_rs_dcz = ctx_dcz(strcmp(ctx_dcz.waveform_class, 'RS'), :);
ctx_fs_dcz = ctx_dcz(strcmp(ctx_dcz.waveform_class, 'FS'), :);
ctx_ps_dcz = ctx_dcz(strcmp(ctx_dcz.waveform_class, 'PS'), :);
ctx_ts_dcz = ctx_dcz(strcmp(ctx_dcz.waveform_class, 'TS'), :);
ctx_rs_saline = ctx_saline(strcmp(ctx_saline.waveform_class, 'RS'), :);
ctx_fs_saline = ctx_saline(strcmp(ctx_saline.waveform_class, 'FS'), :);
ctx_ps_saline = ctx_saline(strcmp(ctx_saline.waveform_class, 'PS'), :);
ctx_ts_saline = ctx_saline(strcmp(ctx_saline.waveform_class, 'TS'), :);
frAcrossDaysCompareConds(ctx_fs_dcz, ctx_fs_saline)
frAcrossDaysCompareConds(ctx_rs_dcz, ctx_rs_saline)
** training 3755 back up 
*** not ready - dprime = 0.666

* [2024-10-22 Tue] - anatomical-functional FS divisions 
** anatomical-functional FRs 
*** boiler plate 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase5_g0.mat
*** prelimbic fs
pl = ap_ftr(startsWith(ap_ftr.region, 'PL'), :);
pl_rs = pl(strcmp(pl.waveform_class, 'RS'), :);
pl_fs = pl(strcmp(pl.waveform_class, 'FS'), :);
pl_ps = pl(strcmp(pl.waveform_class, 'PS'), :);
pl_ts = pl(strcmp(pl.waveform_class, 'TS'), :);
super = pl_fs(pl_fs.position(:,2)>2600,:);
mid = pl_fs(pl_fs.position(:,2)<2600 & pl_fs.position(:,2)>2350,:);
deep = pl_fs(pl_fs.position(:,2)<2350,:);
super_hit = cell2mat(super.left_trigger_aligned_avg_fr_Hit);
mid_hit = cell2mat(mid.left_trigger_aligned_avg_fr_Hit);
deep_hit = cell2mat(deep.left_trigger_aligned_avg_fr_Hit);
super_miss = cell2mat(super.left_trigger_aligned_avg_fr_Miss);
mid_miss = cell2mat(mid.left_trigger_aligned_avg_fr_Miss);
deep_miss = cell2mat(deep.left_trigger_aligned_avg_fr_Miss);
super_cr = cell2mat(super.left_trigger_aligned_avg_fr_CR);
mid_cr = cell2mat(mid.left_trigger_aligned_avg_fr_CR);
deep_cr = cell2mat(deep.left_trigger_aligned_avg_fr_CR);
super_fa = cell2mat(super.left_trigger_aligned_avg_fr_FA);
mid_fa = cell2mat(mid.left_trigger_aligned_avg_fr_FA);
deep_fa = cell2mat(deep.left_trigger_aligned_avg_fr_FA);
time = linspace(-2.8,4.9,80);
fig = figure();
tl = tiledlayout(1,4);
axs = zeros(1,4);
axs(1) = nexttile;
hold on
semshade(super_hit, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_hit, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_hit, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Hit')
xlim([-2.8,4.9])
axs(2) = nexttile;
hold on
semshade(super_miss, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_miss, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_miss, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Miss')
xlim([-2.8,4.9])
axs(3) = nexttile;
hold on
semshade(super_cr, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_cr, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_cr, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Correct Rejection')
xlim([-2.8,4.9])
axs(4) = nexttile;
hold on
semshade(super_fa, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_fa, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_fa, 0.3, 'k', 'k', time, 1, 'Ventral');
title('False Alarm')
xlim([-2.8,4.9])
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
legend()
unifyYLimits(fig)
title(tl, 'Prelimbic FS')
*** infralimbic fs
il = ap_ftr(startsWith(ap_ftr.region, 'IL'), :);
il_rs = il(strcmp(il.waveform_class, 'RS'), :);
il_fs = il(strcmp(il.waveform_class, 'FS'), :);
il_ps = il(strcmp(il.waveform_class, 'PS'), :);
il_ts = il(strcmp(il.waveform_class, 'TS'), :);
super = il_fs(il_fs.position(:,2)>1950,:);
mid = il_fs(il_fs.position(:,2)<1950 & il_fs.position(:,2)>1750,:);
deep = il_fs(il_fs.position(:,2)<1750,:);
super_hit = cell2mat(super.left_trigger_aligned_avg_fr_Hit);
mid_hit = cell2mat(mid.left_trigger_aligned_avg_fr_Hit);
deep_hit = cell2mat(deep.left_trigger_aligned_avg_fr_Hit);
super_miss = cell2mat(super.left_trigger_aligned_avg_fr_Miss);
mid_miss = cell2mat(mid.left_trigger_aligned_avg_fr_Miss);
deep_miss = cell2mat(deep.left_trigger_aligned_avg_fr_Miss);
super_cr = cell2mat(super.left_trigger_aligned_avg_fr_CR);
mid_cr = cell2mat(mid.left_trigger_aligned_avg_fr_CR);
deep_cr = cell2mat(deep.left_trigger_aligned_avg_fr_CR);
super_fa = cell2mat(super.left_trigger_aligned_avg_fr_FA);
mid_fa = cell2mat(mid.left_trigger_aligned_avg_fr_FA);
deep_fa = cell2mat(deep.left_trigger_aligned_avg_fr_FA);
time = linspace(-2.8,4.9,80);
fig = figure();
tl = tiledlayout(1,4);
axs = zeros(1,4);
axs(1) = nexttile;
hold on
semshade(super_hit, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_hit, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_hit, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Hit')
xlim([-2.8,4.9])
axs(2) = nexttile;
hold on
semshade(super_miss, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_miss, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_miss, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Miss')
xlim([-2.8,4.9])
axs(3) = nexttile;
hold on
semshade(super_cr, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_cr, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_cr, 0.3, 'k', 'k', time, 1, 'Ventral');
title('Correct Rejection')
xlim([-2.8,4.9])
axs(4) = nexttile;
hold on
semshade(super_fa, 0.3, 'b', 'b', time, 1, 'Dorsal');
semshade(mid_fa, 0.3, 'r', 'r', time, 1, 'Central');
semshade(deep_fa, 0.3, 'k', 'k', time, 1, 'Ventral');
title('False Alarm')
xlim([-2.8,4.9])
xlabel(tl, 'Time (s)')
ylabel(tl, 'Firing Rate (Hz)')
legend()
unifyYLimits(fig)
title(tl, 'Infralimbic FS')

* [2024-10-23 Wed] - looking into animal differences / differences between conditions 
** cortical RS units 
*** 3387 
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat');
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat');
full_dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat');
time = linspace(-2.8, 4.9, 80);
saline_ctx = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'SS'),:);
dcz_ctx = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'SS'),:);
full_dcz_ctx = full_dcz.ap_ftr(startsWith(full_dcz.ap_ftr.region, 'SS'),:);
saline_rs = saline_ctx(strcmp(saline_ctx.waveform_class, 'RS'),:);
dcz_rs = dcz_ctx(strcmp(dcz_ctx.waveform_class, 'RS'),:);
full_dcz_rs = full_dcz_ctx(strcmp(full_dcz_ctx.waveform_class, 'RS'),:);

% all rs 
figure();
hold on
saline_mat = cell2mat(saline_rs.left_trigger_aligned_avg_fr_Hit);
dcz_mat = cell2mat(dcz_rs.left_trigger_aligned_avg_fr_Hit);
full_dcz_mat = cell2mat(full_dcz_rs.left_trigger_aligned_avg_fr_Hit);
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');
semshade(full_dcz_mat, 0.3, 'g', 'g', time, 1, 'full dcz');

% driven rs 
saline_driven_rs = saline_rs(cell2mat(saline_rs.is_stim_modulated_Hit) == 1, :);
dcz_driven_rs = dcz_rs(cell2mat(dcz_rs.is_stim_modulated_Hit) == 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_rs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_rs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% undriven rs 
saline_driven_rs = saline_rs(cell2mat(saline_rs.is_stim_modulated_Hit) ~= 1, :);
dcz_driven_rs = dcz_rs(cell2mat(dcz_rs.is_stim_modulated_Hit) ~= 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_rs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_rs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% average firing rates 
figure();
hold on 
saline_mat = cell2mat(saline_rs.avg_trial_fr);
dcz_mat = cell2mat(dcz_rs.avg_trial_fr);
scatter(zeros(1,length(dcz_mat)), dcz_mat, 'b')
scatter(ones(1,length(saline_mat)), saline_mat, 'r')

% cleaned 
saline_rs_cleaned = saline_rs(cell2mat(saline_rs.avg_trial_fr) < 40,:);
dcz_rs_cleaned = dcz_rs(cell2mat(dcz_rs.avg_trial_fr) < 40,:);
figure();
dcz_mat = cell2mat(dcz_rs_cleaned.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_rs_cleaned.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

*** 3738 
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat');
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat');
full_dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat');
time = linspace(-2.8, 4.9, 80);
saline_ctx = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'SS'),:);
dcz_ctx = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'SS'),:);
full_dcz_ctx = full_dcz.ap_ftr(startsWith(full_dcz.ap_ftr.region, 'SS'),:);
saline_rs = saline_ctx(strcmp(saline_ctx.waveform_class, 'RS'),:);
dcz_rs = dcz_ctx(strcmp(dcz_ctx.waveform_class, 'RS'),:);
full_dcz_rs = full_dcz_ctx(strcmp(full_dcz_ctx.waveform_class, 'RS'),:);

% all rs 
figure();
hold on
saline_mat = cell2mat(saline_rs.left_trigger_aligned_avg_fr_Hit);
dcz_mat = cell2mat(dcz_rs.left_trigger_aligned_avg_fr_Hit);
full_dcz_mat = cell2mat(full_dcz_rs.left_trigger_aligned_avg_fr_Hit);
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');
semshade(full_dcz_mat, 0.3, 'g', 'g', time, 1, 'full dcz');

% driven rs 
saline_driven_rs = saline_rs(cell2mat(saline_rs.is_stim_modulated_Hit) == 1, :);
dcz_driven_rs = dcz_rs(cell2mat(dcz_rs.is_stim_modulated_Hit) == 1, :);
full_dcz_driven_rs = full_dcz_rs(cell2mat(full_dcz_rs.is_stim_modulated_Hit) == 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_rs.left_trigger_aligned_avg_fr_Hit);
full_dcz_mat = cell2mat(full_dcz_driven_rs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_rs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');
semshade(full_dcz_mat, 0.3, 'g', 'g', time, 1, 'full dcz');

% undriven rs 
saline_driven_rs = saline_rs(cell2mat(saline_rs.is_stim_modulated_Hit) ~= 1, :);
dcz_driven_rs = dcz_rs(cell2mat(dcz_rs.is_stim_modulated_Hit) ~= 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_rs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_rs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% average firing rates 
figure();
hold on 
saline_mat = cell2mat(saline_rs.avg_trial_fr);
dcz_mat = cell2mat(dcz_rs.avg_trial_fr);
scatter(zeros(1,length(dcz_mat)), dcz_mat, 'b')
scatter(ones(1,length(saline_mat)), saline_mat, 'r')

% cleaned 
saline_rs_cleaned = saline_rs(cell2mat(saline_rs.avg_trial_fr) < 40,:);
dcz_rs_cleaned = dcz_rs(cell2mat(dcz_rs.avg_trial_fr) < 40,:);
figure();
dcz_mat = cell2mat(dcz_rs_cleaned.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_rs_cleaned.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

** cortical fs units 
*** 3387 
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat');
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat');
full_dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat');
time = linspace(-2.8, 4.9, 80);
saline_ctx = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'SS'),:);
dcz_ctx = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'SS'),:);
full_dcz_ctx = full_dcz.ap_ftr(startsWith(full_dcz.ap_ftr.region, 'SS'),:);
saline_fs = saline_ctx(strcmp(saline_ctx.waveform_class, 'FS'),:);
dcz_fs = dcz_ctx(strcmp(dcz_ctx.waveform_class, 'FS'),:);
full_dcz_fs = full_dcz_ctx(strcmp(full_dcz_ctx.waveform_class, 'FS'),:);

% all fs 
figure();
hold on
saline_mat = cell2mat(saline_fs.left_trigger_aligned_avg_fr_Hit);
dcz_mat = cell2mat(dcz_fs.left_trigger_aligned_avg_fr_Hit);
full_dcz_mat = cell2mat(full_dcz_fs.left_trigger_aligned_avg_fr_Hit);
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');
semshade(full_dcz_mat, 0.3, 'g', 'g', time, 1, 'full dcz');

% driven fs 
saline_driven_fs = saline_fs(cell2mat(saline_fs.is_stim_modulated_Hit) == 1, :);
dcz_driven_fs = dcz_fs(cell2mat(dcz_fs.is_stim_modulated_Hit) == 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_fs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_fs.left_trigger_aligned_avg_fr_Hit);
hold on 
%semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
plot(time, dcz_mat, 'b')
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% undriven fs 
saline_driven_fs = saline_fs(cell2mat(saline_fs.is_stim_modulated_Hit) ~= 1, :);
dcz_driven_fs = dcz_fs(cell2mat(dcz_fs.is_stim_modulated_Hit) ~= 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_fs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_fs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% average firing rates 
figure();
hold on 
saline_mat = cell2mat(saline_fs.avg_trial_fr);
dcz_mat = cell2mat(dcz_fs.avg_trial_fr);
scatter(zeros(1,length(dcz_mat)), dcz_mat, 'b')
scatter(ones(1,length(saline_mat)), saline_mat, 'r')

% cleaned 
saline_fs_cleaned = saline_fs(cell2mat(saline_fs.avg_trial_fr) < 40,:);
dcz_fs_cleaned = dcz_fs(cell2mat(dcz_fs.avg_trial_fr) < 40,:);
figure();
dcz_mat = cell2mat(dcz_fs_cleaned.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_fs_cleaned.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

*** 3387 
saline = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat');
dcz = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat');
time = linspace(-2.8, 4.9, 80);
saline_ctx = saline.ap_ftr(startsWith(saline.ap_ftr.region, 'SS'),:);
dcz_ctx = dcz.ap_ftr(startsWith(dcz.ap_ftr.region, 'SS'),:);
full_dcz_ctx = full_dcz.ap_ftr(startsWith(full_dcz.ap_ftr.region, 'SS'),:);
saline_fs = saline_ctx(strcmp(saline_ctx.waveform_class, 'FS'),:);
dcz_fs = dcz_ctx(strcmp(dcz_ctx.waveform_class, 'FS'),:);
full_dcz_fs = full_dcz_ctx(strcmp(full_dcz_ctx.waveform_class, 'FS'),:);

% all fs 
figure();
hold on
saline_mat = cell2mat(saline_fs.left_trigger_aligned_avg_fr_Hit);
dcz_mat = cell2mat(dcz_fs.left_trigger_aligned_avg_fr_Hit);
full_dcz_mat = cell2mat(full_dcz_fs.left_trigger_aligned_avg_fr_Hit);
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');
semshade(full_dcz_mat, 0.3, 'g', 'g', time, 1, 'full dcz');

% driven fs 
saline_driven_fs = saline_fs(cell2mat(saline_fs.is_stim_modulated_Hit) == 1, :);
dcz_driven_fs = dcz_fs(cell2mat(dcz_fs.is_stim_modulated_Hit) == 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_fs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_fs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% undriven fs 
saline_driven_fs = saline_fs(cell2mat(saline_fs.is_stim_modulated_Hit) ~= 1, :);
dcz_driven_fs = dcz_fs(cell2mat(dcz_fs.is_stim_modulated_Hit) ~= 1, :);
figure();
dcz_mat = cell2mat(dcz_driven_fs.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_driven_fs.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

% average firing rates 
figure();
hold on 
saline_mat = cell2mat(saline_fs.avg_trial_fr);
dcz_mat = cell2mat(dcz_fs.avg_trial_fr);
scatter(zeros(1,length(dcz_mat)), dcz_mat, 'b')
scatter(ones(1,length(saline_mat)), saline_mat, 'r')

% cleaned 
saline_fs_cleaned = saline_fs(cell2mat(saline_fs.avg_trial_fr) < 40,:);
dcz_fs_cleaned = dcz_fs(cell2mat(dcz_fs.avg_trial_fr) < 40,:);
figure();
dcz_mat = cell2mat(dcz_fs_cleaned.left_trigger_aligned_avg_fr_Hit);
saline_mat = cell2mat(saline_fs_cleaned.left_trigger_aligned_avg_fr_Hit);
hold on 
semshade(dcz_mat, 0.3, 'b', 'b', time, 1, 'dcz');
semshade(saline_mat, 0.3, 'r', 'r', time, 1, 'saline');

* [2024-10-25 Fri] - froze a brain 
** froze 3738 brain 

* [2024-10-28 Mon] - working through alpha modulation figures 
** alpha modulation by region and cell type 
** alpha modulation by trial outcome 
** example of single cells 

* [2024-10-30 Wed] - behavior for alpha modulation paper 
** alpha modulation behavior 
addpath(genpath('./'))
ftr_files = {'subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    'subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    'subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    'subj--1075-20241202_geno--Wt_npxls--R-npx10_phase--phase3_g0.mat'};
for i = 1:length(ftr_files)
    ftr_files{i} = strcat('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/', ftr_files{i});
end
plotSlrtFtrs(ftr_files, true, false)

* [2024-10-31 Thu] - waveform issues 
** working through waveform issues 
*** what looks like discretization of trough-to-peak measures does not appear 
to be an artifact - checked all the RS waveforms and nothing looks out of place 
*** can now use k-means to do the clustering 

* [2024-11-1 Fri] - singel cell recordings figure 
** waveform figures 
load alpha_mod_wvfm_analysis.mat
% sort s1 waveforms 
Xss = [ss_widths, ss_t2p];
ss_idx = kmeans(Xss, 2);
%% which one is which 
figure()
hold on 
plot(mean(ss_wvfrms(ss_idx == 1, :)));
plot(mean(ss_wvfrms(ss_idx == 2, :)));

% sort pfc waveforms 
Xpfc = [pfc_widths, pfc_t2p];
pfc_idx = kmeans(Xpfc, 2);
%% which one is which 
figure()
hold on 
plot(mean(pfc_wvfrms(pfc_idx == 1, :)));
plot(mean(pfc_wvfrms(pfc_idx == 2, :)));

% sort bg waveforms 
Xbg = [bg_widths, bg_t2p];
bg_idx = kmeans(Xbg, 2);
%% which one is which 
figure()
hold on 
plot(mean(bg_wvfrms(bg_idx == 1, :)));
plot(mean(bg_wvfrms(bg_idx == 2, :)));

sort_fig = figure('Position', [1215, 1406, 1520, 420]); 
hold on 
tl = tiledlayout(1,3, 'TileSpacing', 'tight');
axs(1) = nexttile;
plot(ss_t2p(ss_idx == 2), ss_widths(ss_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(ss_t2p(ss_idx == 1), ss_widths(ss_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
title('Somatosensory Cortex')
axs(2) = nexttile;
plot(pfc_t2p(pfc_idx == 1), pfc_widths(pfc_idx == 1), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(pfc_t2p(pfc_idx == 2), pfc_widths(pfc_idx == 2), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
title('Prefrontal Cortex')
axs(3) = nexttile;
plot(bg_t2p(bg_idx == 2), bg_widths(bg_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(bg_t2p(bg_idx == 1), bg_widths(bg_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
title('Striatum')
xlabel(tl, 'Trough-to-Peak (ms)')
ylabel(tl, 'AP Half-Width (ms)')
saveas(sort_fig, '~/Documents/Project_Figures/AlphaModulation/spikeWidth_by_peak2trough.svg')
saveas(sort_fig, '~/Documents/Project_Figures/AlphaModulation/spikeWidth_by_peak2trough.fig')

% fr_fig = figure('Position', [1215, 1406, 1520, 420]); 
% hold on 
% tl = tiledlayout(1,3, 'TileSpacing', 'tight');
% axs(1) = nexttile;
% plot(ss_t2p(ss_idx == 2), ss_frs(ss_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
% hold on
% plot(ss_t2p(ss_idx == 1), ss_frs(ss_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
% title('Somatosensory Cortex')
% axs(2) = nexttile;
% plot(pfc_t2p(pfc_idx == 1), pfc_frs(pfc_idx == 1), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
% hold on
% plot(pfc_t2p(pfc_idx == 2), pfc_frs(pfc_idx == 2), '.', 'Color', [0,0,0], 'MarkerSize', 10);
% title('Prefrontal Cortex')
% axs(3) = nexttile;
% plot(bg_t2p(bg_idx == 2), bg_frs(bg_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
% hold on
% plot(bg_t2p(bg_idx == 1), bg_frs(bg_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
% title('Striatum')
% xlabel(tl, 'Trough-to-Peak (ms)')
% ylabel(tl, 'Firing Rate (Hz)')

ss_fig = figure();
p = piechart([sum((ss_idx == 2)), sum((ss_idx == 1))], {'FS', 'RS'});
colororder([0.5,0.5,0.5;0,0,0])
p.FaceAlpha = 1;
p.LabelStyle = None;
saveas(ss_fig, '~/Documents/Project_Figures/AlphaModulation/ss_cellClass_pct.svg')
saveas(ss_fig, '~/Documents/Project_Figures/AlphaModulation/ss_cellClass_pct.fig')

pfc_fig = figure();
p = piechart([sum((pfc_idx == 1)), sum((pfc_idx == 2))], {'FS', 'RS'});
colororder([0.5,0.5,0.5;0,0,0])
p.FaceAlpha = 1;
p.LabelStyle = None;
saveas(pfc_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_cellClass_pct.svg')
saveas(pfc_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_cellClass_pct.fig')

bg_fig = figure();
p = piechart([sum((bg_idx == 2)), sum((bg_idx == 1))], {'FS', 'RS'});
p.LabelStyle = None;
colororder([0.5,0.5,0.5;0,0,0])
p.FaceAlpha = 1;
saveas(bg_fig, '~/Documents/Project_Figures/AlphaModulation/bg_cellClass_pct.svg')
saveas(bg_fig, '~/Documents/Project_Figures/AlphaModulation/bg_cellClass_pct.fig')

rs_ss_wvfrms = ss_wvfrms(ss_idx == 1, :);
fs_ss_wvfrms = ss_wvfrms(ss_idx == 2, :);
rs_pfc_wvfrms = pfc_wvfrms(pfc_idx == 2, :);
fs_pfc_wvfrms = pfc_wvfrms(pfc_idx == 1, :);
rs_bg_wvfrms = bg_wvfrms(bg_idx == 1, :);
fs_bg_wvfrms = bg_wvfrms(bg_idx == 2, :);

ss_rs_fig = figure();
plot(linspace(0,(size(rs_ss_wvfrms,1)/30),61), mean(rs_ss_wvfrms), 'k', 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(ss_rs_fig, '~/Documents/Project_Figures/AlphaModulation/ss_rs_wvfrm.svg')
saveas(ss_rs_fig, '~/Documents/Project_Figures/AlphaModulation/ss_rs_wvfrm.fig')

ss_fs_fig = figure();
plot(linspace(0,(size(fs_ss_wvfrms,1)/30),61), mean(fs_ss_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(ss_fs_fig, '~/Documents/Project_Figures/AlphaModulation/ss_fs_wvfrm.svg')
saveas(ss_fs_fig, '~/Documents/Project_Figures/AlphaModulation/ss_fs_wvfrm.fig')

pfc_rs_fig = figure();
plot(linspace(0,(size(rs_pfc_wvfrms,1)/30),61), mean(rs_pfc_wvfrms), 'k', 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(pfc_rs_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_rs_wvfrm.svg')
saveas(pfc_rs_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_rs_wvfrm.fig')

pfc_fs_fig = figure();
plot(linspace(0,(size(fs_pfc_wvfrms,1)/30),61), mean(fs_pfc_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(pfc_fs_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_fs_wvfrm.svg')
saveas(pfc_fs_fig, '~/Documents/Project_Figures/AlphaModulation/pfc_fs_wvfrm.fig')

bg_rs_fig = figure();
plot(linspace(0,(size(rs_bg_wvfrms,1)/30),61), mean(rs_bg_wvfrms), 'k', 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(bg_rs_fig, '~/Documents/Project_Figures/AlphaModulation/bg_rs_wvfrm.svg')
saveas(bg_rs_fig, '~/Documents/Project_Figures/AlphaModulation/bg_rs_wvfrm.fig')

bg_fs_fig = figure();
plot(linspace(0,(size(fs_bg_wvfrms,1)/30),61), mean(fs_bg_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlabel('Time (ms)')
ylabel('Voltage (\muV)')
saveas(bg_fs_fig, '~/Documents/Project_Figures/AlphaModulation/bg_fs_wvfrm.svg')
saveas(bg_fs_fig, '~/Documents/Project_Figures/AlphaModulation/bg_fs_wvfrm.fig')

combo_fig = figure('Position', [1215 1187 1241 639]); 
hold on 
tl = tiledlayout(2,3, 'TileSpacing', 'tight');
axs = zeros(1,9);
axs(1) = nexttile;
plot(ss_t2p(ss_idx == 2), ss_widths(ss_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(ss_t2p(ss_idx == 1), ss_widths(ss_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
yticks([0,1.2])
xticks([0,0.6])
title('Somatosensory Cortex')
ylabel('AP Half-Width (ms)')
axs(2) = nexttile;
plot(pfc_t2p(pfc_idx == 1), pfc_widths(pfc_idx == 1), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(pfc_t2p(pfc_idx == 2), pfc_widths(pfc_idx == 2), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
yticks([0,1.2])
xticks([0,0.6])
title('Prefrontal Cortex')
xlabel('Trough-to-Peak (ms)')
axs(3) = nexttile;
plot(bg_t2p(bg_idx == 2), bg_widths(bg_idx == 2), '.', 'Color', [0.5,0.5,0.5], 'MarkerSize', 10);
hold on
plot(bg_t2p(bg_idx == 1), bg_widths(bg_idx == 1), '.', 'Color', [0,0,0], 'MarkerSize', 10);
xlim([0,1.2])
ylim([0,0.6])
yticks([0,1.2])
xticks([0,0.6])
title('Striatum')
axs(4) = nexttile;
hold on 
plot(linspace(0,(size(rs_ss_wvfrms,2)/30),61), mean(rs_ss_wvfrms), 'k', 'LineWidth', 2)
plot(linspace(0,(size(fs_ss_wvfrms,2)/30),61), mean(fs_ss_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlim([0,2])
xticks([0,1,2])
ylim([-10,4])
yticks([-10,0,4])
ylabel('Voltage (\muV)')
axs(5) = nexttile;
hold on 
plot(linspace(0,(size(rs_pfc_wvfrms,2)/30),61), mean(rs_pfc_wvfrms), 'k', 'LineWidth', 2)
plot(linspace(0,(size(fs_pfc_wvfrms,2)/30),61), mean(fs_pfc_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlabel('Time (ms)')
xlim([0,2])
xticks([0,1,2])
ylim([-10,4])
yticks([-10,0,4])
axs(6) = nexttile;
hold on 
plot(linspace(0,(size(rs_bg_wvfrms,2)/30),61), mean(rs_pfc_wvfrms), 'k', 'LineWidth', 2)
plot(linspace(0,(size(fs_bg_wvfrms,2)/30),61), mean(fs_pfc_wvfrms), 'Color', [0.5,0.5,0.5], 'LineWidth', 2)
xlim([0,2])
xticks([0,1,2])
ylim([-10,4])
yticks([-10,0,4])
saveas(combo_fig, '~/Documents/Project_Figures/AlphaModulation/combo_wvfrm.svg')
saveas(combo_fig, '~/Documents/Project_Figures/AlphaModulation/combo_wvfrm.fig')

** average firing rates 
addpath(genpath('./'))
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat'};
% combine animals
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
ss = ftrs(startsWith(ftrs.region, 'SS'),:);
striatum_inds = strcmp(ftrs.region, 'STR') + strcmp(ftrs.region, 'CP');
bg = ftrs(logical(striatum_inds), :);

ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--1075-20241202_geno--Wt_npxls--R-npx10_phase--phase3_g0.mat'};
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
pfc_inds = startsWith(ftrs.region, 'DP') + startsWith(ftrs.region, 'AC') ...
    + startsWith(ftrs.region, 'PL') + startsWith(ftrs.region, 'IL') ...
    + startsWith(ftrs.region, 'OR');
pfc = ftrs(logical(pfc_inds),:);

ss_rs = ss(strcmp(ss.waveform_class, 'RS'),:);
ss_fs = ss(strcmp(ss.waveform_class, 'FS'),:);
bg_rs = bg(strcmp(bg.waveform_class, 'RS'),:);
bg_fs = bg(strcmp(bg.waveform_class, 'FS'),:);
pfc_rs = pfc(strcmp(pfc.waveform_class, 'RS'),:);
pfc_fs = pfc(strcmp(pfc.waveform_class, 'FS'),:);

signals = {'left_trigger_aligned_avg_fr_Hit', ...
    'left_trigger_aligned_avg_fr_Miss', ...
    'right_trigger_aligned_avg_fr_CR', ...
    'right_trigger_aligned_avg_fr_FA'};
ttls = {'Hit', 'Miss', 'Correct Rejection', 'False Alarm'};
time = linspace(-2.8,4.9,80);

% rs figure 
rs_fig = figure('Position', [1220 881 1314 957]);
tl = tiledlayout(3,4);
axs = zeros(3,4);
r = 1;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(ss_rs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    title(ttls{c}, 'FontSize', 16, 'FontWeight','Normal');
    xlim([-2.8,4.9])
    ylim([5,10])
    yticks([5,10])
    if c == 1
        yticks([5,10])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Somatosensory Cortex', 'FontSize', 16)
    else
        yticks([])
    end
    xticklabels({})
end
r = 2;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(pfc_rs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    %title(ttls{c});
    xlim([-2.8,4.9])
    ylim([1.5,3])
    if c == 1
        yticks([1.5,3])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Prefronatl Cortex', 'FontSize', 16)
    else
        yticks([])
    end
    xticklabels({})
end
r = 3;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(bg_rs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    %title(ttls{c});
    xlim([-2.8,4.9])
    ylim([2,12])
    if c == 1
        yticks([2,12])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Striatum', 'FontSize', 16)
    else
        yticks([])
    end
    ax = gca;
    ax.XAxis.FontSize = 12;
end
xlabel(tl, 'Time (s)', 'FontSize', 16)
ylabel(tl, 'Avg. Firing Rate (Hz)', 'FontSize', 16)
title(tl, 'Regular Spiking Units', 'FontSize', 16)
saveas(rs_fig, '~/Documents/Project_Figures/AlphaModulation/rs_avg_frs.svg')
saveas(rs_fig, '~/Documents/Project_Figures/AlphaModulation/rs_avg_frs.fig')

% fs figure 
fs_fig = figure('Position', [1220 881 1314 957]);
tl = tiledlayout(3,4);
axs = zeros(3,4);
r = 1;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(ss_fs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    title(ttls{c}, 'FontSize', 16, 'FontWeight','Normal');
    xlim([-2.8,4.9])
    ylim([8,25])
    if c == 1
        yticks([8,25])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Somatosensory Cortex', 'FontSize', 16)
    else
        yticks([])
    end
    xticklabels({})
end
r = 2;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(pfc_fs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    %title(ttls{c});
    xlim([-2.8,4.9])
    ylim([10,25])
    if c == 1
        yticks([10,25])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Prefronatl Cortex', 'FontSize', 16)
    else
        yticks([])
    end
    xticklabels({})
end
r = 3;
for c = 1:length(signals)
    axs(r,c) = nexttile;
    mat = cell2mat(bg_fs.(signals{c}));
    semshade(mat, 0.3, 'k', 'k', time, 1);
    %title(ttls{c});
    xlim([-2.8,4.9])
    ylim([10,20])
    if c == 1
        yticks([10,20])
        ax = gca;
        ax.YAxis.FontSize = 12;
        ylabel('Striatum', 'FontSize', 16)
    else
        yticks([])
    end
    ax = gca;
    ax.XAxis.FontSize = 12;
end
xlabel(tl, 'Time (s)', 'FontSize', 16)
ylabel(tl, 'Avg. Firing Rate (Hz)', 'FontSize', 16)
title(tl, 'Fast Spiking Units', 'FontSize', 16)
saveas(fs_fig, '~/Documents/Project_Figures/AlphaModulation/fs_avg_frs.svg')
saveas(fs_fig, '~/Documents/Project_Figures/AlphaModulation/fs_avg_frs.fig')

% statistics 
%% ss 
ss_fs_hit = cell2mat(ss_fs.left_trigger_aligned_avg_fr_Hit);
ss_fs_miss = cell2mat(ss_fs.left_trigger_aligned_avg_fr_Miss);
ss_fs_cr = cell2mat(ss_fs.right_trigger_aligned_avg_fr_CR);
ss_fs_fa = cell2mat(ss_fs.right_trigger_aligned_avg_fr_FA);

ss_fs_hit_delta = ss_fs_hit - mean(ss_fs_hit(:,time<0),2); 
ss_fs_miss_delta = ss_fs_miss - mean(ss_fs_miss(:,time<0),2); 
ss_fs_cr_delta = ss_fs_cr - mean(ss_fs_cr(:,time<0),2); 
ss_fs_fa_delta = ss_fs_fa - mean(ss_fs_fa(:,time<0),2); 

ss_fs_hit_depol = max(ss_fs_hit_delta(:,time>0 & time < 0.3),[],2);
ss_fs_miss_depol = max(ss_fs_miss_delta(:,time>0 & time < 0.3),[],2);
ss_fs_cr_depol = max(ss_fs_cr_delta(:,time>0 & time < 0.3),[],2);
ss_fs_fa_depol = max(ss_fs_fa_delta(:,time>0 & time < 0.3),[],2);

ss_rs_hit = cell2mat(ss_rs.left_trigger_aligned_avg_fr_Hit);
ss_rs_miss = cell2mat(ss_rs.left_trigger_aligned_avg_fr_Miss);
ss_rs_cr = cell2mat(ss_rs.right_trigger_aligned_avg_fr_CR);
ss_rs_fa = cell2mat(ss_rs.right_trigger_aligned_avg_fr_FA);

ss_rs_hit_delta = ss_rs_hit - mean(ss_rs_hit(:,time<0),2); 
ss_rs_miss_delta = ss_rs_miss - mean(ss_rs_miss(:,time<0),2); 
ss_rs_cr_delta = ss_rs_cr - mean(ss_rs_cr(:,time<0),2); 
ss_rs_fa_delta = ss_rs_fa - mean(ss_rs_fa(:,time<0),2); 

ss_rs_hit_depol = max(ss_rs_hit_delta(:,time>0 & time < 0.3),[],2);
ss_rs_miss_depol = max(ss_rs_miss_delta(:,time>0 & time < 0.3),[],2);
ss_rs_cr_depol = max(ss_rs_cr_delta(:,time>0 & time < 0.3),[],2);
ss_rs_fa_depol = max(ss_rs_fa_delta(:,time>0 & time < 0.3),[],2);

%% bg 
bg_fs_hit = cell2mat(bg_fs.left_trigger_aligned_avg_fr_Hit);
bg_fs_miss = cell2mat(bg_fs.left_trigger_aligned_avg_fr_Miss);
bg_fs_cr = cell2mat(bg_fs.right_trigger_aligned_avg_fr_CR);
bg_fs_fa = cell2mat(bg_fs.right_trigger_aligned_avg_fr_FA);

bg_fs_hit_delta = bg_fs_hit - mean(bg_fs_hit(:,time<0),2); 
bg_fs_miss_delta = bg_fs_miss - mean(bg_fs_miss(:,time<0),2); 
bg_fs_cr_delta = bg_fs_cr - mean(bg_fs_cr(:,time<0),2); 
bg_fs_fa_delta = bg_fs_fa - mean(bg_fs_fa(:,time<0),2); 

bg_fs_hit_depol = max(bg_fs_hit_delta(:,time>0 & time < 0.3),[],2);
bg_fs_miss_depol = max(bg_fs_miss_delta(:,time>0 & time < 0.3),[],2);
bg_fs_cr_depol = max(bg_fs_cr_delta(:,time>0 & time < 0.3),[],2);
bg_fs_fa_depol = max(bg_fs_fa_delta(:,time>0 & time < 0.3),[],2);

bg_rs_hit = cell2mat(bg_rs.left_trigger_aligned_avg_fr_Hit);
bg_rs_miss = cell2mat(bg_rs.left_trigger_aligned_avg_fr_Miss);
bg_rs_cr = cell2mat(bg_rs.right_trigger_aligned_avg_fr_CR);
bg_rs_fa = cell2mat(bg_rs.right_trigger_aligned_avg_fr_FA);

bg_rs_hit_delta = bg_rs_hit - mean(bg_rs_hit(:,time<0),2); 
bg_rs_miss_delta = bg_rs_miss - mean(bg_rs_miss(:,time<0),2); 
bg_rs_cr_delta = bg_rs_cr - mean(bg_rs_cr(:,time<0),2); 
bg_rs_fa_delta = bg_rs_fa - mean(bg_rs_fa(:,time<0),2); 

bg_rs_hit_depol = max(bg_rs_hit_delta(:,time>0 & time < 0.3),[],2);
bg_rs_miss_depol = max(bg_rs_miss_delta(:,time>0 & time < 0.3),[],2);
bg_rs_cr_depol = max(bg_rs_cr_delta(:,time>0 & time < 0.3),[],2);
bg_rs_fa_depol = max(bg_rs_fa_delta(:,time>0 & time < 0.3),[],2);

%% pfc 
pfc_fs_hit = cell2mat(pfc_fs.left_trigger_aligned_avg_fr_Hit);
pfc_fs_miss = cell2mat(pfc_fs.left_trigger_aligned_avg_fr_Miss);
pfc_fs_cr = cell2mat(pfc_fs.right_trigger_aligned_avg_fr_CR);
pfc_fs_fa = cell2mat(pfc_fs.right_trigger_aligned_avg_fr_FA);

pfc_fs_hit_delta = pfc_fs_hit - mean(pfc_fs_hit(:,time<0),2); 
pfc_fs_miss_delta = pfc_fs_miss - mean(pfc_fs_miss(:,time<0),2); 
pfc_fs_cr_delta = pfc_fs_cr - mean(pfc_fs_cr(:,time<0),2); 
pfc_fs_fa_delta = pfc_fs_fa - mean(pfc_fs_fa(:,time<0),2); 

pfc_fs_hit_depol = max(pfc_fs_hit_delta(:,time>0 & time < 0.3),[],2);
pfc_fs_miss_depol = max(pfc_fs_miss_delta(:,time>0 & time < 0.3),[],2);
pfc_fs_cr_depol = max(pfc_fs_cr_delta(:,time>0 & time < 0.3),[],2);
pfc_fs_fa_depol = max(pfc_fs_fa_delta(:,time>0 & time < 0.3),[],2);

pfc_rs_hit = cell2mat(pfc_rs.left_trigger_aligned_avg_fr_Hit);
pfc_rs_miss = cell2mat(pfc_rs.left_trigger_aligned_avg_fr_Miss);
pfc_rs_cr = cell2mat(pfc_rs.right_trigger_aligned_avg_fr_CR);
pfc_rs_fa = cell2mat(pfc_rs.right_trigger_aligned_avg_fr_FA);

pfc_rs_hit_delta = pfc_rs_hit - mean(pfc_rs_hit(:,time<0),2); 
pfc_rs_miss_delta = pfc_rs_miss - mean(pfc_rs_miss(:,time<0),2); 
pfc_rs_cr_delta = pfc_rs_cr - mean(pfc_rs_cr(:,time<0),2); 
pfc_rs_fa_delta = pfc_rs_fa - mean(pfc_rs_fa(:,time<0),2); 

pfc_rs_hit_depol = max(pfc_rs_hit_delta(:,time>0 & time < 0.3),[],2);
pfc_rs_miss_depol = max(pfc_rs_miss_delta(:,time>0 & time < 0.3),[],2);
pfc_rs_cr_depol = max(pfc_rs_cr_delta(:,time>0 & time < 0.3),[],2);
pfc_rs_fa_depol = max(pfc_rs_fa_delta(:,time>0 & time < 0.3),[],2);

* [2024-11-2 Sat] - lfps 
** DONE: adjust ylims for average firing rates 
** DONE: plots for different layers and/or pfc regions 
** lfp analysis 
*** new function for averae spectrum aligned to stimulus and another for each outcome 
*** plotting avg spectrograms by outcome for one electrode 
fig = figure();
subplot(1,4,1); semilogy(tmp_session(20,:).left_trigger_aligned_spectra_Hit_f{1}, tmp_session(20,:).left_trigger_aligned_spectra_Hit{1}); xlim([0,50])
subplot(1,4,2); semilogy(tmp_session(20,:).left_trigger_aligned_spectra_Miss_f{1}, tmp_session(20,:).left_trigger_aligned_spectra_Miss{1}); xlim([0,50])
subplot(1,4,3); semilogy(tmp_session(20,:).right_trigger_aligned_spectra_CR_f{1}, tmp_session(20,:).right_trigger_aligned_spectra_CR{1}); xlim([0,50])
subplot(1,4,4); semilogy(tmp_session(20,:).right_trigger_aligned_spectra_FA_f{1}, tmp_session(20,:).right_trigger_aligned_spectra_FA{1}); xlim([0,50])  
unifyYLimits(fig);
saveas(fig, 'aa.png'); close; clear fig

* [2024-11-4 Mon] - more lfps
** plotting baseline spectra heat map 
load /insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
ksChanMap = load('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3387-20240121/neuropixPhase3A_kilosortChanMap.mat');
idx = find(ksChanMap.chanMap == 1);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
triggers = {'left', 'left', 'right', 'right'};
fig = figure('Position', [1220 1195 935 643]);
tl = tiledlayout(1,4);
axs = zeros(1,4);
for o = 1:length(outcomes)
    axs(o) = nexttile;
    signal = sprintf('%s_trigger_aligned_spectra_%s', triggers{o}, outcomes{o});
    mat = cell2mat(lfp_session.(signal));
    mat = [mat(idx+1:end,:); mat(1:idx,:)];
    f = lfp_session(1,:).(strcat(signal, '_f')){1};
    imagesc(f(f<20), 1:size(mat,1), mat(:,(f<20)));
    title(outcomes{o})
    set(gca, 'YDir', 'normal')
end
adjustColorLimits(fig, [0,0.4e-8])
colorbar()
saveas(fig, 'tmp/spectra_heatmap.png')
close; clear fig 
** plotting induced spectra heat map 
ksChanMap = load('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3387-20240121/neuropixPhase3A_kilosortChanMap.mat');
idx = find(ksChanMap.chanMap == 1);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
triggers = {'left', 'left', 'right', 'right'};
fig = figure('Position', [1220 1195 935 350]);
tl = tiledlayout(1,4,');
axs = zeros(1,4);
for o = 1:length(outcomes)
    axs(o) = nexttile;
    signal = sprintf('%s_trigger_induced_spectra_%s', triggers{o}, outcomes{o});
    mat = cell2mat(tmp_session.(signal));
    mat = [mat(idx+1:end,:); mat(1:idx,:)];
    f = tmp_session(1,:).(strcat(signal, '_f')){1};
    imagesc(f(f<20), 1:size(mat,1), mat(:,(f<20)));
    title(outcomes{o})
    set(gca, 'YDir', 'normal')
end
adjustColorLimits(fig, [0,0.4e-8])
colorbar()
saveas(fig, 'tmp/induced_spectra_heatmap.png')
close; clear fig 
** chronux spectrogram 
t = find(strcmp(slrt_ext.slrt_data.categorical_outcome, 'Hit'), 1, 'first');
data = lfp_ext.lfp_data(t,:).lfp{1}(20,:);
time = lfp_ext.lfp_data(t,:).left_trigger_aligned_lfp_time{1};
data = data(time > -3 & time < 5);
time = time(time > -3 & time < 5);
params = struct();
params.pad = 2;
params.Fs = 500;
params.tapers = [5, 9];
movingwin = [0.2, 0.05];
[S,t,f] = mtspecgramc(data, movingwin, params);
t = t - 3;
fig = figure(); imagesc(t, f, S'); ylim([0,50]);
colorbar(); set(gca, 'YDir', 'normal')
saveas(fig, 'tmp/spcgm.png'); close; clear fig;
** average spectrogram by outcome for single channel 
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
c = 45;
params = struct();
params.pad = 2;
params.Fs = 500;
params.tapers = [3, 5];
movingwin = [0.2, 0.05];
Fs = 500;  % Sampling frequency (Hz)
f0 = 60;    % Frequency to remove (Hz)
bw = 2;     % Bandwidth around f0 for the notch (Hz)
% Design the notch filter
d = designfilt('bandstopiir', ...
               'FilterOrder', 10, ...
               'HalfPowerFrequency1', f0 - bw/2, ...
               'HalfPowerFrequency2', f0 + bw/2, ...
               'DesignMethod', 'butter', ...
               'SampleRate', Fs);
fig = figure('Position', [1220 1195 935 350]);
tl = tiledlayout(1,4,'TileSpacing', 'tight');
for o = 1:length(outcomes)
    tmp_lfp = lfp_ext.lfp_data(strcmp(slrt_ext.slrt_data.categorical_outcome, outcomes{o}),:);
    for trial = 1:size(tmp_lfp,1)
        time = tmp_lfp(trial,:).left_trigger_aligned_lfp_time{1};
        if isempty(time)
            time = tmp_lfp(trial,:).right_trigger_aligned_lfp_time{1};
        end
        data = tmp_lfp(trial,:).lfp{1}(c,:);
        data = filtfilt(d, data);
        data = data(time > -3 & time < 5);
        [s,t,f] = mtspecgramc(data(1:3999), movingwin, params);
        if trial == 1
            S = s';
        else
            S(:,:,trial) = s';
        end
    end
    t = t - 3;
    axs(o) = nexttile;
    imagesc(t,f,log10(mean(S,3))); ylim([0,100]); xlim([-0.5,3])
    colormap('jet'); set(gca, 'YDir', 'normal');
    title(outcomes{o})
end
colorbar()
adjustColorLimits(fig, [-11,-9])
saveas(fig, 'tmp/avg_outcome_spcgm.png'); close; clear fig;
** plot a few spectrograms across the probe 
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for i = 1:20:380
    fig = figure('Position', [1220 1195 935 350]);
    tl = tiledlayout(1,4,'TileSpacing', 'tight');
    colormap('jet')
    for o = 1:length(outcomes)
        signal = sprintf('avg_spectrogram_%s', outcomes{o});
        mat = lfp_session(i,:).(signal){1};
        t = linspace(-3,5,size(mat,2));
        f = linspace(0,250,size(mat,1));
        axs(o) = nexttile;
        imagesc(t,f,log10(mat));
        xlim([-1,3])
        ylim([0,100])
        clim([-11,-9])
        title(outcomes{o})
        set(gca, 'YDir', 'normal')
    end 
    fname = sprintf('tmp/avg_spcgrm_%i.png',i);
    saveas(fig, fname); close; clear fig;
end

* [2024-11-5 Tue] - csd 
** compute a csd 
ksChanMap = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3387-20240121/neuropixPhase3A_kilosortChanMap.mat');
idx = find(ksChanMap.chanMap == 1);
mat = lfp_ext.lfp_data(11,:).lfp{1};
mat = [mat(idx+1:end,:); mat(1:idx,:)];
time = lfp_ext.lfp_data(11,:).left_trigger_aligned_lfp_time{1};
mat = mat(:, (time > -3 & time < 5));
Fs = 500;  % Sampling frequency (Hz)
f0 = 60;    % Frequency to remove (Hz)
bw = 2;     % Bandwidth around f0 for the notch (Hz)
% Design the notch filter
d = designfilt('bandstopiir', ...
               'FilterOrder', 10, ...
               'HalfPowerFrequency1', f0 - bw/2, ...
               'HalfPowerFrequency2', f0 + bw/2, ...
               'DesignMethod', 'butter', ...
               'SampleRate', Fs);
data = [];
for r = 1:size(mat,1)
    vec = filtfilt(d,mat(r,:));
    data = [data; vec];
end 
data_trim = [];
for i = 1:5:385
    data_trim = [data_trim; data(i,:)];
end
csd = computeCSD(data_trim, 1);
fig = figure(); imagesc(linspace(-3,5,4000), 1:75, csd);
xlim([-0.01,0.1])
ylim([50,75])
set(gca, 'YDir', 'normal')
clim([-4e-4,4e-4])
colormap('jet')
colorbar(); saveas(fig, 'tmp/csd_examp.png'); close; clear fig

* [2024-11-6 Wed] - average across sessions
** average spectrogram for a channel across sessions 
% ftr_files = {'/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-02-20_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
%     '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-02-15_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
%     '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat'};
ftr_files = {'/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-07-13_subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/date--2024-07-12_subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat'};
for channel = 1:20:380
    for f = 1:length(ftr_files)
        data = load(ftr_files{f});
        if f == 1
            hit = data.lfp_session(channel,:).avg_spectrogram_Hit{1};
            miss = data.lfp_session(channel,:).avg_spectrogram_Miss{1};
            cr = data.lfp_session(channel,:).avg_spectrogram_CR{1};
            fa = data.lfp_session(channel,:).avg_spectrogram_FA{1};
        else
            hit(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_Hit{1};
            miss(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_Miss{1};
            cr(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_CR{1};
            fa(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_FA{1};
        end
    end
    t = linspace(-3,5,size(hit,2));
    f = linspace(0,250,size(hit,1));
    fig = figure('Position', [1220 1195 935 350]);
    tl = tiledlayout(1,4,'TileSpacing', 'tight');
    colormap('jet')
    axs = zeros(1,4);
    axs(1) = nexttile;
    imagesc(t,f,log10(mean(hit,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    title('Hit')
    axs(2) = nexttile;
    imagesc(t,f,log10(mean(miss,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    title('Miss')
    axs(3) = nexttile;
    imagesc(t,f,log10(mean(cr,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    title('Correct Rejection')
    axs(4) = nexttile;
    imagesc(t,f,log10(mean(fa,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    title('False Alarm')
    cbar = colorbar();
    set(gca, 'YDir', 'normal')
    xlabel(tl, 'Time (s)')
    ylabel(tl, 'Frequency')
    title(cbar, 'log power')
    fname = sprintf('tmp/avg_spcgrm_%i.png', channel);
    saveas(fig, fname); close; clear fig
end
** average csd across sessions 
% ftr_files = {'/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/date--2024-02-20_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
%     '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/date--2024-02-15_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
%     '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat'};
ftr_files = {'/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/date--2024-07-13_subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/date--2024-07-12_subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat'};
for f = 1:length(ftr_files)
    data = load(ftr_files{f});
    if f == 1
        hit = data.outs{1};
        miss = data.outs{2};
        cr = data.outs{3};
        fa = data.outs{4};
    else
        hit(:,:,f) = data.outs{1};
        miss(:,:,f) = data.outs{2};
        cr(:,:,f) = data.outs{3};
        fa(:,:,f) = data.outs{4};
    end
end
fig = figure('Position', [1220 1195 935 350]);
tl = tiledlayout(1,4,'TileSpacing', 'tight');
colormap('jet')
axs(1) = nexttile;
imagesc(mean(hit,3));
axs(2) = nexttile;
imagesc(mean(miss,3))
axs(3) = nexttile;
imagesc(mean(cr,3))
axs(4) = nexttile;
imagesc(mean(fa,3))
saveas(fig, 'tmp/avg_csd_examp.png'); close; clear fig 

* [2024-11-7 Thu] - review 
** state of experiments 
*** 10004: 8 sessions 30% go; 6 sessions 50% go; 6 sessions 70% go 
*** 10003: 4 sessions 30% go; 3 sessions 50% go; 5 sessions 70% go 
*** 3755: second round of dcz experiments highly variable 
** notes on experiments 
*** 10003 2024-11-7 Thu - very low response rate  (practically 0)
**** mouse back to baseline weight 
**** should probably exclude 
*** 3755 - pre vs. post sfn sessions 
**** low response rates and no difference between saline and dcz
for post-sfn sessions
*** 2001 - very high performance (d'>4) on multiple sessions 
** alpha modulation paper 
*** figure 1 (behavior) - mostly worked out 
*** figure 2 (single units / npxls recordings) 
**** DONE: supplemental version for each region/layer 
**** DONE: add photo and trajectories 
*** figure 3 (lfps)
**** DONE: compose figure: probably avg spectrograms from each region 
*** figure 4 (phase locking)
**** DONE: not just correct vs incorrect, action vs inaction, include third (for each) 
showing proportion modulated prior to both (so fractions add to 1)
**** DONE: maybe include MSE of von Mises distribution 
**** DONE: add mean angle to angle comparisons 

* [2024-11-8 Fri] - averaging spectrograms 
** avg spectrograms for 1/5 of channels across sessions 
*** boilerplate 
addpath(genpath('./'))
sessionIDs 
ftr_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/';
*** 3387
out_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3387_expert_sessions/';
avgSpcgrmByOutcomeAcrossSessions(ftr_path, expert_3387_session_ids, out_path)
*** 3738
out_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3738_expert_sessions/AvgSpcgrms/';
avgSpcgrmByOutcomeAcrossSessions(ftr_path, expert_3738_session_ids, out_path)
*** 3755
out_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3755_expert_sessions/AvgSpcgrms/';
avgSpcgrmByOutcomeAcrossSessions(ftr_path, expert_3755_session_ids, out_path)

* [2024-11-11 Mon] - catching up on analysis 
** plotted avg spectrograms 
** caught up on slrt analysis 
*** still big differences in pre/post sfn for 3755 
** starting csd avgs 
*** boilerplate 
addpath(genpath('./'))
sessionIDs 
ftr_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/CSD/';

* [2024-11-12 Tue] - more lfps 
** avg baseline spectra 
*** boilerplate
addpath(genpath('./'))
sessionIDs 
ftr_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/';
*** 3378 
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3387_expert_sessions/AvgBaselineSpectra/';
avgBaselineSpctrmByOutcomeAcrossSessions(ftr_path, expert_3387_session_ids, out_path)
*** 3738
out_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3738_expert_sessions/AvgBaselineSpectra/';
avgBaselineSpctrmByOutcomeAcrossSessions(ftr_path, expert_3738_session_ids, out_path)
*** 3755
out_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/FIG/3755_expert_sessions/AvgBaselineSpectra/';
avgBaselineSpctrmByOutcomeAcrossSessions(ftr_path, expert_3755_session_ids, out_path)

* [2024-11-13 Wed] - photometry 
** dual color photometry 
*** work out extraction 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-11-06_subj--2001-20240910_geno--Dbh-Cre_photom--R_phase--phase3_g0.mat
photoPath = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/RAW/PHOTOM/';
photoFile = strcat(photoPath, 'date--2024-11-06_subj--2001-20240910_geno--Dbh-Cre_photom--R_phase--phase3_g0_0000.doric');
dbstop if error
addpath(genpath('~/Downloads/photom_pupil/photom/matlab_photometry_analysis/'))
photom_data = extractPhotometry(photoFile, slrt_data);
*** plot averages of stim aligned photometry traces 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/PHOTOM/date--2024-11-07_subj--2001-20240910_geno--Dbh-Cre_photom--R_phase--phase3_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-11-07_subj--2001-20240910_geno--Dbh-Cre_photom--R_phase--phase3_g0.mat  
photom_data = photom_data(1:end-1,:);
sz = size(photom_data);
slrt_data = slrt_data(1:sz(1),:);
outcomes = {'Hit', 'Miss', 'CR', 'FA'};
for o = 1:length(outcomes)
    tmp_photom = photom_data(strcmp(slrt_data.categorical_outcome, outcomes{o}),:);
    fin = min(cellfun(@length,tmp_photom.LockInAOUT02_zscr_aligned));
    mat = [];
    for r = 1:size(tmp_photom,1)
        mat = [mat; tmp_photom(r,:).LockInAOUT02_zscr_aligned{1}(1:fin)'];
    end
end
figure(); semshade(mat, 0.3, 'k', 'k', linspace(-3,5,2410), 1)

* [2024-11-14 Thu] - more photometry 
** plotting averages across sessions 
addpath(genpath('./'))
load tmp/examp_photom_ftr.mat 
signals = unique(photom_ftr.signal);
for s = 1:length(signals)
    tmp_ftr = photom_ftr(strcmp(photom_ftr.signal, signals{s}),:);
    hit = cell2mat(tmp_ftr.avg_Hit);
    miss = cell2mat(tmp_ftr.avg_Miss);
    cr = cell2mat(tmp_ftr.avg_CR);
    fa = cell2mat(tmp_ftr.avg_FA);
    time = linspace(-3,5,size(hit,2));
    fig = figure('Position', [1220 1357 1654 481]);
    tl = tiledlayout(1,4);
    nexttile;
    semshade(hit, 0.3, 'k', 'k', time, 1);
    xlim([-3,5])
    title('Hit')
    nexttile;
    semshade(miss, 0.3, 'k', 'k', time, 1);
    xlim([-3,5])
    title('Miss')
    nexttile;
    semshade(cr, 0.3, 'k', 'k', time, 1);
    xlim([-3,5])
    title('Correct Rejection')
    nexttile;
    semshade(fa, 0.3, 'k', 'k', time, 1);
    xlim([-3,5])
    title('False Alarm')
    ttl = strrep(signals{s}, 'LockInAOUT01', 'RCaMP');
    ttl = strrep(ttl, 'LockInAOUT02', 'GCamP');
    ttl = strrep(ttl, '_aligned', '');
    ttl = strrep(ttl, '_', ' ');
    title(tl, ttl)
    xlabel(tl, 'Time')
    unifyYLimits(fig)
    fname = strcat('tmp/', strrep(ttl, ' ', '_'), '.png')
    saveas(fig, fname)
end

* [2024-11-15 Fri] - alpha modulation, photometry, lfps 
** no clear stimulus related signals in dual-color photometry recordings 
** return to LFP analysis 
*** DONE: check issue with harmonics in LFP spectra 
**** harmonics are prominent in most recordings
**** maybe issue with notch filter, but they aren't typically ~60Hz*N
*** TODO: compare results with filter and hilbert transform 
*** DONE: assign brain regions to channels and pick example spectrograms 
*** TODO: revisit CSD 
**** my own csd function looks better than one from matlab file exchange
** alpha modulation 
*** DONE: try average firing rates of modulated and non modulated neurons
**** mostly squared away, interesting results 

* [2024-11-18 Mon] - alpha modulation, spike rates, lfps 
** modulated vs unmodulated firing rates 
*** repeated measures anova group:time difference p-values 
**** s1 rs cells 
                        SumSq      DF      MeanSq       F         pValue       pValueGG      pValueHF     pValueLB 
                        ______    _____    ______    _______    __________    __________    __________    _________

(Intercept):Time      2426.8       49    49.527     9.6335    2.6823e-69    4.0577e-08    3.2792e-08    0.0020806
group:Time            177.89       49    3.6304    0.70616       0.94024       0.59825       0.60036      0.40135
subject:Time          1589.7       49    32.442     6.3103    5.5277e-39    2.8275e-05    2.5101e-05     0.012494
group:subject:Time    317.89       49    6.4875     1.2619        0.1036       0.28156       0.28122      0.26213
Error(Time)            80864    15729    5.1411    
**** s1 fs cells 

                        SumSq        DF     MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                        __________    ____    ______    ______    ___________    __________    __________    __________

(Intercept):Time           24788      49    505.89    19.798    9.5466e-157    3.3964e-12    1.6893e-12    1.9873e-05
group:Time                3052.3      49    62.291    2.4378     1.0264e-07      0.062281      0.060358       0.12117
subject:Time              5261.4      49    107.37    4.2021     1.1682e-20     0.0055612     0.0050784      0.042628
group:subject:Time        2774.8      49    56.628    2.2161      2.489e-06      0.083743      0.081696       0.13929
Error(Time)           1.4524e+05    5684    25.552   
**** prefrontal cortex rs 
                    SumSq      DF      MeanSq      F         pValue       pValueGG      pValueHF     pValueLB
                    ______    _____    ______    ______    __________    __________    __________    ________

(Intercept):Time    526.57       49    10.746    4.2913    9.7068e-22    0.00092135    0.00087298    0.038866
group:Time          290.31       49    5.9248     2.366    2.5189e-07      0.041035      0.040359      0.1247
Error(Time)          56322    22491    2.5042     
**** prefrontal cortex fs 
                    SumSq      DF     MeanSq      F         pValue       pValueGG      pValueHF     pValueLB
                    ______    ____    ______    ______    __________    __________    __________    ________

(Intercept):Time    2579.8      49    52.649    6.0478    1.6759e-34    1.3032e-05    3.9236e-06    0.017501
group:Time          1960.6      49    40.013    4.5963      4.51e-23     0.0003118    0.00014116    0.037029
Error(Time)          20902    2401    8.7054        
**** striatum rs 
                        SumSq        DF      MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                        __________    _____    ______    ______    ___________    __________    __________    __________

(Intercept):Time           13904       49    283.76     17.61     1.379e-144    5.0112e-10    4.2263e-10    3.5636e-05
group:Time                 12171       49    248.38    15.414    1.0272e-123    7.4589e-09     6.447e-09    0.00010685
subject:Time              8307.6       49    169.54    10.522     1.6476e-77    3.2011e-06    2.9214e-06     0.0013112
group:subject:Time        7891.8       49    161.06     9.995     1.3558e-72    6.1641e-06    5.6582e-06      0.001728
Error(Time)           2.4003e+05    14896    16.114                                                                   
**** striatum fs 
                        SumSq        DF      MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                        __________    _____    ______    ______    __________    __________    __________    _________

(Intercept):Time           11112       49    226.77    10.832    8.8416e-80    6.1539e-10    3.8943e-10    0.0011635
group:Time                5832.4       49    119.03    5.6856    2.5217e-33    4.3991e-05    3.6425e-05     0.017961
subject:Time              4225.1       49    86.227    4.1188    3.3256e-20     0.0011942     0.0010669     0.043624
group:subject:Time        4776.6       49    97.483    4.6565    1.3394e-24    0.00038911     0.0003389      0.03203
Error(Time)           2.2363e+05    10682    20.935
** lfp spectrogram figure
sessionIDs;
ftr_path = '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/LFP/';
channels = [271, 281, 126];
sessions = {expert_3738_session_ids, expert_3755_session_ids, expert_3738_session_ids};
fig = figure('Position', [1151 841 1850 1081]);
tl = tiledlayout(3,4,'TileSpacing', 'tight');
colormap('jet')
axs = zeros(3,4);
for c = 1:3
    session_ids = sessions{c};
    channel = channels(c);
    for s = 1:length(session_ids)
        ftr_files{s} = strcat(ftr_path, session_ids{s}, '.mat');
    end
    for f = 1:length(ftr_files)
        data = load(ftr_files{f});
        if f == 1
            hit = data.lfp_session(channel,:).avg_spectrogram_Hit{1};
            miss = data.lfp_session(channel,:).avg_spectrogram_Miss{1};
            cr = data.lfp_session(channel,:).avg_spectrogram_CR{1};
            fa = data.lfp_session(channel,:).avg_spectrogram_FA{1};
        else
            hit(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_Hit{1};
            miss(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_Miss{1};
            cr(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_CR{1};
            fa(:,:,f) = data.lfp_session(channel,:).avg_spectrogram_FA{1};
        end
    end
    t = linspace(-3,5,size(hit,2));
    f = linspace(0,250,size(hit,1));
    axs(c,1) = nexttile;
    imagesc(t,f,log10(mean(hit,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    axs(c,2) = nexttile;
    imagesc(t,f,log10(mean(miss,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    yticklabels({})
    axs(c,3) = nexttile;
    imagesc(t,f,log10(mean(cr,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    set(gca, 'YDir', 'normal')
    yticklabels({})
    axs(c,4) = nexttile;
    imagesc(t,f,log10(mean(fa,3)))
    xlim([-1,3])
    ylim([0,100])
    clim([-11,-9])
    yticklabels({})
    cbar = colorbar();
    set(gca, 'YDir', 'normal')
end
for r = 1:2
    for c = 1:4 
        axes(axs(r,c))
        xticklabels({})
    end
end
regions = {'Somatosensory Cortex', 'Prefrontal Cortex', 'Striatum'};
for r = 1:3
    axes(axs(r,1))
    ylabel(regions{r}, 'FontWeight', 'normal', 'FontSize', 16)
end
outcomes = {'Hit', 'Miss', 'Correct Rejection', 'False Alarm'};
for c = 1:4
    axes(axs(1,c))
    title(outcomes{c}, 'FontWeight', 'normal', 'FontSize', 16)
end
xlabel(tl, 'Time (s)', 'FontSize', 16)
ylabel(tl, 'Frequency (Hz)', 'FontSize', 16)

* [2024-11-20 Wed] - plot example of phase locking 
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/AP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/LFP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
addpath(genpath('./'))
trials = find(strcmp(slrt_data.categorical_outcome,'Hit'));
% for trial = 1:length(trials)
trial = 24;
t = trials(trial);
% t = 24;
c = find(ap_data(t,:).spiking_data{1}.cluster_id == 218);
cluster_channel = ap_data(t,:).spiking_data{1}(c,:).channel{1};
lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
y = bandpassFilter(lfp, 8, 12, 500);
spike_times = ap_data(t,:).spiking_data{1}(c,:).left_trigger_aligned_spike_times{1};
phi = angle(hilbert(y));
Y = abs(hilbert(y)).^2;
for i = 1:length(spike_times)
    [~, tind] = min((lfp_times - spike_times(i)).^2);
    spike_phases(i) = phi(tind);
end
fig = figure('Position', [1220 926 796 912]); 
tl = tiledlayout(3,1, 'TileSpacing', 'tight');
axs = zeros(3,1);
axs(1) = nexttile; 
plot(lfp_times, y, 'k-'); xlim([-3,0]);
ylabel('Filtered LFP', 'FontSize', 16)
xlabel('Time (s)', 'FontSize', 16)
% yticks([-1e-4, 1e-4])
xticks([-3,-1.5,0])
ax = gca;    
ax.XAxis.FontSize = 14
ax = gca;    
ax.YAxis.FontSize = 14
axs(2) = nexttile; 
plot(lfp_times, phi, 'k-')
hold on 
plot(spike_times, spike_phases, 'r*')
xlabel('Time (s)', 'FontSize', 16)
ylabel('Alpha Phase (radians)', 'FontSize', 16)
yticks([-pi, 0, pi])
yticklabels({'-\pi', '0', '\pi'})
xlim([-3,0]);
xticks([-3,-1.5,0])
ax = gca;    
ax.XAxis.FontSize = 14
ax = gca;    
ax.YAxis.FontSize = 14
axs(3) = nexttile;
spike_phases = spike_phases(spike_times >= -3 & spike_times <= 0);
[N, edges] = histcounts(spike_phases, 20, 'Normalization', 'pdf');
centers = zeros(length(edges)-1,1);
for e = 1:(length(edges)-1)
    centers(e) = mean(edges(e:(e+1)));
end
[x,y, theta_bars(i), Rs(i), kappas(i)] = vonMises(spike_phases);
bar(centers, N, 'EdgeColor', 'k', 'FaceColor', [0.5,0.5,0.5], 'BarWidth', 1)
hold on
plot(x,y, 'k', 'LineWidth', 2);
xticks([-pi, 0, pi])
xticklabels({'-\pi', '0', '\pi'})
ax = gca;    
ax.XAxis.FontSize = 14
ax = gca;    
ax.YAxis.FontSize = 14
ylabel('Spike PDF', 'FontSize', 16)
xlabel('Alpha Phase (radians)', 'FontSize', 16)
% clear spike_phases
% end
circ_rtest(spike_phases) 

* [2024-11-26 Tue] - summarizing different response probabilities 
** different response probabilities 
*** new sessions with 10004 and sessions with 3755 have different patterns of psychometric curves 
than first round of sessions with 10004 and 10005 

* [2024-12-2 Mon] - laminar distribution of phase modulation 
** layer specificity 
addpath(genpath('./'))
addpath(genpath('~/circstat-matlab/'))
s1 = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Cortex/Spontaneous_Alpha_Modulation_v2/data.mat');
pfc = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/PFC_Expert_Combo/PFC/Spontaneous_Alpha_Modulation_v2/data.mat');
striatum = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Basal_Ganglia/Spontaneous_Alpha_Modulation_v2/data.mat');

all_ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3387-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-01mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--DCZ-005mgpkg_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3738-20240702_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_rx--Saline_phase--phase3_g0.mat'};

%% s1 sessions
% combine animals
ftr_files = horzcat(all_ftr_files(1), all_ftr_files(2));
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
S1 = ftrs(startsWith(ftrs.region, 'SS'),:);
s1_sessions = unique(s1.out.alpha_modulated.session_id);
layers = {'1', '2', '4', '6'};
s1_l1_rs_frac = zeros(1,length(s1_sessions));
s1_l2_rs_frac = zeros(1,length(s1_sessions));
s1_l4_rs_frac = zeros(1,length(s1_sessions));
s1_l5_rs_frac = zeros(1,length(s1_sessions));
s1_l6_rs_frac = zeros(1,length(s1_sessions));
s1_l1_fs_frac = zeros(1,length(s1_sessions));
s1_l2_fs_frac = zeros(1,length(s1_sessions));
s1_l4_fs_frac = zeros(1,length(s1_sessions));
s1_l5_fs_frac = zeros(1,length(s1_sessions));
s1_l6_fs_frac = zeros(1,length(s1_sessions));
for s = 1:length(s1_sessions)
    session_id = s1_sessions{s};
    tmp = s1.out.alpha_modulated(strcmp(s1.out.alpha_modulated.session_id, session_id),:);
    tmp_all = S1(strcmp(S1.session_id, session_id),:);
    tmp_rs = tmp(strcmp(tmp.waveform_class, 'RS'),:);
    tmp_fs = tmp(strcmp(tmp.waveform_class, 'FS'),:);
    tmp_all_rs = tmp_all(strcmp(tmp_all.waveform_class, 'RS'),:);
    tmp_all_fs = tmp_all(strcmp(tmp_all.waveform_class, 'FS'),:);
    s1_l1_rs_frac(s) = sum(contains(tmp_rs.region, '1')) / sum(contains(tmp_all_rs.region, '1'));
    s1_l2_rs_frac(s) = sum(contains(tmp_rs.region, '2')) / sum(contains(tmp_all_rs.region, '2'));
    s1_l4_rs_frac(s) = sum(contains(tmp_rs.region, '4')) / sum(contains(tmp_all_rs.region, '4'));
    s1_l5_rs_frac(s) = sum(contains(tmp_rs.region, '5')) / sum(contains(tmp_all_rs.region, '5'));
    s1_l6_rs_frac(s) = sum(contains(tmp_rs.region, '6')) / sum(contains(tmp_all_rs.region, '6'));
    s1_l1_fs_frac(s) = sum(contains(tmp_fs.region, '1')) / sum(contains(tmp_all_fs.region, '1'));
    s1_l2_fs_frac(s) = sum(contains(tmp_fs.region, '2')) / sum(contains(tmp_all_fs.region, '2'));
    s1_l4_fs_frac(s) = sum(contains(tmp_fs.region, '4')) / sum(contains(tmp_all_fs.region, '4'));
    s1_l5_fs_frac(s) = sum(contains(tmp_fs.region, '5')) / sum(contains(tmp_all_fs.region, '5'));
    s1_l6_fs_frac(s) = sum(contains(tmp_fs.region, '6')) / sum(contains(tmp_all_fs.region, '6'));
end
cellclass = {};
for i = 1:length(s1_l1_rs_frac)
    cellclass{i} = 'RS';
end
for i = 1:length(s1_l1_fs_frac)
    cellclass{length(s1_l1_rs_frac)+i} = 'FS';
end
s1_by_layers = table(cellclass', [s1_l2_rs_frac'; s1_l2_fs_frac'], ...
    [s1_l4_rs_frac'; s1_l4_fs_frac'], [s1_l5_rs_frac'; s1_l5_fs_frac'], [s1_l6_rs_frac'; s1_l6_fs_frac'], 'VariableNames', ...
    {'cellclass', 'l2', 'l4', 'l5', 'l6'});
% s1_rs_by_layers = table(cellclass', s1_l1_rs_frac', s1_l2_rs_frac', ...
%     s1_l4_rs_frac', s1_l5_rs_frac', s1_l6_rs_frac', 'VariableNames', ...
%     {'cellclass', 'l1', 'l2', 'l4', 'l5', 'l6'});
Layer = [2,4,5,6]';
s1_layer_rm = fitrm(s1_rs_by_layers, 'l1-l6 ~ cellclass', 'WithinDesign', Layer);
% s1_layer_tbl = anova(s1_rs_rm);
s1_rs_mat = [s1_l1_rs_frac', s1_l2_rs_frac', ...
    s1_l4_rs_frac', s1_l5_rs_frac', s1_l6_rs_frac'];
[p, ~, stats] = anova1(s1_rs_mat);
s1_fs_mat = [s1_l1_fs_frac', s1_l2_fs_frac', ...
    s1_l4_fs_frac', s1_l5_fs_frac', s1_l6_fs_frac'];
[p, ~, stats] = anova1(s1_fs_mat);

rs_avg = [nanmean(s1_l1_rs_frac), nanmean(s1_l2_rs_frac), nanmean(s1_l4_rs_frac), nanmean(s1_l5_rs_frac), nanmean(s1_l6_rs_frac)];
fs_avg = [nanmean(s1_l1_fs_frac), nanmean(s1_l2_fs_frac), nanmean(s1_l4_fs_frac), nanmean(s1_l5_fs_frac), nanmean(s1_l6_fs_frac)];
rs_err = [nanstd(s1_l1_rs_frac)/sqrt(sum(~isnan(s1_l1_rs_frac))), nanstd(s1_l2_rs_frac)/sqrt(sum(~isnan(s1_l2_rs_frac))), nanstd(s1_l4_rs_frac)/sqrt(sum(~isnan(s1_l4_rs_frac))), nanstd(s1_l5_rs_frac)/sqrt(sum(~isnan(s1_l5_rs_frac))), nanstd(s1_l6_rs_frac)/sqrt(sum(~isnan(s1_l6_rs_frac)))];
fs_err = [nanstd(s1_l1_fs_frac)/sqrt(sum(~isnan(s1_l1_fs_frac))), nanstd(s1_l2_fs_frac)/sqrt(sum(~isnan(s1_l2_fs_frac))), nanstd(s1_l4_fs_frac)/sqrt(sum(~isnan(s1_l4_fs_frac))), nanstd(s1_l5_fs_frac)/sqrt(sum(~isnan(s1_l5_fs_frac))), nanstd(s1_l6_fs_frac)/sqrt(sum(~isnan(s1_l6_fs_frac)))];
fig = figure('Position', [1220 1217 593 501]);
tl = tiledlayout(1,2);
axs(1) = nexttile;
barh(1:5, fliplr(rs_avg), 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
hold on
errorbar(fliplr(rs_avg), 1:5, fliplr(rs_err), 'horizontal', 'k.')
yticks(1:5)
yticklabels(fliplr({'L1', 'L2/3', 'L4', 'L5', 'L6'}))
ylim([0.5,5.5])
title('Regular Spiking Units')
axs(2) = nexttile;
barh(1:5, fliplr(fs_avg), 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
hold on
errorbar(fliplr(fs_avg), 1:5, fliplr(fs_err), 'horizontal', 'k.')
yticks(1:5)
yticklabels(fliplr({'L1', 'L2/3', 'L4', 'L5', 'L6'}))
ylim([0.5,5.5])
title('Fast Spiking Units')
xlabel(tl, 'Fraction of Alpha Modulated Units')
ylabel(tl, 'Cortical Layer')

ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--3755-20240828_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/subj--1075-20241202_geno--Wt_npxls--R-npx10_phase--phase3_g0.mat'};
for i = 1:length(ftr_files)
    f = load(ftr_files{i});
    if i == 1
        ftrs = f.ap_ftr;
    else
        ftrs = combineTables(ftrs, f.ap_ftr);
    end
end
pfc_inds = startsWith(ftrs.region, 'DP') + startsWith(ftrs.region, 'AC') ...
    + startsWith(ftrs.region, 'PL') + startsWith(ftrs.region, 'IL') ...
    + startsWith(ftrs.region, 'OR');
pfc_inds = logical(pfc_inds);
PFC = ftrs(pfc_inds,:);

pfc_sessions = unique(pfc.out.alpha_modulated.session_id);
ac_rs_frc = zeros(1,length(pfc_sessions));
pl_rs_frc = zeros(1,length(pfc_sessions));
il_rs_frac = zeros(1,length(pfc_sessions));
orb_rs_frac = zeros(1,length(pfc_sessions));
dp_rs_frc = zeros(1,length(pfc_sessions));
ac_fs_frc = zeros(1,length(pfc_sessions));
pl_fs_frc = zeros(1,length(pfc_sessions));
il_fs_frac = zeros(1,length(pfc_sessions));
orb_fs_frac = zeros(1,length(pfc_sessions));
dp_fs_frc = zeros(1,length(pfc_sessions));
for s = 1:length(pfc_sessions)
    session_id = pfc_sessions{s};
    tmp = pfc.out.alpha_modulated(strcmp(pfc.out.alpha_modulated.session_id, session_id),:);
    tmp_all = PFC(strcmp(PFC.session_id, session_id),:);
    tmp_rs = tmp(strcmp(tmp.waveform_class, 'RS'),:);
    tmp_fs = tmp(strcmp(tmp.waveform_class, 'FS'),:);
    tmp_all_rs = tmp_all(strcmp(tmp_all.waveform_class, 'RS'),:);
    tmp_all_fs = tmp_all(strcmp(tmp_all.waveform_class, 'FS'),:);
    ac_rs_frac(s) = sum(contains(tmp_rs.region, 'AC')) / sum(contains(tmp_all_rs.region, 'AC'));
    pl_rs_frac(s) = sum(contains(tmp_rs.region, 'PL')) / sum(contains(tmp_all_rs.region, 'PL'));
    il_rs_frac(s) = sum(contains(tmp_rs.region, 'IL')) / sum(contains(tmp_all_rs.region, 'IL'));
    orb_rs_frac(s) = sum(contains(tmp_rs.region, 'OR')) / sum(contains(tmp_all_rs.region, 'OR'));
    dp_rs_frac(s) = sum(contains(tmp_rs.region, 'DP')) / sum(contains(tmp_all_rs.region, 'DP'));
    ac_fs_frac(s) = sum(contains(tmp_fs.region, '1')) / sum(contains(tmp_all_fs.region, '1'));
    pl_fs_frac(s) = sum(contains(tmp_fs.region, 'PL')) / sum(contains(tmp_all_fs.region, 'PL'));
    il_fs_frac(s) = sum(contains(tmp_fs.region, 'IL')) / sum(contains(tmp_all_fs.region, 'IL'));
    orb_fs_frac(s) = sum(contains(tmp_fs.region, 'OR')) / sum(contains(tmp_all_fs.region, 'OR'));
    dp_fs_frac(s) = sum(contains(tmp_fs.region, 'DP')) / sum(contains(tmp_all_fs.region, 'DP'));
end

rs_avg = [nanmean(ac_rs_frac), nanmean(pl_rs_frac), nanmean(il_rs_frac), nanmean(orb_rs_frac), nanmean(dp_rs_frac)];
fs_avg = [nanmean(ac_fs_frac), nanmean(pl_fs_frac), nanmean(il_fs_frac), nanmean(orb_fs_frac), nanmean(dp_fs_frac)];
rs_err = [nanstd(ac_rs_frac)/sqrt(sum(~isnan(ac_rs_frac))), nanstd(pl_rs_frac)/sqrt(sum(~isnan(pl_rs_frac))), nanstd(il_rs_frac)/sqrt(sum(~isnan(il_rs_frac))), nanstd(orb_rs_frac)/sqrt(sum(~isnan(orb_rs_frac))), nanstd(dp_rs_frac)/sqrt(sum(~isnan(dp_rs_frac)))];
fs_err = [nanstd(ac_fs_frac)/sqrt(sum(~isnan(ac_fs_frac))), nanstd(pl_fs_frac)/sqrt(sum(~isnan(pl_fs_frac))), nanstd(il_fs_frac)/sqrt(sum(~isnan(il_fs_frac))), nanstd(orb_fs_frac)/sqrt(sum(~isnan(orb_fs_frac))), nanstd(dp_fs_frac)/sqrt(sum(~isnan(dp_fs_frac)))];
fig = figure('Position', [1220 1217 593 501]);
tl = tiledlayout(1,2);
axs(1) = nexttile;
barh(1:5, fliplr(rs_avg), 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
hold on
errorbar(fliplr(rs_avg), 1:5, fliplr(rs_err), 'horizontal', 'k.')
yticks(1:5)
yticklabels(fliplr({'ACC', 'PL', 'IL', 'ORB', 'DP'}))
ylim([0.5,5.5])
xlim([0,1.05])
title('Regular Spiking Units')
axs(2) = nexttile;
barh(1:5, fliplr(fs_avg), 'EdgeColor', [0.5,0.5,0.5], 'FaceColor', [0.5,0.5,0.5])
hold on
errorbar(fliplr(fs_avg), 1:5, fliplr(fs_err), 'horizontal', 'k.')
yticks(1:5)
yticklabels(fliplr({'ACC', 'PL', 'IL', 'ORB', 'DP'}))
ylim([0.5,5.5])
xlim([0,1.05])
title('Fast Spiking Units')
xlabel(tl, 'Fraction of Alpha Modulated Units')
ylabel(tl, 'PFC Subregion')

pfc_rs_mat = [ac_rs_frac', pl_rs_frac', ...
    il_rs_frac', orb_rs_frac', dp_rs_frac'];
[p, ~, stats] = anova1(pfc_rs_mat);
pfc_fs_mat = [ac_fs_frac', pl_fs_frac', ...
    il_fs_frac', orb_fs_frac', dp_fs_frac'];
[p, ~, stats] = anova1(pfc_fs_mat);

* [2024-12-5 Thu] - avg number of trials per session 
** avg number of trials per session 
sessionIDs
session_ids = horzcat(expert_3755_session_ids, expert_3738_session_ids, expert_3387_session_ids);
N = zeros(1,length(session_ids));
for i = 1:length(session_ids)
    % load ap and slrt data for each session 
    session_id = session_ids{i};
    sesh_id_parts = strsplit(session_id, '_');
    subj_id = session_id(length(sesh_id_parts{1})+2:end);
    slrt_ext = load(strcat(ext_path, 'SLRT/', session_id, '.mat'));
    N(i) = size(slrt_ext.slrt_data,1);
end

* Alpha Modulation Paper 
** open questions / tasks 
*** what are we calling the task 
**** whisker-based tactile signal detection task 
**** whisker detection task 
**** whisker-based spatial detection task 
**** DONE: check zagha 
*** DONE: add N for number of cells (especially in firing rate comparisons)
*** TODO: statistics for firing rate difference on non-hit trials (supplemental figure)
*** DONE: try layer specific quantifications 
*** DONE: remake LFP spectrogram figure ([2024-11-15 Fri])
*** DONE: try tort version of modulation index 
*** DONE: finish adding figures and captions on overleaf 
*** DONE: clone overleaf version 
**** git: git clone https://git@git.overleaf.com/67428868c753da6c5abbcd1b

** abstract 
A number of cognitive and sensory processes are characterized by strong phasic relationships between neuronal spiking activity 
and local field potential oscillations in relevant brain regions.
The coupling of neuronal spiking activity in neocortex to the phase of alpha oscillations (8 - 12 Hz) has been well studied in 
monkeys but remains largely unexplored in other mammals. 
How these relationships differ between brain areas and cell types, and how they relate to somatosensory signal detection and decision making, are not well understood.
We used high density microelectrode arrays to chronically record neural activity from somatosensory cortex, prefrontal cortex, and 
striatum in mice performing a head-fixed whisker-based tactile detection task.
We characterized the phasic relationships between single neuron spiking activity and 
ongoing alpha oscillations.
The prevalance of alpha phase modulation of spiking activity differed significantly across 
regions and between cell types.
We observed significant differences in the firing dynamics of phase modulated neurons compared to unmodulated neurons during signal detection and task performance.
Furthermore, many neurons exhibited patterns of alpha modulation during baseline activity which correlate with task performance.
In particular, many neurons selectively exhibited strong alpha modulation of spiking activity during baseline activity on correct 
trials, but not on incorrect trials, suggesting that disregulation of spiking activity with respect to the ongoing alpha oscillation may characterize 
lapses in attention or task engagement.

** introduction 
Since the advent of electroencephalography, alpha oscillations (8 - 12 Hz, ranges vary depending on the study)
have been the object of close study (Berger1929-dp, Ojha2024-cc).
Alpha oscillations have been observed in diverse cortical regions,
including visual, somatosensory, motor, premotor, auditory, and entorhinal cortices (Steriade1990-ym, Haegens2011-vh , Castro-Alamancos2007-th, 
Lehtela¨ et al., 1997, Lukatch and MacIver, 1997).
Because alpha oscillations are most prominent in visual cortex with eyes closed, they were previously hypothesized to represent an idling state and therefore 
unimportant in understanding cognition (Steriade et al., 1990, Worden2000-qo).
However, there is now strong evidence alpha oscillations play a functional role in cognitive processing with rhythmic inhibition suppressing the 
representation of task-irrelevant stimuli and processing (Cooper2003-fl, Palva2007-vj, Klimesch2007-wb).
Furthermore, hemispheric lateralization of alpha oscillations has been implicated in spatial attention (Dahl2019-gd, Bagherzadeh2020-vo, Jensen2010-vd, Wildegger2017-vv, Schneider2019-ap, Handel2011-wu).

Much of the work on alpha oscillation's role in cognition focuses on changes in power or synchronization in the EEG, 
ignoring the relationship between neuronal firing and and the alpha rhythm.
Several studies have demonstrated phasic relationships between neuronal firing and cortical alpha oscillations in macacque monkeys though,
demonstrating coupling of cortical spiking activity to the phase of the alpha cycle
\cite{Bollimunta2008-qh, Haegens2011-vh, Bollimunta2011-nj, Buffalo2011-cp, van-Kerkoerle2014-tg, Dougherty2017-ek}.
Cortical firing activity was shown to be elevated at the troughs of alpha oscillations and decreased during the peaks, supporting the rhythmic inhibition hypothesis \cite{Haegens2011-vh}.
The origins of alpha oscillations and which neurons serve as pacemakers for the rhythm vary by cortical region \cite{Lukatch1997-oo, Bollimunta2008, Bollimunta2011}.
Alpha phase modulation of spiking activity in V1 has been shown to regulate visually driven responses \cite{Dougherty2017-ek}.
Alpha modulation in sensory, motor, and premotor corticies have been shown to influence discrimination of tactile stimuli  
a behavioral task \cite{Haegens2011-vh}.
There are conflicting reports regarding the layer specificty of alpha modulation, with one study suggesting it is strongest in superficial layers of V1 \cite{Dougherty2017-ek}
and another suggesting it is strongest in deep layers \cite{Buffalo2011-cp}.

Despite the extensive work on alpha modulation of cortical spiking activity in monkeys, the phenomenon remains largely unexplored in other mammals or brain regions.
Much of that work has also focused on multi-unit activity or did not make distinctions between the cell types which generated the spiking activity.
We therefore recorded LFPs and single-unit spiking activity in task-relevant brain region of mice as they performed a whisker-based tactile detection task and quantified the
phasic relationships between individual neurons and alpha oscillations.
We found differences in the prevalance of alpha modulation between brain regions (somatosensory cortex, prefrontal cortex, and striatum) and between 
cell types within those regions (fast and regular spiking).
We show how phase modulated neurons exhibit increased task-related changes in firing rate compared to neurons that are not phase modulated, 
and we also explore how phase modulation of spiking activity maps onto task performance.
Taken together, these results suggest that alpha phase modulation of neuronal firing promotes representation of task-related variables and 
correct responses to behaviorally relevant stimulli.

** methods 
All experimental procedures were approved by the Columbia University Institutional
Animal Care and Use Committee and were conducted in compliance with NIH
guidelines. Adult mice of both sexes (2 females, 1 male), aged 3 - 7 months, were used
in the experiments. All mice were kept under a 12-hour light-dark cycle.

*** surgical procedures
Animals were anesthetized with isoflurane in oxygen (5% induction, 1% maintenance) and
fixed in a stereotaxic frame. Body temperature was maintained at 36.6 ℃ using a feedbackcontrolled heating pad (FHC, Bowdoinham, ME). 
When the animal's condition stabilized, lidocaine hydrochloride and buprenorphine (0.05
mg/kg) were administered subcutaneously to before an incision on the scalp was made. 
Each mouse was implanted with a Neuropixels 1.0 multielectrode array encased in a custom built headstage housing designed for chronic head-fixed recordings.
Probe trajectories were planned and monitored in real-time during implantation using Neuropixels Trajectory Explorer.
Two mice were implanted with probes spanning primary somatosensory cortex, striatum (dorsal striatum / caudoputamen and small portions of ventral striatum),
and amygdala contralateral to the go stimulus. 
One mouse was implanted with probes in secondary motor area and medial prefronal cortex contralateral to the go stimulus. 
Baytril (5 mg/kg) and Ketoprofen (5 mg/kg) were
administered at the end of the surgery and every 24 hours after the surgery for four days. 
Animals weight was measured once a day during this post-operative period.

*** behavior 
Head-fixed mice (n=3) were trained to perform a whisker-based Go/No-Go selective detection task based on Aruljothi et al. 2020.
During behavioral training mice were water restricted to maintain >=80% of their initial pre-surgery weight.
Mice had ad libitum access to food.
The behavioral apparatus was controlled by custom code written MATLAB and Simulink (MathWorks) via a Speedgoat real-time system.  
Trials began with unilateral whisker deflections lasting 200 ms delivered via a piezoelectric actuator connected to a flat paddle
which made contact with multiple whiskers.
Mice were required to selectively respond to left-sided whisker deflections (go stimuli) by licking a water spout within a 1 second 
window of opportunity in order to receive a water reward. 
Mice were required to ignore right-sided whisker deflections (no-go stimuli) and withold licks during the window of opportunity in order to avoid 
an increased inter-trial interval (8-12 s with a negative exponential distribution, as opposed to 4-8 s otherwise).
The probability a go stimulus is presented was 30% and a no-go stimulus was 70%.
Sessions were included in the study after mice achieved expert performance on the task, defined as 3 consecutive sessions with 
discriminibility (d') greater than 1.

*** neural recordings 
Broadband extracellular voltage fluctuations across 384 electrodes of the Neuropixels probe were recorded at a sampling rate of 30 kHz while the mice
performed the selective detection task using a National Instruments PXI system controlled by SpikeGLX  (Release v20230905-phase30). The recording system was
synchronized with the behavioral apparatus via TTLs generated by the Speedgoat real-time system. 
Recordings and the behavioral task were performed in a box lined with copper mesh to reduce noise.
Single unit spiking activity was extracted offline using Kilosort 4.0.
Only single units labelled 'good' by Kilosort 4.0 with physiologically realistic inter-spike intervals were used in further analysis.
LFPs were downsampled to 500 Hz.

*** analysis 
Single units were classified by their waveform template.
Positive spikes, characterized by positive deflections in the extracellular waveform and likely representing axonal spikes,
and triphasic spikes, characterized by small positive deflections preceeding larger negative deflections and likely representing backpropagating action potentials,
were not included in further analyses (Jung2023-az, Someck2023-ry).
The remaining units were classified as RS (RS) and FS (FS) units based on the action potential width and the time between the trough and 
subsequent peak of the waveform template using k-means.
Peristimulus time histograms and firing rates were computed using 50 ms non-overlapping bins.
Spectrograms of LFPs were generated by computing multitaper spectra (time-bandwidth product 5, 9 tapers) over a moving window (0.2 s width, 0.05 s step size)
using the Chronux toolbox \cite{Mitra2008-hp}. 

Instantaneous phase of the alpha band in the LFP was computed by bandpass filtering 
the raw LFP signal from 8 to 12 Hz with a fourth order butterworth filter using forward and 
backward passes to avoid imposing phase shifts.
Spikes were then registered to the instantaneous alpha phase on the electrode where the spike 
waveform produced the greatest deflection.
To identify neurons whose baseline activity was significantly modulated by alpha phase, 
we pooled the instantaneous phase of all baseline (3 s before stimulus) spikes across the session
and used Rayleigh's test for non-uniformity (Fisher1993-at).
Units were considered significantly phase modulated if the p-value from Rayleigh's test was less 
than 0.05 divided by the number of units recorded a given session.
A similar procedure was used to identify whether units were phase modulated prior to trials of 
various outcomes, only including instatneous phasess of baseline spikes on trials of a given outcome.
The same p-value threshold was used to identify signicant phase modulation.
Comparisons of preferred phase between cell types and regions was performed using Kuiper's test (Fisher1993-at).

** results 
*** behavior (run code from [2024-10-30 Wed])
We trained head-fixed mice (n=3) to perform a selective whisker detection task, requiring mice lick 
in response to left-sided whisker deflections (go stimuli) to receive a water reward and withold 
licks in response to right-sided whisker deflection (no-go stimuli) to avoid a longer 
inter-trial interval (Fig. 1A).
Performance was evaluated using discriminibility (d') from signal detection theory, 
and only expert mice with >3 consecutive sessions with d'>1 were included in the 
study.
The average d' for all sessions was 2.14 +/- 0.188 (SEM), with hit rates (82 +/- 4%) significantly 
higher than false alarm rates (14 +/- 2%; p < 1e-12, paired t-test; Fig. 1B).
Reaction times were also signifcantly higher on false alarm trials (0.42  +/- 0.04 s) than on
hit trials (0.32 +/- 0.03 s; p = 0.009, paired t-test; Fig. 1C).

*** overview of neural recordings (code from [2024-11-1 Fri])
Mice were implanted with Neuropixels 1.0 probes, and we recorded neural activity during expert 
task performance during 21 one hour long sessions (Fig. 2A).
Probe trajectories spanned barrel cortex and striatum (mostly in dorsal striatum / caudoputamen) in 2 mice
and prefrontal cortex in 1 mouse.
All probes were implanted contralateral to the go stimulus (Fig. 2C).
We identified single units in each recording using Kilosort 4.0 and classified them based on their waveform templates.
Positive spiking units (likely axonal spikes) and triphasic spiking units (likely backpropagating action potentials in dendrites) 
were rejected from further analysis.
We used k-means to cluster units in fast spiking (FS) and regular spiking (RS) units based on their action potential half widths and the time 
from the trough to the subsequent peak of the waveform (Fig. 2B).
70.1% of units in S1 were classified as RS; 29.9%, FS.
86.6% of units in PFC were classified as RS; 13.2%, FS.
53.1% of units in striatum were classified as RS; 46.9%, FS.

**** task-related activity 
Both FS and RS units across all regions ehibited task-related firing rate dynamics (Fig. 2D,E).
FS units in S1 exhibited significantly greater increases in stimulus-evoked (200 ms following stimulus delivery)
firing rates during hit trials (10.6 +/- 1.1 Hz) than on miss trials (7.1 +/- 1.1 Hz; p = 0.002, paired t-test), while there
was no difference in stimulus-evoked activity in S1 RS units ()
Conversely, RS units in striatum exhibited significantly greater increases in stimulus-evoked firing rates 
during hit trials (5.3 +/- 1.0 Hz) than on miss trials (4.5 +/- 0.9 Hz; p = 0.514, paired t-test), while there was no difference
in stimulus-evoked activity in striatal FS units.
Neither neuron class in PFC exhibited significantly different stimulus-evoked activity between hit and miss trials.
Fast and RS units in all regions also exhibited reward-related changes in firing rate.  
On hit trials, firing rates exhibit local maxima immediately following reward, with more prominent increases in firing rate 
occuring in neurons in striatum and PFC.
In addition to single unit activity, we recorded LFPs across each of the probes (Fig. LFPX)
Across all recorded regions, go-stimuli on hit trials were associated with brief (~250 ms) increase low frequency 
(<15 Hz) and sustained increases in gamma (30 - 100 Hz)activity lasting through the window of opportunity until reward 
delivery.
On incorrect (miss and false alarm) trials, increased gamma activity lasted beyond the window of opportuninty.

*** overview of phase modulation 
**** example cell (run code from [2024-11-20 Wed])
Figure Example shows an example of single neuron, specifically a FS unit in S1, whose spiking activity is
significantly modulated by the phase of an ongoing alpha oscillation during baseline activity on a single hit trial (p = 0.0022, Rayleigh's test).
The LFP recorded on the same channel of the neuron was bandpass filtered from 8 - 12 Hz (Fig. ExampleA), 
and the instantaneous phase of the alpha band was computed using the Hilbert transform (Fig. ExampleB).
Spikes were then registered to the instantaneous phase of the alpha oscillation.  
To visualize the distribution of spikes, we generated a probability distribution of spiking at a given phase of alpha (Fig. ExampleC).
A von Mises distribution was also fit the probability distribution.

**** overview of spontaneous alpha modulation (run spikePhaseAnalysis.m)
Neurons were identified as significantly alpha phase modulated by pooling the instantaneous phase of all spikes during 3 seconds of baseline 
activity across all trials, regardless of outcome, and performing Rayleigh's test for nonuniformity. 
If the p-value from Rayleigh's test was less than 0.05 divided by the number of single units recorded on a given session, 
the neuron was considered significantly phase modulated.
Both FS and RS phase modulated units were found in the three regions we recorded from (Fig. Overview).
In S1, 58 +/- 6% of RS and 60 +/- 6% of FS neurons were phase modulated.  
We computed the average or preferred phase of each alpha modulated neuron by computing the circular mean of the alpha phases of all spikes.
The distribution of preferred phases for RS neurons (mean of 156 degrees) differed signficantly from the distribution of preferred phases for 
FS neurons (mean of 170 degrees; p = 0.02, Kuiper's test).

We compared task-related changes in firing rates between alpha phase modulated neurons and unmodulated neurons.
There was no difference in task-related changes in spiking dynamics in S1 RS cells on hit trials (p = 0.94, 2-way ANOVA with repeated measures),
There was, however, a signficant difference in task-related changes in firing dyanmics in S1 FS cells on hit trials (p < 1e-6, 2-way ANOVA with repeated measures),
with greater stimulus-evoked firing rate increases and elevated firing rates following reward on hit trials (Fig. OverviewA).
In PFC, we recorded a significantly higher fraction of alpha modulated FS neurons (40 +/- 5%) than RS neurons (19 +/- 1%; p < 1e-4, paired t-test).
There was a trend toward different distributions of preferred phases between RS units (mean of 137 degrees) and FS units (mean of 167 degrees; p = 0.1, Kuiper's test).
Both regular and FS units exhibited significant greater task-related changes in firing rate dynamics on hit trials (p < 1e-6, p < 1e-22, 2-way ANOVA, respectively).
Alpha phase modulated units of both classes exhibited strong local peaks in firing rate following stimulus and reward on hit trials.
Phase modulated units were comparitively rate in striatum, with 6 +/- 2% RS units exhibiting significant phase modulation, and 11 +/- 3% FS units exhibiting significant 
phase modulation.
The fraction of alpha modulated FS units was significantly higher than the fraction of alpha modulated RS units (p = 0.009, paired t-test).
There was no significant difference in the preferred phase of regular and FS units in striatum. 
There were significant differences in task-related changes in spiking dynamics between phase modulated and unmodulated units for both FS (p < 1e-122, 2-way ANOVA with repeated measures)
and RS units (p < 1e-33, 2-way ANOVA with repeated measures).
Interestingly, unmodulated FS units exhibited a more prominent local peak in firing rate following reward compared to phase modulated FS units, suggesting 
phase modulated FS units play a greater role in stimulus representation while unmodulated FS units play a greater role in reward processing.

**** laminar distribution of phase modulation (run code from [2024-12-2 Mon])
We also investigated the laminar distribution of phase modulation in S1.
Both RS and FS units exhibit significantly different laminar distributions of alpha phase modulation (p < 10^-7, p = 0.007, respectively, one-way ANOVA with repeated measures).
Phase modulated RS units were significantly more common in layers 2-5 than in layers 1 and 6 (p < 0.001, multiple comparisons).
Phase modulated FS units were significantly more common in layer 2/3 than in layers 5 and 6 (p < 0.05, multiple comparisons), 
and they were significantly more common in layer 4 than in layer 6 (p < 0.05, multiple comparisons).
We did not observe any phase modulated FS units in layer 1. 
The high incidence of alpha phase modulation in is consistent with previous observations in visual cortex (Dougherty2017).

*** phase modulation and behavior 
We next investigated how spontaneous alpha modulation of single cell spiking activity relates to cognitive performance (correct vs. incorrect) 
and motor activity (action vs. inaction).
To quantify these relationships, for each neuron previously identified as alpha modulated,
we pooled baseline spike phases across trials of a given outcome (hit, miss, correct rejection, false alarm, correct, incorrect, action, and inaction).
We then computed p-values from the distributions of baseline spike phases of each trial outcome using Rayleigh's test, and used the same p-value threshold 
as above to determine if the neuron is significantly alpha phase modulated prior to a given trial outcome.
Figure X shows example alpha modulated neurons from each region and the relationships between alpha modulation and trial outcome.
The example FS unit from S1 exhibited significant alpha phase modulation of spiking activity prior to hit trials and correct rejection trials.
but not prior to miss trials or false alarm trials.  
When pooling correct (hit and correct rejection) trials and incorrect (miss and false alarm) trials, 
this neuron exhibited significant alpha phase modulation prior to correct trials, but not prior to incorrect trials.
Conversely, when pooling action (hit and false alarm) trials and inaction (miss and correct rejection) trials,
this neuron exhibited significant alpha phase modulation regardless of whether the neuron licked or did not lick during the window of opportunity.
Similar patterns of phase modulation, with significant phase modulation prior to correct trials but not incorrect trials, was observed in a number of neurons 
across the recorded regions.

To investigate the relationship between alpha phase modulation and trial outcomes, we computed the proportion of phase modulated units of each waveform
class (RS or FS) were selectively phase modulated on correct (hit and correct rejection) trials, selectively phase modulated on incorrect (miss and false alarm) trials, and phase modulated on both. 
Of the significantly phase modulated units in S1, either fast or RS, none were selectively phase modulated prior to incorrect trials.
In S1, 67 +/- 8% of phase modulated RS units were selectively phase modulated prior to correct trials, which was significantly higher than
the proportion of phase modulated neurons prior to incorrect trials (p < 1e-8, one-way ANOVA with multiple comparisons) and the proportion of 
neurons phase modulated at baseline regardles of trial outcome (30 +/- 8%; p = 0.0004, one-way ANOVA with multiple comparisons).
48 +/- 11% of phase modulated FS neurons were selectively phase modulated prior to correct trials, and 43 +/- 11% were phase modulated 
regardless of trial outcome (p = 0.915, one-way ANOVA with multiple comparisons).
Phase modulated neurons which were selectively phase modulated prior to incorrect trials were very rare in PFC (3 +- 1% of phase modulated regulard spiking units,
0 FS units).
RS units in PFC which were selectively phase modulated prior to correct trials were significantly more common (63 +/- 9%) than those selectively phase modulated prior to 
incorrect trials (p < 1e-4, one-way ANOVA with multiple comparisons) and those which were phase modulated regardless of trial outcome (23 +/- 6%, p = 0.0008, one-way ANOVA with multiple comparisons).
Both FS units selectively phase modulated prior to correct trials (44 +/- 7%) and FS units phase modulated regardless of trial outcome (42 +/- 11%) were 
significantly more common than FS units selectively phase modulated prior to incorrect trials (p = 0.003, p = 0.005, respectively, one-way ANOVA with multiple comparisons).
As in S1, there were no FS or RS units which were significantly phase modulated prior to incorrect trials in striatum.
Striatal RS neurons which were selectively phase modulated prior to correct trials (57 +/- 15%) were significantly more common than RS neurons phase modulated 
regardless of trial outcome (12 +/- 8%; p < 1e-8, one-way ANOVA with multiple comparisons).
Similarly, striatal FS neurons which were selectively phase modulated prior to correcft trials (70 +/- 12%) were significantly more common than FS neurons phase 
modulated regardless of trial outcome (9 +/- 5%; p = 0.0004, one-way ANOVA with multiple comparisons).

To investigate the relationship between alpha phase modulation and motor output, we computed the proportion of phase modulated units of each waveform
class (RS or FS) were selectively phase modulated on action (hit and false alarm) trials, selectively phase modulated on inaction trials (miss and correct rejection), 
and phase modulated on both. 
Neurons which were selectively phase modulated prior to action were rare.
For both neuron classes in S1, significantly higher proportions
of neruons were either selectively phase modulated on inaction trials or phase modulated prior to both action and inaction trials than were 
selectively phase modulated prior to action trials (p < 0.05, one-way ANOVA with multiple comparisons).
There was also a significanty higher proportion of phase modulated FS neurons in S1 which were phase modulated regardless of motor output than those 
selectively phase modulated prior to inaction trials.
The same was true for RS neurons in PFC (p < 0.05, one-way ANOVA with multiple comparisons).
There are no differnces in the fraction of RS neurons phase modulated prior to action, inaction, or both in striatum (p = 0.112, one-way ANOVA with multiple comparisons)

** discussion 
*** should engage with Sobolewski2011-om 
Results: We observed a mean effect of desynchronization of the 5-12 Hz rhythm by the weak tactile stimulation. Arousal reduced the incidence of the 5-12 Hz oscillations and increased the desynchronizing
power of tactile stimuli.
Conclusions: Oscillations that can be disrupted by weak, purely tactile stimulation, and whose incidence
is reduced by increased arousal, should be interpreted as a physiological phenomenon typical for behavioral idling while the cerebral cortex maintains sensory sensitivity.
Significance: Our results contradict the view that the 5-12 Hz oscillatory activity, often observed in fronto-parietal cortical regions of Wistar rats, represents epileptic discharges. 
Rather, this activity provides a model for studying the physiology of alpha/mu oscillations.

* [2024-12-11 Wed] - starting over 
** need to rerun all npxls extraction with anti-aliasing filter prior to downsampling of lfp 
*** DONE: add antialiasing filter to extraction function 
**** currently added to extractRAW_NPXLS
% Load LFP data
chan_nidq = 1:9;
chan_imec = 1:385;
% Locate Dirs
lfpFileName = strrep(bin,'.ap.bin','.lf.bin');
nidqFileName = strrep(bin,'.imec0.ap.bin','.nidq.bin');
nidqFolder = nidqBinDir(k).folder;
lfp = ReadSGLXData(lfpFileName, binFldr, chan_imec);
% keyboard
Fs = lfp.meta.imSampRate;  % Sampling frequency (Hz)
% Design the notch filter
d = designfilt('bandpassiir', ...
            'FilterOrder', 4, ...
            'HalfPowerFrequency1', 0.1, ...
            'HalfPowerFrequency2', 100, ...
            'DesignMethod', 'butter', ...
            'SampleRate', Fs);
tmpLfp = filtfilt(d, lfp.dataArray);
lfp = downsample(tmpLfp', 5)';
% lfp = downsample(lfp.dataArray',5)';
nidq = ReadSGLXData(nidqFileName,nidqFolder, chan_nidq);                                                                                                            
save(fullfile(strcat("\\?\",kSortOutPath),"lfp.mat"),"lfp");
save(fullfile(strcat("\\?\",kSortOutPath),"nidq.mat"),"nidq"); 
*** DONE: apply antialiasing filter and redownsample already sorted data 
**** single session in matlab - needs 100 gb mem 
addpath(genpath('~/n-CORTEx/'))
addpath(genpath('./'))
chan_imec = 1:385;
base_path = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/RAW/';
slrt_path = strcat(base_path, 'SLRT/');
ext_table = readtable('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Extraction-Logs/EXT_extraction_log.csv', 'Delimiter', ',');
subjects = {'3387', '3738', '3755'};
s = 1;
subject = subjects{s};
tmp_table = ext_table(contains(ext_table.SessionName, subject),:);
sesh = 1;
sesh_name = tmp_table(sesh,:).SessionName{1};
trial_mask = tmp_table(sesh,:).TrialMask{1};
binFldr = sprintf('%s/NPXLS/%s/%s_imec0/',base_path, sesh_name, sesh_name);
imec_zip = sprintf('%sIMEC.zip', binFldr);
setenv('UNZIP_DISABLE_ZIPBOMB_DETECTION', 'TRUE')
exec_str = sprintf('unzip %s -d %s', imec_zip, binFldr);
system(exec_str);
rep = sprintf('t%s.imec0.lf.bin', trial_mask(1));
file_list = dir(binFldr);
for i = 1:length(file_list)
    files{i} = file_list(i).name;
end
lfpFileName = files(contains(files, rep));
lfpFileName = lfpFileName{1};
lfp = ReadSGLXData(lfpFileName, binFldr, chan_imec);
Fs = lfp.meta.imSampRate;  % Sampling frequency (Hz)
% Design the notch filter
d = designfilt('bandpassiir', ...
            'FilterOrder', 4, ...
            'HalfPowerFrequency1', 0.1, ...
            'HalfPowerFrequency2', 100, ...
            'DesignMethod', 'butter', ...
            'SampleRate', Fs);
tmpLfp = filtfilt(d, lfp.dataArray);
lfp = downsample(tmpLfp', 5)';
kSortOutPath = sprintf('%s/%s_t%s_sorted/', binFldr, sesh_name, trial_mask(1));
lfp_file = sprintf('%slfp.mat', kSortOutPath);
delete(lfp_file);
save(lfp_file, 'lfp', '-v7.3');
exec_str = sprintf('rm -f %s*.ap.*', binFldr);
system(exec_str);
exec_str = sprintf('rm -f %s*.lf.*', binFldr);
system(exec_str);
**** applyAntiAlias.m running on marc's machine 
*** DONE: rerun extraction for paper  
*** DONE: rerun feature extraction for paper 
*** DONE: rerun phase analyses for paper 
** data backup 
*** DONE: need to make sure all backups on Elements drive include IMEC (most don't)
** paper 
*** DONE: all percentages include 1 decimal place 
*** DONE: summary figure for alpha band 
*** DONE: lookup percentages of FS units or gabaergic PV+ neurons 
*** DONE: violin plots for behavior 
**** looked wrong 
**** look crummy (top for hit rate > 1.0)
** additional analyses 
*** DONE: prevalence of alpha modulation in subregions of PFC
*** DONE: angle, MSE, etc. for correct vs incorrect 
*** TODO: firing rates aligned to reaction time 

* [2024-12-19 Thu] - phase modulation & alpha power, modulation index 
** phase modulation and alpha power 
*** now phaseModAndPower.m
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/AP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/LFP/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
load ~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/EXT/SLRT/date--2024-02-14_subj--3387-20240121_geno--Dbh-Cre-x-Gq-DREADD_npxls--R-npx10_phase--phase3_g0.mat
addpath(genpath('./'))
% trials = find(strcmp(slrt_data.categorical_outcome,'Hit'));
alpha_powers = [];
all_phases = [];
all_times = [];
% for trial = 1:length(trials)
%     % trial = 24;
%     t = trials(trial);
%     % t = 24;
for t = 1:size(slrt_data,1)
    c = find(ap_data(t,:).spiking_data{1}.cluster_id == 218);
    cluster_channel = ap_data(t,:).spiking_data{1}(c,:).channel{1};
    lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    lfp_time = lfp_data(t,:).lfpTime{1};
    alpha = bandpassFilter(lfp, 8, 12, 500);
    spike_times = ap_data(t,:).spiking_data{1}(c,:).left_trigger_aligned_spike_times{1};
    phi = angle(hilbert(alpha));
    ALPHA = abs(hilbert(alpha)).^2;
    delta = bandpassFilter(lfp, 1, 4, 500);
    DELTA = abs(hilbert(delta)).^2;
    spike_phases = zeros(1,length(spike_times));
    for i = 1:length(spike_times)
        [~, tind] = min((lfp_times - spike_times(i)).^2);
        spike_phases(i) = phi(tind);
    end
    spike_phases = spike_phases(spike_times > -3 & spike_times < 0);
    % figure();
    % subplot(3,1,1)
    % plot(lfp_times, alpha, 'k-'); xlim([-3,0])
    % subplot(3,1,2)
    % plot(lfp_times, ALPHA, 'k-'); xlim([-3,0])
    % subplot(3,1,3)
    % plot(lfp_times, ALPHA ./ DELTA, 'k-'); xlim([-3,0])
    alpha_powers = [alpha_powers, ALPHA(lfp_times > -3 & lfp_times < 0)];
    all_times = [all_times, lfp_time(lfp_times > -3 & lfp_times < 0)];
end

high_phases = [];
low_phases = [];
% for trial = 1:length(trials)
%     % trial = 24;
%     t = trials(trial);
%     % t = 24;
for t = 1:size(slrt_data,1)
    c = find(ap_data(t,:).spiking_data{1}.cluster_id == 218);
    cluster_channel = ap_data(t,:).spiking_data{1}(c,:).channel{1};
    lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    alpha = bandpassFilter(lfp, 8, 12, 500);
    spike_times = ap_data(t,:).spiking_data{1}(c,:).left_trigger_aligned_spike_times{1};
    phi = angle(hilbert(alpha));
    ALPHA = abs(hilbert(alpha)).^2;
    delta = bandpassFilter(lfp, 1, 4, 500);
    DELTA = abs(hilbert(delta)).^2;
    for i = 1:length(spike_times)
        [~, tind] = min((lfp_times - spike_times(i)).^2);
        spike_phases(i) = phi(tind);
    end
    spike_phases = spike_phases(spike_times > -3 & spike_times < 0);
    spike_times = spike_times(spike_times > -3 & spike_times < 0);
    ALPHA = ALPHA(lfp_times > -3 & lfp_times < 0);
    lfp_times = lfp_times(lfp_times > -3 & lfp_times < 0);
    high_inds = findEvents(ALPHA, lfp_times, prctile(alpha_powers, 75), 0.33, 0.2, 'above');
    if size(high_inds,1)
        for n = 1:size(high_inds,1)
            begin = lfp_times(high_inds(n,1));
            fin = lfp_times(high_inds(n,2));
            high_phases = [high_phases, spike_phases(spike_times > begin & spike_times < fin)];
        end
    end
    low_inds = findEvents(ALPHA, lfp_times, prctile(alpha_powers, 50), 0.33, 0.2, 'below');
    if size(low_inds,1)
        for n = 1:size(low_inds,1)
            begin = lfp_times(low_inds(n,1));
            fin = lfp_times(low_inds(n,2));
            low_phases = [low_phases, spike_phases(spike_times >= begin & spike_times <= fin)];
        end
    end
end
[Nlow, ~] = histcounts(low_phases, 20, 'Normalization', 'pdf');
[Nhigh, ~] = histcounts(high_phases,20, 'Normalization', 'pdf');
low_mi = compute_modulation_index(Nlow);
high_mi = compute_modulation_index(Nhigh);
circ_rtest(low_phases)
circ_rtest(high_phases) 
*** plot all s1 cells 
load /insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Cortex/Spontaneous_Alpha_Modulation_v2/data.mat
alpha_modulated = out.alpha_modulated;
p_threshold = out.overall_p_threshold;
clear out 
out_file = '/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Cortex/Spontaneous_Alpha_Modulation_v2/high_v_low_alpha.mat';
load(out_file)
rs_low_mi = out.low_mi(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_high_mi = out.high_mi(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_low_p = out.low_p(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_high_p = out.high_p(strcmp(alpha_modulated.waveform_class, 'RS'));
fs_low_mi = out.low_mi(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_high_mi = out.high_mi(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_low_p = out.low_p(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_high_p = out.high_p(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_low_fr = out.low_firing_rates(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_high_fr = out.high_firing_rates(strcmp(alpha_modulated.waveform_class, 'FS'));
rs_low_fr = out.low_firing_rates(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_high_fr = out.high_firing_rates(strcmp(alpha_modulated.waveform_class, 'RS'));
fs_low_n_events = out.n_low_events(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_high_n_events = out.n_high_events(strcmp(alpha_modulated.waveform_class, 'FS'));
rs_low_n_events = out.n_low_events(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_high_n_events = out.n_high_events(strcmp(alpha_modulated.waveform_class, 'RS'));

fig = figure();
rs_low_mi_avg = nanmean(rs_low_mi);
rs_high_mi_avg = nanmean(rs_high_mi);
rs_low_mi_err = nanstd(rs_low_mi) ./ sqrt(sum(~isnan(rs_low_mi)));
rs_high_mi_err = nanstd(rs_high_mi) ./ sqrt(sum(~isnan(rs_high_mi)));
bar([1,2], [rs_low_mi_avg, rs_high_mi_avg], 'EdgeColor', [0.5, 0.5, 0.5], 'FaceColor', [0.5, 0.5, 0.5])
hold on 
errorbar([1,2], [rs_low_mi_avg, rs_high_mi_avg], [rs_low_mi_err, rs_high_mi_err], 'k.')
xticks(1:2)
xticklabels({'Low Alpha', 'High Alpha'})
ylabel('Spike-Phase Modulation Index')
saveas(fig, 'tmp/rs_lowVsHighAlpha_mi.png')

fig = figure();
fs_low_mi_avg = nanmean(fs_low_mi);
fs_high_mi_avg = nanmean(fs_high_mi);
fs_low_mi_err = nanstd(fs_low_mi) ./ sqrt(sum(~isnan(fs_low_mi)));
fs_high_mi_err = nanstd(fs_high_mi) ./ sqrt(sum(~isnan(fs_high_mi)));
bar([1,2], [fs_low_mi_avg, fs_high_mi_avg], 'EdgeColor', [0.5, 0.5, 0.5], 'FaceColor', [0.5, 0.5, 0.5])
hold on 
errorbar([1,2], [fs_low_mi_avg, fs_high_mi_avg], [fs_low_mi_err, fs_high_mi_err], 'k.')
xticks(1:2)
xticklabels({'Low Alpha', 'High Alpha'})
ylabel('Spike-Phase Modulation Index')
saveas(fig, 'tmp/fs_lowVsHighAlpha_mi.png')

fig = figure();
fs_low_pct = sum(fs_low_p < p_threshold) / sum(strcmp(alpha_modulated.waveform_class, 'FS'));
fs_high_pct = sum(fs_high_p < p_threshold) / sum(strcmp(alpha_modulated.waveform_class, 'FS'));
rs_low_pct = sum(rs_low_p < p_threshold) / sum(strcmp(alpha_modulated.waveform_class, 'RS'));
rs_high_pct = sum(rs_high_p < p_threshold) / sum(strcmp(alpha_modulated.waveform_class, 'RS'));

* [2025-1-6 Mon] - back at it 
** 2 more sessions to include 
** revisiting spike widths / clustering / plotting  
** paper figures 
*** figure 1 
**** AlphaModFigScripts/behaviorPlots.m 
***** output: 
Hit Rate vs FA Rate: Wilcoxon Signed Rank **p = 8.298099e-06
Hit RT vs FA RT: Wilcoxon Signed Rank p = 1
Mean d-prime: 2.245860e+00
d-prime Standard Error: 1.651590e-01
Avg Hit RT: 6.399760e-01
Hit RT Standard Error: 1.457324e-01
Avg FA RT: 4.958647e-01
FA RT Standard Error: 5.309723e-02
Avg. Hit Rate: 8.511917e-01  +/ 3.467413e-02
Avg. FA Rate: 1.677855e-01  +/ 2.291344e-02
*** figure 2 
**** AlphaModFigScripts/spikeClassificationPlots.m 
**** AlphaModFigScripts/avgFiringRatePlots.m 
***** output:
S1 RS: N = 325
S1 FS: N = 120
PFC RS: N = 769
PFC FS: N = 50
Striatum RS: N = 334
Striatum FS: N = 271
Amygdala RS: N = 17
Amygdala FS: N = 66

S1 RS Hit vs. Miss (Wilcoxon Signed Rank): p = 1.008483e-01
S1 FS Hit vs. Miss (Wilcoxon Signed Rank): **p = 2.460866e-06
S1 RS Hit: 2.694262e+00 +/- 3.043411e-01
S1 RS Miss: 2.526853e+00 +/- 3.400967e-01
S1 FS Hit: 1.055815e+01 +/- 1.130754e+00
S1 FS Miss: 7.073525e+00 +/- 1.115146e+00

PFC RS Hit vs. Miss: **p = 1.084976e-05
PFC FS Hit vs. Miss: p = 5.248378e-01
PFC RS Hit: 1.622038e+00 +/- 1.737086e-01
PFC RS Miss: 2.566705e+00 +/- 2.462419e-01
PFC FS Hit: 1.096726e+01 +/- 1.488217e+00
PFC FS Miss: 1.229030e+01 +/- 2.073398e+00

Striatum RS Hit vs. Miss: **p = 1.236238e-02
Striatum FS Hit vs. Miss: p = 7.066690e-01
Striatum RS Hit: 5.302277e+00 +/- 9.537372e-01
Striatum RS Miss: 4.457960e+00 +/- 8.618297e-01
Striatum FS Hit: 5.834167e+00 +/- 5.723637e-01
Striatum FS Miss: 5.907747e+00 +/- 5.511906e-01

Amygdala RS Hit vs. Miss: p = 3.087876e-01
Amygdala FS Hit vs. Miss: *p = 1.616748e-02
Amygdala RS Hit: 1.270943e+01 +/- 4.829138e+00
Amygdala RS Miss: 8.243446e+00 +/- 2.806683e+00
Amygdala FS Hit: 6.542293e+00 +/- 1.200372e+00
Amygdala FS Miss: 3.970716e+00 +/- 8.705040e-01
*** figure 3 
**** AlphaModFigScripts/exampleCellPhaseModulation.m 
***** output:
Rayleigh test for nonuniformity p-value: 1.75127e-03
**** AlphaModFigScripts/phaseModSummaries.m 
***** output:
S1 RS theta bars vs FS theta bars Kuiper test: p = 1.000000e-02
S1 RS MI vs FS MI Mann Whitney: p = 1.136098e-01
S1 RS von Mises MSE vs FS von Mises MSE Mann Whitney: p = 2.963873e-10
S1 RS vs FS fraction (Mann-Whitney): p = 6.474351e-01
S1 RS mean theta bar: 2.712596e+00 +/- 5.266109e-02
S1 FS mean theta bar: 2.954020e+00 +/- 8.853305e-02

s1_rs_ranova =

  5x8 table

                          SumSq      DF      MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                          ______    _____    ______    ______    __________    __________    __________    _________

    (Intercept):Time      2629.3       49     53.66    10.454    5.9129e-77    7.8507e-09     6.193e-09    0.0013513
    group:Time            263.34       49    5.3743     1.047       0.38381       0.38408       0.38455      0.30697
    subject:Time          1703.4       49    34.763    6.7723    4.2373e-43    1.1381e-05    9.9731e-06    0.0096878
    group:subject:Time    365.93       49     7.468    1.4549      0.020668       0.20987       0.20907      0.22864
    Error(Time)            80739    15729    5.1331                                                                 


s1_fs_ranova =

  5x8 table

                            SumSq        DF     MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                          __________    ____    ______    ______    ___________    __________    __________    __________

    (Intercept):Time           26499      49    540.79    21.217    5.5765e-169    4.6157e-13    2.1521e-13    1.0587e-05
    group:Time                3322.7      49     67.81    2.6604     3.5046e-09      0.045778      0.044037       0.10558
    subject:Time              5129.2      49    104.68    4.1069       6.65e-20     0.0062313     0.0057032      0.045002
    group:subject:Time        3023.1      49    61.696    2.4206     1.3233e-07      0.063327      0.061378       0.12248
    Error(Time)           1.4488e+05    5684    25.488                                                                   

PFC RS theta bars vs FS theta bars Kuiper test: p = 1.000000e-03
PFC RS MI vs FS MI Mann Whitney: p = 1.326594e-04
PFC RS von Mises MSE vs FS von Mises MSE Mann Whitney: p = 2.093616e-09
PFC RS vs FS fraction (Mann-Whitney): p = 1.451322e-05; 2.4414e-04 (signed rank)
PFC RS mean theta bar: 2.790738e+00 +/- 6.054429e-02
PFC FS mean theta bar: -1.294759e+00 +/- 2.264810e-01

pfc_rs_ranova =

  5x8 table

                          SumSq      DF      MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                          ______    _____    ______    ______    __________    __________    __________    _________

    (Intercept):Time      1040.1       49    21.226     8.258    4.4291e-57     2.297e-07    2.1114e-07    0.0041698
    group:Time            663.93       49     13.55    5.2716    4.3198e-30    0.00012831    0.00012279     0.021946
    subject:Time          801.97       49    16.367    6.3676    9.0967-40    1.2909e-05    1.2176e-05     0.011824
    group:subject:Time       580       49    11.837    4.6051    2.1097e-24     0.0005076    0.00048993     0.032191
    Error(Time)            96348    37485    2.5703                                                                 


pfc_fs_ranova =

  5x8 table

                          SumSq      DF     MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                          ______    ____    ______    ______    ___________    __________    __________    __________

    (Intercept):Time       12076      49    246.44    19.993    8.3414e-141    5.5302e-12    7.3778e-13    5.0551e-05
    group:Time            2308.3      49    47.108    3.8217     3.8412e-17     0.0083067     0.0065374      0.056685
    subject:Time          4619.9      49    94.283    7.6488     4.1857e-47    3.7212e-05    1.9018e-05     0.0081506
    group:subject:Time    977.48      49    19.949    1.6183      0.0044757       0.18116       0.17612       0.20972
    Error(Time)            27784    2254    12.327                                                                   

Warning: N=29 not found in table, using closest N=25 present. 
> In circ_kuipertest>kuiperlookup (line 100)
In circ_kuipertest (line 59)
In phaseModSummaries (line 933) 
Striatum RS theta bars vs FS theta bars Kuiper test: p = 1
Striatum RS MI vs FS MI Mann Whitney: p = 3.765356e-03
Striatum RS von Mises MSE vs FS von Mises MSE Mann Whitney: p = 2.424498e-04
Striatum RS vs FS fraction (Mann-Whitney): p = 1.150694e-01
Striatum RS mean theta bar: -2.770
Striatum FS mean theta bar: -2.724

striatum_rs_ranova =

  3x8 table

                          SumSq        DF      MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                        __________    _____    ______    ______    ___________    __________    __________    __________

    (Intercept):Time         15551       49    317.36    17.052    1.2398e-139    9.3855e-10    8.0724e-10    4.6072e-05
    group:Time              9657.1       49    197.08    10.589     2.8375e-78    2.8723e-06    2.6393e-06     0.0012545
    Error(Time)         3.0277e+05    16268    18.612           

striatum_fs_ranova =

  5x8 table

                            SumSq        DF      MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                          __________    _____    ______    ______    __________    __________    __________    _________

    (Intercept):Time           10845       49    221.34    10.274    5.3936e-75    8.4345e-09     6.302e-09    0.0015133
    group:Time                5313.8       49    108.44    5.0337    7.9026e-28    0.00029679    0.00026678     0.025679
    subject:Time              4563.6       49    93.135    4.3231     6.588e-22     0.0011781     0.0010839     0.038553
    group:subject:Time        4926.8       49    100.55    4.6672     9.511e-25    0.00060579    0.00055116     0.031635
    Error(Time)           2.8186e+05    13083    21.544                                                                 

Amygdala RS theta bars vs FS theta bars Kuiper test: p = NaN
Amygdala RS vs FS fraction (Mann-Whitney): p = 9.450110e-01
Amygdala RS MI vs FS MI Mann Whitney: p = 1
Amygdala RS von Mises MSE vs FS von Mises MSE Mann Whitney: p = 4.818182e-01
Amygdala RS mean theta bar: -0.658
Amygdala FS mean theta bar: -0.822

amygdala_rs_ranova =

  3x8 table

                        SumSq    DF     MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                        _____    ___    ______    ______    __________    __________    __________    _________

    (Intercept):Time    47256     49    964.42     14.97     9.826e-81    6.7184e-05    2.7679e-05    0.0015138
    group:Time          30809     49    628.75    9.7595    1.1821e-52    0.00090253    0.00050486    0.0069667
    Error(Time)         47352    735    64.424                                                 

amygdala_fs_ranova =

  3x8 table

                         SumSq       DF     MeanSq      F         pValue       pValueGG      pValueHF     pValueLB
                        ________    ____    ______    ______    __________    __________    __________    ________

    (Intercept):Time       16830      49    343.46    5.2542    1.2834e-28    0.00036979    0.00024243    0.025193
    group:Time              7339      49    149.78    2.2912    1.0018e-06      0.057942       0.05301     0.13503
    Error(Time)         2.05e+05    3136    65.369         

Total modulated S1 RS: 184
Total modulated S1 FS: 86
Total modulated S1: 270
S1 RS fraction modulated: 6.214559e-01 +/- 5.828600e-02
S1 FS fraction modulated: 6.318882e-01 +/- 5.962517e-02
Total modulated PFC RS: 192
Total modulated PFC FS: 35
Total modulated PFC: 227
PFC RS fraction modulated: 2.521986e-01 +/- 2.134616e-02
PFC FS fraction modulated: 7.528388e-01 +/- 6.957865e-02
Total modulated Striatum RS: 29
Total modulated Striatum FS: 29
Total modulated Striatum: 58
Striatum RS fraction modulated: 4.126935e-02 +/- 1.749167e-02
Striatum FS fraction modulated: 9.213333e-02 +/- 2.660349e-02
Total modulated Amygdala RS: 3
Total modulated Amygdala FS: 9
Total modulated Amygdala: 12
Amygdala RS fraction modulated: 3.333333e-01 +/- 1.666667e-01
Amygdala FS fraction modulated: 2.505051e-01 +/- 9.921052e-02

**** AlphaModFigScripts/laminarDistributions.m
***** output 
L1 RS ANOVA:

l1_rs_ranova =

  3x8 table

                        SumSq     DF     MeanSq        F        pValue    pValueGG    pValueHF    pValueLB
                        ______    ___    _______    ________    ______    ________    ________    ________

    (Intercept):Time    36.171     49    0.73818    0.092648       1      0.90878     0.92669     0.76433 
    group:Time          122.24     49     2.4948     0.31312       1      0.72933     0.75349     0.58267 
    Error(Time)         7027.4    882     7.9676                                                          

L2/3 RS ANOVA:

l2_rs_ranova =

  5x8 table

                          SumSq      DF     MeanSq       F         pValue       pValueGG      pValueHF     pValueLB
                          ______    ____    _______    ______    __________    __________    __________    ________

    (Intercept):Time      173.31      49      3.537    4.9205    1.5725e-24    0.00059724    0.00019963    0.034823
    group:Time            65.683      49     1.3405    1.8648    0.00032602       0.11208      0.096512     0.18295
    subject:Time          96.786      49     1.9752    2.7478    2.3816e-09       0.02562      0.017287     0.10855
    group:subject:Time    91.402      49     1.8653     2.595    2.1945e-08      0.033238      0.023463     0.11842
    Error(Time)           986.24    1372    0.71883                                                                

L2/3 FS ANOVA:

l2_fs_ranova =

  3x8 table

                        SumSq     DF     MeanSq       F         pValue      pValueGG     pValueHF     pValueLB
                        ______    ___    ______    _______    __________    _________    _________    ________

    (Intercept):Time    8568.6     49    174.87      5.324    1.5018e-25    0.0055589    0.0030613    0.034738
    group:Time          1013.3     49    20.679    0.62957       0.97801      0.57163      0.59873     0.43912
    Error(Time)          25751    784    32.846                                                               

L4 RS ANOVA:

l4_rs_ranova =

  5x8 table

                          SumSq      DF     MeanSq       F         pValue      pValueGG    pValueHF    pValueLB
                          ______    ____    ______    _______    __________    ________    ________    ________

    (Intercept):Time      369.28      49    7.5364      1.133       0.24479     0.33765    0.33868     0.29114 
    group:Time            336.92      49     6.876     1.0337       0.40929     0.38033    0.38267     0.31312 
    subject:Time          275.48      49     5.622    0.84519       0.76956     0.47402    0.47922     0.36137 
    group:subject:Time    899.35      49    18.354     2.7593    9.7411e-10    0.041514    0.03847     0.10158 
    Error(Time)            20860    3136    6.6517                                                             

L4 FS ANOVA:

l4_fs_ranova =

  3x8 table

                        SumSq     DF     MeanSq      F         pValue      pValueGG     pValueHF    pValueLB
                        ______    ___    ______    ______    __________    _________    ________    ________

    (Intercept):Time      6048     49    123.43    4.7566    3.4228e-22    0.0047617    0.002302    0.042696
    group:Time          794.95     49    16.223    0.6252       0.97973      0.60559      0.6373     0.43942
    Error(Time)          22887    882    25.949                                                             

L5 RS ANOVA:

l5_rs_ranova =

  5x8 table

                          SumSq      DF     MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                          ______    ____    ______    ______    ___________    __________    __________    __________

    (Intercept):Time      4688.4      49    95.683    18.633    1.1391e-139    9.5413e-15    1.1339e-15    5.0415e-05
    group:Time            1441.2      49    29.411    5.7276     1.2784e-32    0.00010441    6.3962e-05      0.019347
    subject:Time          3804.8      49    77.649    15.121    3.4066e-111    4.0324e-12    7.4136e-13    0.00022451
    group:subject:Time    1402.9      49    28.631    5.5756     2.2545e-31    0.00013847    8.6462e-05      0.020961
    Error(Time)            17865    3479     5.135                                                                   

L5 FS ANOVA:

l5_fs_ranova =

  5x8 table

                          SumSq     DF     MeanSq       F         pValue       pValueGG      pValueHF     pValueLB 
                          ______    ___    ______    _______    __________    __________    __________    _________

    (Intercept):Time      3148.9     49    64.264     9.2615    1.6287e-50    1.4983e-06    1.2517e-08    0.0077469
    group:Time             491.3     49    10.027      1.445      0.027062        0.2225       0.19857      0.24682
    subject:Time            2538     49    51.797     7.4648    2.1703e-39    1.8795e-05    4.5795e-07     0.014765
    group:subject:Time    303.05     49    6.1846    0.89131        0.6848       0.48437       0.51186      0.35916
    Error(Time)             5440    784    6.9388                                                                  

L6 RS ANOVA:

l6_rs_ranova =

  5x8 table

                          SumSq      DF     MeanSq        F        pValue    pValueGG    pValueHF    pValueLB
                          ______    ____    _______    ________    ______    ________    ________    ________

    (Intercept):Time      9.6667      49    0.19728    0.045855       1      0.99677     0.99733     0.83079 
    group:Time            31.059      49    0.63386     0.14733       1      0.96795     0.97105     0.70174 
    subject:Time          13.163      49    0.26863    0.062439       1      0.99399      0.9949     0.80309 
    group:subject:Time    18.073      49    0.36883    0.085729       1      0.98873     0.99021     0.77016 
    Error(Time)            26562    6174     4.3022                                                          

L6 FS ANOVA:

l6_fs_ranova =

  3x8 table

                        SumSq      DF     MeanSq      F         pValue       pValueGG      pValueHF     pValueLB 
                        ______    ____    ______    ______    __________    __________    __________    _________

    (Intercept):Time     14569      49    297.33    10.152    1.0955e-68    2.6108e-05    1.8557e-05    0.0023053
    group:Time          1460.5      49    29.807    1.0177       0.43963       0.37403       0.37636      0.31719
    Error(Time)          84674    2891    29.289                                                                 

S1 Fraction RS ANOVA:

p =

   8.6592e-09


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [7 11 15 15 14]
    source: 'anova1'
     means: [0.0952 0.7784 0.7881 0.7315 0.2168]
        df: 57
         s: 0.2779

S1 Fraction FS ANOVA:

p =

   2.7664e-04


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [1 9 11 10 12]
    source: 'anova1'
     means: [0 0.9074 0.8788 0.5467 0.3219]
        df: 38
         s: 0.3282

S1 MI RS ANOVA:

p =

   7.8252e-10


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [2 23 52 48 59]
    source: 'anova1'
     means: [0.0087 0.0230 0.0126 0.0070 0.0070]
        df: 179
         s: 0.0097

S1 MI FS ANOVA:

p =

   3.3679e-04


stats = 

  struct with fields:

    gnames: {4x1 cell}
         n: [16 17 13 40]
    source: 'anova1'
     means: [0.0138 0.0062 0.0120 0.0060]
        df: 82
         s: 0.0068

S1 MSE RS ANOVA:

p =

   1.1002e-05


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [2 23 52 48 59]
    source: 'anova1'
     means: [2.9281e-04 8.3775e-04 2.5706e-04 1.0459e-04 1.6233e-04]
        df: 179
         s: 5.5574e-04

S1 MSE FS ANOVA:

p =

   6.5813e-04


stats = 

  struct with fields:

    gnames: {4x1 cell}
         n: [16 17 13 40]
    source: 'anova1'
     means: [4.0737e-05 4.6587e-05 3.2981e-04 2.8633e-05]
        df: 82
         s: 2.2513e-04

Avg. Fraction L1 RS: 9.523810e-02
Avg. Fraction L2/3 RS: 7.783550e-01
Avg. Fraction L4 RS: 7.880952e-01
Avg. Fraction L5 RS: 7.315152e-01
Avg. Fraction L6 RS: 2.168308e-01
Avg. Fraction L1 FS: 0
Avg. Fraction L2/3 FS: 9.074074e-01
Avg. Fraction L4 FS: 8.787879e-01
Avg. Fraction L5 FS: 5.466667e-01
Avg. Fraction L6 FS: 3.218677e-01
Avg. MI L1 RS: 8.726846e-03
Avg. MI L2/3 RS: 2.301929e-02
Avg. MI L4 RS: 1.264710e-02
Avg. MI L5 RS: 6.978109e-03
Avg. MI L6 RS: 6.990651e-03
Avg. MI L1 FS: NaN
Avg. MI L2/3 FS: 1.379870e-02
Avg. MI L4 FS: 6.239108e-03
Avg. MI L5 FS: 1.202965e-02
Avg. MI L6 FS: 5.988386e-03
Avg. MSE L1 RS: 2.928139e-04
Avg. MSE L2/3 RS: 8.377544e-04
Avg. MSE L4 RS: 2.570609e-04
Avg. MSE L5 RS: 1.045892e-04
Avg. MSE L6 RS: 1.623282e-04
Avg. MSE L1 FS: NaN
Avg. MSE L2/3 FS: 4.073681e-05
Avg. MSE L4 FS: 4.658673e-05
Avg. MSE L5 FS: 3.298115e-04
Avg. MSE L6 FS: 2.863292e-05
ACC RS ANOVA:

AC_rs_ranova =

  3x8 table

                        SumSq      DF     MeanSq      F       pValue     pValueGG      pValueHF      pValueLB 
                        ______    ____    ______    ______    ______    __________    __________    __________

    (Intercept):Time    4495.5      49    91.745    66.551       0      1.9964e-26    1.1069e-26     3.949e-14
    group:Time          4048.9      49    82.631     59.94       0      3.5343e-24    2.0704e-24    5.0094e-13
    Error(Time)          13307    9653    1.3786                                                              

ACC FS ANOVA:

AC_fs_ranova =

  3x8 table

                        SumSq     DF     MeanSq      F         pValue        pValueGG      pValueHF      pValueLB 
                        ______    ___    ______    ______    ___________    __________    __________    __________

    (Intercept):Time     13542     49    276.38    18.536    6.8904e-100    2.2511e-05    1.0045e-05    0.00054454
    group:Time          1820.5     49    37.154    2.4919     1.8235e-07       0.10998        0.1042         0.134
    Error(Time)          11690    784     14.91                                                                   

PL RS ANOVA:

PL_rs_ranova =

  5x8 table

                          SumSq      DF      MeanSq       F       pValue    pValueGG    pValueHF    pValueLB
                          ______    _____    ______    _______    ______    ________    ________    ________

    (Intercept):Time      66.656       49    1.3603    0.30104         1    0.91273      0.9163     0.58377 
    group:Time            240.35       49    4.9051     1.0855    0.3166    0.36665     0.36702     0.29858 
    subject:Time          53.607       49     1.094    0.24211         1    0.94407     0.94692     0.62317 
    group:subject:Time    120.23       49    2.4537      0.543    0.9962    0.74424     0.74866     0.46196 
    Error(Time)            50041    11074    4.5188                                                         

PL FS ANOVA:

PL_fs_ranova =

  3x8 table

                        SumSq     DF     MeanSq      F        pValue     pValueGG    pValueHF    pValueLB
                        ______    ___    ______    ______    ________    ________    ________    ________

    (Intercept):Time    608.71     49    12.423    1.5318    0.014898    0.22719     0.19984     0.24715 
    group:Time          399.73     49    8.1578    1.0059     0.46626    0.40694     0.42492     0.34208 
    Error(Time)         3576.3    441    8.1096                                                          

IL RS ANOVA:

IL_rs_ranova =

  5x8 table

                          SumSq      DF     MeanSq        F       pValue     pValueGG    pValueHF    pValueLB
                          ______    ____    _______    _______    _______    ________    ________    ________

    (Intercept):Time      102.72      49     2.0963    0.49959    0.99865    0.75736     0.76709     0.48139 
    group:Time            24.846      49    0.50706    0.12084          1    0.98247      0.9853     0.72888 
    subject:Time          81.414      49     1.6615    0.39597    0.99995    0.83288     0.84243     0.53067 
    group:subject:Time    32.661      49    0.66654    0.15885          1    0.96942     0.97359      0.6911 
    Error(Time)            19738    4704      4.196                                                          

ORB RS ANOVA:

ORB_rs_ranova =

  3x8 table

                        SumSq      DF     MeanSq       F       pValue     pValueGG    pValueHF    pValueLB
                        ______    ____    _______    ______    _______    ________    ________    ________

    (Intercept):Time    10.376      49    0.21175    1.0105    0.45312    0.41813     0.42049     0.31726 
    group:Time           11.08      49    0.22612    1.0791      0.328    0.37383      0.3745     0.30146 
    Error(Time)         1006.3    4802    0.20955                                                         

ORB FS ANOVA:

ORB_fs_ranova =

  3x8 table

                        SumSq     DF     MeanSq      F        pValue      pValueGG    pValueHF    pValueLB
                        ______    ___    ______    ______    _________    ________    ________    ________

    (Intercept):Time     837.6     49    17.094     1.873    0.0014252     0.2155     0.16552     0.24296 
    group:Time          541.15     49    11.044    1.2101      0.18321    0.34738     0.34519     0.33307 
    Error(Time)         1788.8    196    9.1265                                                           

DP RS ANOVA:

DP_rs_ranova =

  3x8 table

                        SumSq      DF     MeanSq       F         pValue       pValueGG      pValueHF     pValueLB
                        ______    ____    _______    ______    __________    __________    __________    ________

    (Intercept):Time    122.25      49     2.4949    3.1777    7.4767e-13    0.00044786    0.00028037    0.076847
    group:Time          59.268      49     1.2095    1.5406     0.0091913       0.11806       0.11071     0.21663
    Error(Time)         5308.9    6762    0.78511                                                                

Avg. Fraction AC RS: 5.281554e-02
Avg. Fraction PL/3 RS: 3.044848e-01
Avg. Fraction IL RS: 5.401396e-01
Avg. Fraction ORB RS: 1.488095e-02
Avg. Fraction DP RS: 2.774464e-01
Avg. Fraction AC FS: 8.571429e-01
Avg. Fraction PL/3 FS: 2.777778e-01
Avg. Fraction IL FS: 1
Avg. Fraction ORB FS: 3.750000e-01
Avg. Fraction DP FS: 5.000000e-01
Avg. MI AC RS: 1.004684e-02
Avg. MI PL/3 RS: 1.028604e-02
Avg. MI IL RS: 6.387499e-03
Avg. MI ORB RS: 1.355293e-02
Avg. MI DP RS: 2.102771e-02
Avg. MI AC FS: 8.726907e-03
Avg. MI PL/3 FS: 5.056368e-03
Avg. MI IL FS: 4.398253e-03
Avg. MI ORB FS: 4.115363e-03
Avg. MI DP FS: 6.006836e-03
Avg. MSE AC RS: 3.791524e-04
Avg. MSE PL/3 RS: 5.538605e-04
Avg. MSE IL RS: 2.007180e-04
Avg. MSE ORB RS: 5.169995e-04
Avg. MSE DP RS: 9.442572e-04
Avg. MSE AC FS: 2.690077e-04
Avg. MSE PL/3 FS: 1.788476e-05
Avg. MSE IL FS: 1.884185e-05
Avg. MSE ORB FS: 2.485888e-05
Avg. MSE DP FS: 4.947697e-05
PFC RS Fractions ANOVA:

p =

   1.7680e-04


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [7 13 13 6 6]
    source: 'anova1'
     means: [0.0528 0.3045 0.5401 0.0149 0.2774]
        df: 40
         s: 0.2400

PFC FS Fractions ANOVA:

p =

    0.0070


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [7 6 6 4 2]
    source: 'anova1'
     means: [0.8571 0.2778 1 0.3750 0.5000]
        df: 20
         s: 0.3394

PFC RS MI ANOVA:

p =

   3.0736e-06


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [11 102 38 2 39]
    source: 'anova1'
     means: [0.0100 0.0103 0.0064 0.0136 0.0210]
        df: 187
         s: 0.0119

PFC FS MI ANOVA:

p =

    0.0141


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [16 3 13 2 1]
    source: 'anova1'
     means: [0.0087 0.0051 0.0044 0.0041 0.0060]
        df: 30
         s: 0.0032

PFC RS MSE ANOVA:

p =

    0.0246


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [11 102 38 2 39]
    source: 'anova1'
     means: [3.7915e-04 5.5386e-04 2.0072e-04 5.1700e-04 9.4426e-04]
        df: 187
         s: 9.8087e-04

PFC FS MSE ANOVA:

p =

    0.4553


stats = 

  struct with fields:

    gnames: {5x1 cell}
         n: [16 3 13 2 1]
    source: 'anova1'
     means: [2.6901e-04 1.7885e-05 1.8842e-05 2.4859e-05 4.9477e-05]
        df: 30
         s: 3.7774e-04
**** DONE: breakup spikePhaseAnalysis.m 
*** figure 4
**** AlphaModFigScripts/alphaPowerAndPhaseModSummaries.m 
***** output:
S1 RS low alpha MI vs high alpha MI (signed-rank): **p = 4.274531e-24
S1 RS avg high minus low MI: 4.221103e-02
S1 FS low alpha MI vs high alpha MI (signed-rank): **p = 7.989099e-16
S1 FS avg high minus low MI: 2.627693e-02
PFC RS low alpha MI vs high alpha MI (signed-rank): **p = 5.863764e-31
PFC RS avg high minus low MI: 5.819169e-02
PFC FS low alpha MI vs high alpha MI (signed-rank): **p = 2.703124e-07
PFC FS avg high minus low MI: 8.634265e-03
Striatum RS low alpha MI vs high alpha MI (signed-rank): **p = 3.789619e-06
Striatum RS avg high minus low MI: 8.744263e-02
Striatum FS low alpha MI vs high alpha MI (signed-rank): **p = 3.514963e-06
Striatum FS avg high minus low MI: 1.965586e-02
Amygdala RS low alpha MI vs high alpha MI (signed-rank): p = 2.500000e-01
Amygdala RS avg high minus low MI: 8.219553e-03
Amygdala FS low alpha MI vs high alpha MI (signed-rank): *p = 7.812500e-03
Amygdala FS avg high minus low MI: 8.762227e-03

S1 RS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 5.511945e-17
S1 RS avg high minus low MSE: 2.881268e-03
S1 FS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 2.815233e-14
S1 FS avg high minus low MSE: 8.355859e-04
PFC RS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 2.653890e-29
PFC RS avg high minus low MSE: 7.083174e-03
PFC FS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 2.477028e-07
PFC FS avg high minus low MSE: 1.037340e-03
Striatum RS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 5.606117e-06
Striatum RS avg high minus low MSE: 1.000957e-02
Striatum FS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 2.563083e-06
Striatum FS avg high minus low MSE: 2.333482e-03
Amygdala RS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): p = 2.500000e-01
Amygdala RS avg high minus low MSE: 5.280252e-04
Amygdala FS low alpha von Mises MSE vs high alpha von Mises MSE (signed-rank): **p = 3.906250e-03
Amygdala FS avg high minus low MSE: 7.833236e-04

S1 RS theta bar distribtions kuipers test: 1.000000e-02
S1 FS theta bar distribtions kuipers test: 1
PFC RS theta bar distribtions kuipers test: 1
PFC FS theta bar distribtions kuipers test: 1
Striatum RS theta bar distribtions kuipers test: 1
Striatum FS theta bar distribtions kuipers test: 1
Amygdala RS theta bar distribtions kuipers test: NaN (n too small) 
Amygdala FS theta bar distribtions kuipers test: 1

S1 RS low alpha FR vs high alpha FR (signed-rank): p = 7.633776e-01
S1 RS avg high minus low FR: -1.060959e-01
S1 FS low alpha FR vs high alpha FR (signed-rank): *p = 1.060021e-02
S1 FS avg high minus low FR: 5.681612e-01
PFC RS low alpha FR vs high alpha FR (signed-rank): p = 8.349823e-02
PFC RS avg high minus low FR: -2.763482e-01
PFC FS low alpha FR vs high alpha FR (signed-rank): p = 6.187055e-02
PFC FS avg high minus low FR: -7.406525e-01
Striatum RS low alpha FR vs high alpha FR (signed-rank): p = 1.514012e-01
Striatum RS avg high minus low FR: 1.470549e-01
Striatum FS low alpha FR vs high alpha FR (signed-rank): p = 7.802016e-02
Striatum FS avg high minus low FR: 8.056176e-01
Amygdala RS low alpha FR vs high alpha FR (signed-rank): p = 7.500000e-01
Amygdala RS avg high minus low FR: 1.244865e+00
Amygdala FS low alpha FR vs high alpha FR (signed-rank): p = 7.343750e-01
Amygdala FS avg high minus low FR: -9.602273e-01

**** DONE: flesh out phaseModAndPower.m 
*** figure 5 
**** used output from FTR_Analysis/spontaneousAlphaModulation.m 
*** figure 6 
**** AlphaModFigScripts/modulationAndBehaviorSummaries.m 
***** output:
PFC RS MSE ANOVA:

p =

   6.0329e-29


stats = 

  struct with fields:

    gnames: {4x1 cell}
         n: [173 172 174 173]
    source: 'anova1'
     means: [0.0016 0.0094 6.9129e-04 0.0028]
        df: 688
         s: 0.0074

S1 RS MSE ANOVA:

p =

   3.3595e-19


stats = 

  struct with fields:

    gnames: {4x1 cell}
         n: [178 176 178 178]
    source: 'anova1'
     means: [0.0011 0.0086 3.7209e-04 0.0037]
        df: 706
         s: 0.0087

Striatum RS MSE ANOVA:

p =

   4.7146e-04


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [26 26 26 26]
    source: 'anova1'
     means: [0.0013 0.0089 5.5064e-04 0.0042]
        df: 100
         s: 0.0076

Amygdala RS MSE ANOVA:

p =

    0.4767


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [3 3 3 3]
    source: 'anova1'
     means: [0.0025 2.5693e-04 1.6255e-05 0.0037]
        df: 8
         s: 0.0032

PFC RS MI ANOVA:

p =

   9.8989e-15


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [172 172 172 172]
    source: 'anova1'
     means: [0.0234 0.0795 0.0112 0.0356]
        df: 684
         s: 0.0798

S1 RS MI ANOVA:

p =

   2.0267e-17


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [178 178 178 178]
    source: 'anova1'
     means: [0.0170 0.0859 0.0114 0.0381]
        df: 708
         s: 0.0847

Striatum RS MI ANOVA:

p =

    0.0018


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [26 26 26 26]
    source: 'anova1'
     means: [0.0201 0.0831 0.0108 0.0445]
        df: 100
         s: 0.0712

Amygdala RS MI ANOVA:

p =

    0.4508


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [3 3 3 3]
    source: 'anova1'
     means: [0.0230 0.0071 0.0054 0.0357]
        df: 8
         s: 0.0252

PFC FS MSE ANOVA:

p =

   3.1663e-12


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [35 35 35 35]
    source: 'anova1'
     means: [3.2287e-04 0.0032 1.8174e-04 5.5796e-04]
        df: 136
         s: 0.0017

S1 FS MSE ANOVA:

p =

   5.5622e-05


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [86 86 86 86]
    source: 'anova1'
     means: [3.1644e-04 0.0038 1.4870e-04 0.0013]
        df: 340
         s: 0.0057

Striatum FS MSE ANOVA:

p =

    0.0276


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [28 28 28 28]
    source: 'anova1'
     means: [3.1159e-04 0.0026 1.1144e-04 0.0017]
        df: 108
         s: 0.0035

Amygdala FS MSE ANOVA:

p =

    0.1497


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [9 9 9 9]
    source: 'anova1'
     means: [1.6201e-04 0.0016 4.3798e-05 0.0011]
        df: 32
         s: 0.0016

PFC FS MI ANOVA:

p =

   1.9478e-10


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [35 35 35 35]
    source: 'anova1'
     means: [0.0078 0.0292 0.0070 0.0097]
        df: 136
         s: 0.0143

S1 FS MI ANOVA:

p =

   1.1581e-04


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [86 86 86 86]
    source: 'anova1'
     means: [0.0105 0.0400 0.0089 0.0182]
        df: 340
         s: 0.0497

Striatum FS MI ANOVA:

p =

    0.0390


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [28 28 28 28]
    source: 'anova1'
     means: [0.0079 0.0248 0.0061 0.0179]
        df: 108
         s: 0.0274

Amygdala FS MI ANOVA:

p =

    0.1573


stats = 

  struct with fields:

    gnames: [4x1 char]
         n: [9 9 9 9]
    source: 'anova1'
     means: [0.0064 0.0190 0.0055 0.0121]
        df: 32
         s: 0.0137

S1 RS MI Correct vs. Incorrect (signed rank): **p = 4.641976e-25
S1 RS MI Action vs. Inaction (signed rank): **p = 6.098753e-08
S1 RS MSE Correct vs. Incorrect (signed rank): **p = 6.894935e-31
S1 RS MSE Action vs. Inaction (signed rank): **p = 2.698448e-20
S1 FS MI Correct vs. Incorrect (signed rank): **p = 2.830217e-06
S1 FS MI Action vs. Inaction (signed rank): *p = 1.732579e-03
S1 FS MSE Correct vs. Incorrect (signed rank): **p = 8.275259e-16
S1 FS MSE Action vs. Inaction (signed rank): **p = 8.757140e-11
PFC RS MI Correct vs. Incorrect (signed rank): **p = 1.359835e-15
PFC RS MI Action vs. Inaction (signed rank): *p = 6.647954e-03
PFC RS MSE Correct vs. Incorrect (signed rank): **p = 1.030800e-16
PFC RS MSE Action vs. Inaction (signed rank): *p = 6.554076e-04
PFC FS MI Correct vs. Incorrect (signed rank): **p = 7.858695e-04
PFC FS MI Action vs. Inaction (signed rank): p = 7.681279e-01
PFC FS MSE Correct vs. Incorrect (signed rank): **p = 5.595052e-05
PFC FS MSE Action vs. Inaction (signed rank): p = 6.419212e-02
Striatum RS MI Correct vs. Incorrect (signed rank): **p = 1.872639e-05
Striatum RS MI Action vs. Inaction (signed rank): p = 7.336435e-02
Striatum RS MSE Correct vs. Incorrect (signed rank): **p = 8.298099e-06
Striatum RS MSE Action vs. Inaction (signed rank): **p = 7.647933e-04
Striatum FS MI Correct vs. Incorrect (signed rank): **p = 2.523212e-05
Striatum FS MI Action vs. Inaction (signed rank): *p = 2.853853e-03
Striatum FS MSE Correct vs. Incorrect (signed rank): **p = 3.789619e-06
Striatum FS MSE Action vs. Inaction (signed rank): **p = 7.258282e-06
Amygdala RS MI Correct vs. Incorrect (signed rank): p = 2.500000e-01
Amygdala RS MI Action vs. Inaction (signed rank): p = 7.500000e-01
Amygdala RS MSE Correct vs. Incorrect (signed rank): p = 2.500000e-01
Amygdala RS MSE Action vs. Inaction (signed rank): p = 2.500000e-01
Amygdala FS MI Correct vs. Incorrect (signed rank): p = 9.765625e-02
Amygdala FS MI Action vs. Inaction (signed rank): p = 5.703125e-01
Amygdala FS MSE Correct vs. Incorrect (signed rank): *p = 1.171875e-02
Amygdala FS MSE Action vs. Inaction (signed rank): p = 9.765625e-02
S1 RS MI Incorrect minus Correct: 1.516977e-02 +/- 3.426184e-03
S1 RS MI Inaction minus Action: -3.393333e-03 +/- 7.793897e-04
S1 RS von Mises MSE Incorrect minus Correct: 1.796423e-03 +/- 4.034690e-04
S1 RS von Mises MSE Inaction minus Action: -4.371289e-04 +/- 8.365184e-05
PFC RS MI Incorrect minus Correct: 1.455528e-02 +/- 6.129972e-03
PFC RS MI Inaction minus Action: -5.909948e-03 +/- 3.347496e-03
PFC RS von Mises MSE Incorrect minus Correct: 1.076019e-03 +/- 2.891415e-04
PFC RS von Mises MSE Inaction minus Action: -7.370958e-04 +/- 4.404042e-04
Striatum RS MI Incorrect minus Correct: 1.930731e-02 +/- 8.387955e-03
Striatum RS MI Inaction minus Action: -4.662725e-03 +/- 3.238553e-03
Striatum RS von Mises MSE Incorrect minus Correct: 2.391095e-03 +/- 9.374360e-04
Striatum RS von Mises MSE Inaction minus Action: -3.413599e-04 +/- 1.374590e-04
Amygdala RS MI Incorrect minus Correct: 8.532174e-04 +/- 4.979234e-04
Amygdala RS MI Inaction minus Action: -9.766671e-03 +/- 9.814244e-03
Amygdala RS von Mises MSE Incorrect minus Correct: 6.917311e-05 +/- 2.800558e-05
Amygdala RS von Mises MSE Inaction minus Action: -1.603878e-03 +/- 1.550288e-03
S1 FS MI Incorrect minus Correct: 4.005197e-03 +/- 1.916043e-03
S1 FS MI Inaction minus Action: -1.311403e-03 +/- 6.326751e-04
S1 FS von Mises MSE Incorrect minus Correct: 3.273957e-04 +/- 6.145255e-05
S1 FS von Mises MSE Inaction minus Action: -1.093441e-04 +/- 3.488093e-05
PFC FS MI Incorrect minus Correct: 1.020003e-03 +/- 4.431308e-04
PFC FS MI Inaction minus Action: -1.088585e-04 +/- 3.824634e-04
PFC FS von Mises MSE Incorrect minus Correct: 1.297417e-04 +/- 6.045752e-05
PFC FS von Mises MSE Inaction minus Action: -4.017762e-05 +/- 3.638212e-05
Striatum FS MI Incorrect minus Correct: 4.846285e-03 +/- 2.027633e-03
Striatum FS MI Inaction minus Action: -1.594615e-03 +/- 6.289577e-04
Striatum FS von Mises MSE Incorrect minus Correct: 7.288588e-04 +/- 3.567717e-04
Striatum FS von Mises MSE Inaction minus Action: -1.223437e-04 +/- 4.713004e-05
Amygdala FS MI Incorrect minus Correct: 5.781994e-04 +/- 3.026418e-04
Amygdala FS MI Inaction minus Action: -7.174247e-04 +/- 6.090235e-04
Amygdala FS von Mises MSE Incorrect minus Correct: 9.833980e-05 +/- 3.271796e-05
Amygdala FS von Mises MSE Inaction minus Action: -7.534874e-05 +/- 4.807654e-05
S1 RS theta bar ANOVA:

ans =

    0.6184

S1 FS theta bar ANOVA:

ans =

    0.4401

PFC RS theta bar ANOVA:

ans =

   5.7106e-08

PFC FS theta bar ANOVA:

ans =

    0.4113

Striatum RS theta bar ANOVA:

ans =

    0.8417

Striatum FS theta bar ANOVA:

ans =

    0.5311

Amygdala RS theta bar ANOVA:

ans =

    0.0086

Amygdala FS theta bar ANOVA:

ans =

    0.8191

PFC RS cognitive anova:

ans =

   3.5595e-12

PFC RS motor anova:

ans =

   9.6843e-04

PFC FS cognitive anova:

ans =

   5.1854e-06

PFC FS motor anova:

ans =

    0.0011

S1 RS cognitive anova:

ans =

   9.1371e-09

S1 RS motor anova:

ans =

   4.2469e-06

S1 FS cognitive anova:

ans =

   7.1337e-04

S1 FS motor anova:

ans =

   5.1702e-04

Striatum RS cognitive anova:

ans =

   1.1766e-05

Striatum RS motor anova:

ans =

    0.2375

Striatum FS cognitive anova:

ans =

   4.1101e-04

Striatum FS motor anova:

ans =

    0.4945

Amygdala RS cognitive anova:

ans =

   1.0948e-47

Amygdala RS motor anova:

ans =

    0.0787

Amygdala FS cognitive anova:

ans =

    0.0014

Amygdala FS motor anova:

ans =

    0.0494
* [2025-1-7 Tue] - closer look at lfps 
** lfp phase shift by depth for single oscillation
*** > In phaseModAndPower (line 70) 
**** plot alpha traces for single alpha oscillations 
channels = 241:4:385;
fig = figure(); hold on;
for c = 1:length(channels)
    cluster_channel = channels(c);
    lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
    alpha = bandpassFilter(lfp, 8, 12, 500);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    alpha = alpha(lfp_times > -3 & lfp_times < 0);
    alpha_phase = angle(hilbert(alpha));
    lfp_times = lfp_times(lfp_times > -3 & lfp_times < 0);
    % plot(lfp_times(high_inds(n,1)-20:high_inds(n,2)+20), ...
    %     (alpha(high_inds(n,1)-20:high_inds(n,2)+20)./max(alpha(high_inds(n,1)-20:high_inds(n,2)+20))*2)+cluster_channel, 'k-')
    % plot(lfp_times(high_inds(n,1)-20:high_inds(n,2)+20), ...
    %     (alpha_phase(high_inds(n,1)-20:high_inds(n,2)+20)./max(alpha_phase(high_inds(n,1)-20:high_inds(n,2)+20))*2)+cluster_channel, 'k-')
    % plot(lfp_times, ...
    % (alpha./max(alpha)*2)+cluster_channel, 'k-')
end
**** plot circular distance from reference electrode 
ref = 241;
lfp = lfp_data(t,:).lfp{1}(ref,:);
alpha = bandpassFilter(lfp, 8, 12, 500);
lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
alpha = alpha(lfp_times > -3 & lfp_times < 0);
ref_phase = angle(hilbert(alpha));
ref_phase = ref_phase(high_inds(n,1):high_inds(n,2));
for c = 1:length(channels)
    cluster_channel = channels(c);
    lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
    alpha = bandpassFilter(lfp, 8, 12, 500);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    alpha = alpha(lfp_times > -3 & lfp_times < 0);
    alpha_phase = angle(hilbert(alpha));
    alpha_phase = alpha_phase(high_inds(n,1):high_inds(n,2));
    avg_dists(c) = circ_mean(circ_dist(ref_phase, alpha_phase));
end 
** lfp phase shifts across all oscillation events on reference electrode 
*** > In phaseModAndPower (line 70) 
**** phase shift vs channel depth 
channels = 1:4:385;
ref = 241;
alpha_powers = [];
all_phases = [];
all_times = [];
for t = 1:size(slrt_data,1)
    cluster_channel = ref;
    lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    lfp_time = lfp_data(t,:).lfpTime{1};
    alpha = bandpassFilter(lfp, 8, 12, 500);
    phi = angle(hilbert(alpha));
    ALPHA = abs(hilbert(alpha)).^2;
    alpha_powers = [alpha_powers, ALPHA(lfp_times > -3 & lfp_times < 0)];
    all_times = [all_times, lfp_time(lfp_times > -3 & lfp_times < 0)];
end
dist_mat = [];
for t = 1:size(slrt_data,1)
    lfp = lfp_data(t,:).lfp{1}(ref,:);
    alpha = bandpassFilter(lfp, 8, 12, 500);
    lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
    ALPHA = abs(hilbert(alpha)).^2;
    ALPHA = ALPHA(lfp_times > -3 & lfp_times < 0);
    ref_alpha = alpha(lfp_times > -3 & lfp_times < 0);
    ref_phi = angle(hilbert(ref_alpha));
    lfp_times = lfp_times(lfp_times > -3 & lfp_times < 0);
    high_inds = findEvents(ALPHA, lfp_times, prctile(alpha_powers, 75), 0.33, 0.2, 'above');
    if size(high_inds,1)
        for n = 1:size(high_inds,1)
            ref_phase = ref_phi(high_inds(n,1):high_inds(n,2));
            avg_dists = zeros(1, length(channels));
            for c = 1:length(channels)
                cluster_channel = channels(c);
                lfp = lfp_data(t,:).lfp{1}(cluster_channel,:);
                alpha = bandpassFilter(lfp, 8, 12, 500);
                lfp_times = lfp_data(t,:).left_trigger_aligned_lfp_time{1};
                alpha = alpha(lfp_times > -3 & lfp_times < 0);
                alpha_phase = angle(hilbert(alpha));
                alpha_phase = alpha_phase(high_inds(n,1):high_inds(n,2));
                avg_dists(c) = circ_mean(circ_dist(ref_phase, alpha_phase));
            end 
            dist_mat = [dist_mat; avg_dists];
        end
    end
end
** across sessions 
addpath(genpath('./'))
addpath(genpath('~/circstat-matlab/'))
sessionIDs;
ksChanMap = load('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3387-20240121/neuropixPhase3A_kilosortChanMap.mat');
alphaPhaseShiftAcrossProbe(expert_3387_session_ids, ksChanMap.chanMap);

* [2025-1-8 Wed] - phase shifts, phase modulation and alpha power connection 
** lfp phase shift across probe 
*** new references 
**** 3378, 3738 (layer 5): 285
**** 1075 (ACC): try 180 
**** 3755 (ACC): 300

* [2025-1-9 Thu] - poisson sims 
** poisson spikes at different rates and phase modulation 
duration = 20;
Fs = 1000;
L = duration * Fs;
T = 1/Fs;
t = (0:L-1)*T;
lfp_fs = 8:0.1:12;
firing_rates = 1:0.5:20;
Nruns = 10;
mis = zeros(length(lfp_fs),length(firing_rates), Nruns);
mse = zeros(length(lfp_fs),length(firing_rates), Nruns);
ps = zeros(length(lfp_fs),length(firing_rates), Nruns);

for n = 1:Nruns
    for fi = 1:length(lfp_fs)
        f = lfp_fs(fi);
        y = sin(2*pi*f*t);
        phi = angle(hilbert(y));
        for fr = 1:length(firing_rates)
            spikeTimes = generatePoissonSpikes(fr, duration);
            spike_phases = zeros(1,length(spikeTimes));
            for st = 1:length(spikeTimes)
                [~, ind] = min((t-spikeTimes(st)).^2);
                spike_phases(st) = phi(ind);
            end 
            [N, edges] = histcounts(spike_phases, 20);
            centers = zeros(length(edges)-1,1);
            for e = 1:(length(edges)-1)
                centers(e) = mean(edges(e:(e+1)));
            end
            % figure();
            % bar(centers, N, 'EdgeColor', 'k', 'FaceColor', [0.5,0.5,0.5], 'BarWidth', 1)
            mis(fi,fr,n) = compute_modulation_index(N);
        end
    end
end

* [2025-1-10 Fri] - towards wrapping up analysis 
** paper thoughts 
*** connection between disregulation of alpha modulation on incorrect trials with mike's theory of separation of encoding and retrieval 
*** connection between disregulation of alpha modulation on incorrect trials in line with theories of alpha's role in attention, ignoring distractions, prepared state
** TODOS 
*** DONE: add *s to Figures/lowVsHighAlpha_summary.svg
*** DONE: add *s for significance in AlphaModFigScripts/phaseModSummaries.m
*** DONE: finish AlphaModFigScripts/modulationAndBehaviorSummaries.m 
*** DONE: add MSE to 
**** DONE: AlphaModFigScripts/modulationAndBehaviorSummaries.m
**** DONE: AlphaModFigScripts/laminarDistributions.m
**** DONE: AlphaModFigScripts/phaseModSummaries.m 
**** DONE: AlphaModFigScripts/alphaPowerAndPhaseModSummaries.m
***** DONE: rerun phaseModAndPower.m with MSE calculation 
*** DONE: plot results of poisson simulations (or reduce simulated time if necessary)
*** DONE: flesh out phase shift figures 
**** could maybe plot out like probe contacts ... but so much work ....
**** could just keep as function of depths (skipping contacts) and label regions 
** fleshing out phase shifts across probe 
addpath(genpath('./'))
addpath(genpath('~/circstat-matlab/'))
sessionIDs;
ksChanMap = load('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3387-20240121/neuropixPhase3A_kilosortChanMap.mat');
phase_shift_3387 = alphaPhaseShiftAcrossProbe(expert_3387_session_ids, ksChanMap.chanMap, 285);
phase_shift_3738 = alphaPhaseShiftAcrossProbe(expert_3738_session_ids, false, 285);
phase_shift_3755 = alphaPhaseShiftAcrossProbe(expert_3755_session_ids, false, 300);
phase_shift_1075 = alphaPhaseShiftAcrossProbe(expert_1075_session_ids, false, 180);

[phase_shift_3387_Hit, ...
    phase_shift_3387_Miss, ...
    phase_shift_3387_FA, ...
    phase_shift_3387_CR] = ...
    alphaPhaseShiftAcrossProbeByOutcome(expert_3387_session_ids, ksChanMap.chanMap, 285);
[phase_shift_3738_Hit, ...
    phase_shift_3738_Miss, ...
    phase_shift_3738_FA, ...
    phase_shift_3738_CR] = ...
    alphaPhaseShiftAcrossProbeByOutcome(expert_3738_session_ids, false, 285);
[phase_shift_3755_Hit, ...
    phase_shift_3755_Miss, ...
    phase_shift_3755_FA, ...
    phase_shift_3755_CR] = ...
    alphaPhaseShiftAcrossProbeByOutcome(expert_3755_session_ids, false, 285);
[phase_shift_1075_Hit, ...
    phase_shift_1075_Miss, ...
    phase_shift_1075_FA, ...
    phase_shift_1075_CR] = ...
    alphaPhaseShiftAcrossProbeByOutcome(expert_1075_session_ids, false, 180);
channels = 1:4:385;

out_file = 'phase_shift_results.mat';
out = struct();
out.phase_shift_1075 = phase_shift_1075;
out.phase_shift_3755 = phase_shift_3755;
out.phase_shift_3738 = phase_shift_3738;
out.phase_shift_3387 = phase_shift_3387;
out.phase_shift_1075_Hit = phase_shift_1075_Hit;
out.phase_shift_3755_Hit = phase_shift_3755_Hit;
out.phase_shift_3738_Hit = phase_shift_3738_Hit;
out.phase_shift_3387_Hit = phase_shift_3387_Hit;
out.phase_shift_1075_Miss = phase_shift_1075_Miss;
out.phase_shift_3755_Miss = phase_shift_3755_Miss;
out.phase_shift_3738_Miss = phase_shift_3738_Miss;
out.phase_shift_3387_Miss = phase_shift_3387_Miss;
out.phase_shift_1075_CR = phase_shift_1075_CR;
out.phase_shift_3755_CR = phase_shift_3755_CR;
out.phase_shift_3738_CR = phase_shift_3738_CR;
out.phase_shift_3387_CR = phase_shift_3387_CR;
out.phase_shift_1075_FA = phase_shift_1075_FA;
out.phase_shift_3755_FA = phase_shift_3755_FA;
out.phase_shift_3738_FA = phase_shift_3738_FA;
out.phase_shift_3387_FA = phase_shift_3387_FA;

save(out_file, 'out', '-v7.3');

fig = figure(); subplot(1,2,1); imagesc(mean(out.phase_shift_3387)'); clim([-pi,pi]); colorbar(); subplot(1,2,2); imagesc(mean(out.phase_shift_3738)');clim([-pi,pi]);  colorbar();
saveas(fig, 'tmp/compare_s1_phase_shifts.png'); close; 

fig = figure(); subplot(1,2,1); imagesc(mean(out.phase_shift_3755)'); clim([-pi,pi]); colorbar(); subplot(1,2,2); imagesc(mean(out.phase_shift_1075)'); clim([-pi,pi]); colorbar();
saveas(fig, 'tmp/compare_pfc_phase_shifts.png'); close; 

s1_phase_shifts = [out.phase_shift_3387; out.phase_shift_3738];
pfc_phase_shifts = [out.phase_shift_3755; out.phase_shift_1075];

fig = figure(); subplot(1,2,1); imagesc(mean(s1_phase_shifts)'); clim([-pi,pi]); colorbar(); subplot(1,2,2); imagesc(mean(pfc_phase_shifts)'); clim([-pi,pi]);  colorbar();
saveas(fig, 'tmp/compare_avg_phase_shifts.png'); close; 

s1RM = load('/insomnia001/depts/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Subjects/3738-20240702/regionMap.mat');
regMap = flipud(s1RM.regMap);
regs = unique(regMap);

* [2025-1-13 Mon] - MSE of von Mises 
** consider replacing MSE for von Mises with MI replacing uniform distribution with von Mises distribution 
** explanation of MI and von Mises MSE 
Three possible scenarios:
1. High MI & low MSE: firing rate is strongly modulated by alpha phase 
2. Low MI & low MSE: firing rate is weakly modulated by alpha phase 
3. High MI & high MSE: disordered firing rate with respect to alpha phase. 
In the third case, the distribution of spikes across alpha phase differs strognly from both the uniform distribtion 
and the best fit von Mises distribtion (the circular analog to the normal distribution).
Since MI measures the distance from the uniform distribtion, and the von Mises distribtion 
can be equivalent to the uniform distribution if appropriately parameterized, there is no scenario in which MI is low and MSE
of the best fit von Mises distribution is high.

* [2025-1-14 Tue] - TODOS 
** TODOS 
*** DONE: plot MSE and MI distributions for high vs low and outcomes 
**** a handful of outliers severely skew the results.  removed the outliers.
*** TODO: further discretize poisson simulations 
*** DONE: add firing rates to laminar distribution

* [2025-1-16 Thu] - adding angles to everything 
** adding amygdala and striatum to AlphaModFigScripts/alphaPowerAndPhaseModSummaries.m 
** adding angles to everything 
*** rerunning phase analysis to get theta_bar for correct/incorrect/action/inaction 

* [2025-1-17 Fri] - plotting lfp avgs 
** now AlphaModFigScripts/lfpPowerByOutcome.m 

* [2025-1-22 Wed] - more TODOS
** TODOS 
*** DONE: finish neural recording overview figure 
**** DONE: compose waveform classification panel 
***** fig: x = 41.086; y = 372.609; box: x = 67.204; y = 380.206
**** DONE: label phase shift plots w/ regions 
*** TODO: put together supplemental figure for poisson simulations 
*** DONE: add amygdala example for penultimate figure 
*** DONE: %s for laminar/dv distributions 

* [2025-1-24 Fri] - bugs in laminarDistributions.m 
** bug in AlphaModFigScripts/laminarDistributions.m 
*** DONE: redo figure 
*** DONE: check stats for FS firing rates in S1 

* [2025-1-25 Sat] - laminar distributions 
** good example of cell whose preffered phase is 0 radians 
date--2024-09-96_subj--3755...cluster_158

* [2025-1-27 Mon] - bimodal distributions 
** varieties of phase coupling 
*** bimodal 
**** date--2024-12-17_subj--1075...cluster_197
**** date--2024-09-03_subj--3755...cluster_110
** bimodal vs von mises 
pfc = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/PFC_Expert_Combo/PFC/Spontaneous_Alpha_Modulation_v2/data.mat');
pfc = pfc.out.alpha_modulated;
mses_von_mises = pfc.mses;
mses_bimodal = zeros(size(pfc,1),1);
for c = 1:size(pfc,1)
    [N, edges] = histcounts(pfc(c,:).spon_alpha_spike_phases{1}, 20, 'Normalization', 'pdf');
    binCenters = zeros(length(edges)-1,1);
    for e = 1:(length(edges)-1)
        binCenters(e) = mean(edges(e:(e+1)));
    end
    gmmModel = fitgmdist(pfc(c,:).spon_alpha_spike_phases{1}', 2);
    x = linspace(min(binCenters), max(binCenters), 1000); % Fine grid for PDF
    y = pdf(gmmModel, x'); % Evaluate GMM PDF
    y_interpolated = interp1(x, y, binCenters(2:end-1), 'linear');
    mses_bimodal(c) = mean((N(2:end-1) - y_interpolated').^2);
end

inds = find(mses_von_mises >  0.001 & mses_bimodal < 0.001);
for i = 1:length(inds)
    c = inds(i);
    [N, edges] = histcounts(pfc(c,:).spon_alpha_spike_phases{1}, 20, 'Normalization', 'pdf');
    binCenters = zeros(length(edges)-1,1);
    for e = 1:(length(edges)-1)
        binCenters(e) = mean(edges(e:(e+1)));
    end
    figure(); bar(binCenters, N, 'EdgeColor', 'k', 'FaceColor', [0.5,0.5,0.5], 'BarWidth', 1)
    ttl = strcat(pfc(c,:).session_id{1}, '_', num2str(pfc(c,:).cluster_id));
    title(ttl)
end
*** figure - AlphaModFigScripts/phaseModClass.m 

* [2025-1-28 Tue] - TODOS 
** TODOS 
*** DONE: firing rate statistics for AlphaModFigScripts/alphaPowerAndPhaseModSummaries.m 
*** DONE: redo dorsoventral distributions figure 

* [2025-1-29 Wed] - stats
** TODOS 
*** DONE: add *s 
[x] Figure 1: Figures/behavior.svg 
[x] Figure 3: Figures/phase_modulation_overview.svg 
[x] Figure 5: Figures/phase_modulation_and_alpha_power.svg 
[x] Figure 7: Figures/modulation_and_trial_outcome.svg 
*** DONE: add legend to Figures/dorsal_ventral_distributions.svg
*** DONE Double check/fix Figures/phase_modulation_by_outcome_examples.svg 
*** DONE: add Figures/mod_by_outcome.svg to Figures/modulation_and_trial_outcome.svg 
*** DONE: add ANOVA stats to Figures/dorsal_ventral_distributions.svg
*** DONE: add inter-regional stats to results 

* [2025-1-30 Thu] - wrapping up results
** reevaluate:
Conversely, RS units in PFC exhibited significantly greater stimulus-evoked increases 
in firing rate on miss trials (2.6 ± 0.2 Hz) than on hit trials (1.6 ± 0.2 Hz; 
p = 1.1 x 10-5, Wilcoxon signed-rank test), while there was no significant 
difference in stimulus-evoked activity in striatal FS units (11.0 ± 1.5 Hz on 
hit trials, 12.3 ± 2.1 Hz on miss trials; p = 0.52, Wilcoxon signed-rank test).

* [2025-1-31 Fri] - Discussion 
** overview of results 
*** physiology of alpha phase modulation of single neuron spiking activity in cortical and subcortical structures
*** relationship between baseline 
** other phasic relationships between spiking and lfp oscillations 
*** SPEAR model Hasselmo2025-xs 
separate phases of hippocampal theta for encoding and retrieval of memory 
*** phase precession in 
**** hippocampus: OKeefe1993-xh
**** entorhinal cortex: Hafting2008-vd
*** phasic relationships between noradrenergic neurons and PFC oscillations: Eschenko2012-wo
** should engage with Sobolewski2011-om 
Results: We observed a mean effect of desynchronization of the 5-12 Hz rhythm by the weak tactile stimulation. Arousal reduced the incidence of the 5-12 Hz oscillations and increased the desynchronizing
power of tactile stimuli.
Conclusions: Oscillations that can be disrupted by weak, purely tactile stimulation, and whose incidence
is reduced by increased arousal, should be interpreted as a physiological phenomenon typical for behavioral idling while the cerebral cortex maintains sensory sensitivity.
Significance: Our results contradict the view that the 5-12 Hz oscillatory activity, often observed in fronto-parietal cortical regions of Wistar rats, represents epileptic discharges. 
Rather, this activity provides a model for studying the physiology of alpha/mu oscillations.
** from Kelley2023-ir
*** origins of LFPs 
Rhythmic activity is ubiquitous in cortical structures of
the brain and can be measured as oscillations in the local
field potentials (LFPs) recorded extracellularly. LFPs are
largely generated by transmembrane currents, principally
postsynaptic dendritic currents, in neurons near the recording electrode (Buzsaki2012-ga, Engel2001-ap)
*** phase precession 
CNS phase coding has been most thoroughly studied in the context of “phase precession” in hippocampal place cells but has also been seen in entorhinal grid
cells (53), as well as in successive theta waves in medial prefrontal cortex (88), and ventral striatum (89). In hippocampal
place cells, the firing rate provides a coarse-grained encoding
of the animal’s location in an arena (21). During phase precession, spiking occurs earlier on successive cycles of the
theta wave as an animal moves towards the center of a place
field, providing a finer-grained temporal encoding of location within the place field (54). 
** referencing Kelley2023-ir
While the resonant properties of some cortical neurons (namely layer 5b pyramidal neurons) promote phasic relationships with the 
LFP that change over time, most neurons lack these resonant properties, and simulations suggest they are more likely to maintain 
a single preffered phase of the LFP as seen in most of the phase modulated neurons we have recorded (following a von Mises distribution).
** comparisons to previous work 
*** Bollimunta2008-qh 
**** high coherence between multi-unit activity and LFP (CSD) in V1, V4, and IT in awake behaving monkeys 
**** low coherence between LFP and MUA in superficial/supragranular layers 
*** Bollimunta2011-nj
**** reduced spike field coherence in alpha in deep layers during cued visual attention 
***** such as different task, cued vs. uncued. execution of selective-detection task requires 
"calm yet prepared" state consistent with an early idling state hypothesis of the role of alpha 
oscilaltions.
**** copied 
The relative phase between CSD and MUA was computed to evaluate the relationship between firing probability and the
temporal sink-source organization of the alpha generator. The phase spectrum was found to be continuous in the alpha range
with a mean (n 5) phase difference of 16.0  6.4° at layer 6, 167.0  7.2° at layer 4C, 170.0  5.4° at layer 3B/4A, and
163.0  12.4° at layer 1/2. The phase relationship between CSD and MUA at layers 4C, 3B/4A, and 1/2 suggests that the
increased action potential firing in G and SG layers coincide with alpha current sinks. At layer 6, however, the near 
inphase relationship indicates that the current source is accompanied by an increase in MUA. A likely explanation is that
the recorded MUA at layer 6 contained a strong contribution from the depolarization of presynaptic thalamocortical axons
(Tenke et al., 1993; Schroeder et al., 1998; Swadlow et al., 2002).
*** Haegens2011-vh
**** Furthermore, we showed that decreasing alpha-power was associated with an increase in firing rate. *we did not*
**** Figure 2 shows all spikes and their relation to alpha phase
**** the pulsed-inhibition hypothesis (5, 28, 29), which states that the α-oscillations are
a consequence of bouts of inhibition that prevent firing and thus reduce neuronal processing.
***** 5 - Klimesch W, Sauseng P, Hanslmayr S (2007) EEG alpha oscillations: The inhibitiontiming hypothesis. Brain Res Brain Res Rev 53(1):63–88. 
***** 28 - Mazaheri A, Jensen O (2010) Rhythmic pulsing: Linking ongoing brain activity with evoked responses. Front Hum Neurosci 4:177.
***** 29 -  Mathewson KE, et al. (2011) Pulsed out of awareness: EEG alpha oscillations represent a pulsed-inhibition of ongoing cortical processing. Front Psychol 2:99.
*** Haegens2015-mx 
**** again using CSD-MUA coherence 
*** Dougherty2017-ek 
ongoing infragranular alpha-range fluctuations in V1 play a role in regulating columnar visual activity
*** Examining the phasic relationship between oscillations and MUA can be misleading; although the network may spike most 
often at the trough of the alpha oscillation, a number of neurons instead fir near the peak of alpha, or spike according
to a bimodal distribution with respect to alpha phase.
*** Lakatos2005-hp 
**** evaluates phasic relationships between delta, theta, and gamma and MUA in auditory cortex of 
****  This oscillatory hierarchy controls baseline excitability and thus stimulus-related responses 
in a neuronal ensemble. We propose that the hierarchical organization of ambient oscillatory 
activity allows auditory cortex to structure its temporal activity pattern so as to optimize the 
processing of rhythmic inputs.
*** Davis2023-rd
**** phasic relationships between evoked broad band LFPs and MUA across cortical layers 
**** "laminar CSD analysis requires averaging across reliably evoked responses that target the input layer in cortex"
**** PFC and MT in marmoset, V4 in macacque 
**** shows modulation strength and preferred angle decreased with cortical depth 
*** Golden2022-bt
**** Psilocybin reduces low frequency oscillatory power and neuronal phase-locking in the anterior cingulate cortex of awake rodents
**** multi-unit activity and its relationship with to LFP phase across bands, except gamma 
*** Lazaro2019-cp
**** reduction of phase locking of single unit spiking activity to slow LFP oscillations in mPFC in autism mouse model compared to WT control 
*** Hyman2011-pw
**** how mpfc neurons are phase locked to hippocampal theta phase and its functional relevance 
*** Mazaheri2010-td
We postulate that the amplitude asymmetric alpha activity
can be viewed as rhythmic pulses producing bouts of inhibition
repeated every 100 ms. How might this inhibition come about?
GABAergic feedbacks from interneurons have been strongly implicated in the physiological mechanism generating the alpha rhythm
(Lopes da Silva et al., 1976; Crunelli and Leresche, 1991; Jones
et al., 2000). Thus it is possible that rhythmic neuronal activity
generating the alpha oscillations is a consequence of a GABAergic
inhibitory feedback paced by neocortical or thalamic rhythm generators (Hughes and Crunelli, 2005; Lorincz et al., 2008, 2009). 
This GABAergic feedback could serve to directly silence processing in pyramidal neurons or reduce the efficacy of excitatory input by
shunting inhibition.
*** Buffalo2011-cp
**** reduced spike field coherence in alpha in deep layers during cued visual attention 
***** such as different task, cued vs. uncued. execution of selective-detection task requires 
"calm yet prepared" state consistent with an early idling state hypothesis of the role of alpha 
oscilaltions.

* [2025-2-5 Wed] - peak centered distributions 
** fires at peak of alpha 
s1 = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Cortex/Spontaneous_Alpha_Modulation_v2/data.mat');
pfc = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/PFC_Expert_Combo/PFC/Spontaneous_Alpha_Modulation_v2/data.mat');
striatum = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Basal_Ganglia/Spontaneous_Alpha_Modulation_v2/data.mat');
amygdala = load('~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/AP/FIG/Expert_Combo/Amygdala/Spontaneous_Alpha_Modulation_v2/data.mat');
pfc_rs = pfc.out.alpha_modulated(strcmp(pfc.out.alpha_modulated.waveform_class,'RS'),:);
pfc_fs = pfc.out.alpha_modulated(strcmp(pfc.out.alpha_modulated.waveform_class,'FS'),:);
s1_rs = s1.out.alpha_modulated(strcmp(s1.out.alpha_modulated.waveform_class,'RS'),:);
s1_fs = s1.out.alpha_modulated(strcmp(s1.out.alpha_modulated.waveform_class,'FS'),:);
striatum_rs = striatum.out.alpha_modulated(strcmp(striatum.out.alpha_modulated.waveform_class,'RS'),:);
striatum_fs = striatum.out.alpha_modulated(strcmp(striatum.out.alpha_modulated.waveform_class,'FS'),:);
amygdala_rs = amygdala.out.alpha_modulated(strcmp(amygdala.out.alpha_modulated.waveform_class,'RS'),:);
amygdala_fs = amygdala.out.alpha_modulated(strcmp(amygdala.out.alpha_modulated.waveform_class,'FS'),:);

s1_rs_peak = s1_rs(abs(s1_rs.theta_bars) < 1,:);
s1_fs_peak = s1_fs(abs(s1_fs.theta_bars) < 1,:);

for c = 1:size(s1_rs_peak,1)
    [N, edges] = histcounts(s1_rs_peak(c,:).spon_alpha_spike_phases{1}, 20, 'Normalization', 'pdf');
    binCenters = zeros(length(edges)-1,1);
    for e = 1:(length(edges)-1)
        binCenters(e) = mean(edges(e:(e+1)));
    end
    if c == 210 
        gmmModel = fitgmdist(s1_rs_peak(c,:).spon_alpha_spike_phases{1}', 2);
        x = linspace(min(binCenters), max(binCenters), 1000); % Fine grid for PDF
        y = pdf(gmmModel, x'); % Evaluate GMM PDF
    else
        [x,y, ~, ~, ~] = vonMises(s1_rs_peak(c,:).spon_alpha_spike_phases{1});
    end
    figure()
    hold on
    bar(binCenters, N, 'EdgeColor', 'k', 'FaceColor', [0.5,0.5,0.5], 'BarWidth', 1)
    plot(x, y, 'k-', 'LineWidth', 2)
    xticks([-pi,pi])
    xticklabels({'-\pi', '\pi'})
    if i == 1 
        yticks([0,0.3]);
    else
        yticks([])
    end
    ax = gca;
    ax.XAxis.FontSize = 16;
end

* [2025-2-7 Fri] - getting dillon up to speed 
** 
ftr_files = {'~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/phase5_low_1075_sessions.mat', ...
    '~/neuralctrl/projects/nCORTEx/Project_Selective-Attention/Experiments/SELECT_DETECT/Data/FTR/SLRT/phase5_high_1075_sessions.mat'};
comparePsychCurves(ftr_files, true, false, {'low', 'high'})

* [2025-2-10 Mon] - running through paper 
** lfp stats 
*** in AlphaModFigScripts/lfpPowerByOutcome.m end 
Freq = data.lfp_session(amygdala_channel,:).left_trigger_baseline_spectra_Hit_f{1}
pfc_tbl = [[zeros(size(pfc_hit,1),1), pfc_hit(:,Freq<30)]; [ones(size(pfc_miss,1),1), pfc_miss(:,Freq<30)]];
nCols = size(pfc_tbl,2)-1;
varNames = "f" + (0:nCols);
pfc_tbl = array2table(pfc_tbl, 'VariableNames', varNames);
Freq = Freq(Freq<30);
pfc_rm = fitrm(pfc_tbl, 'f1-f246 ~ f0', 'WithinDesign', Freq);
** TODOS
*** DONE: add legend to alpha power figure 
*** TODO: fix references 

* [2025-2-13 Thu] - setting up repo for public access 
** init_paths for path definitions 
*** DONE: slrt_ftr_extraction.m
*** DONE: ap_ftr_extraction.m
*** DONE: lfp_ftr_extraction.m
*** DONE: slrt_extract.m
*** DONE: sponSpikePhasePlotting.m 
*** DONE: plotPhaseShiftAcrossProbe.m
*** DONE: AlphaModFigScripts/poissonProcessSims.m
*** DONE: AlphaModFigScripts/spikeClassificationPlots.m
*** DONE: AlphaModFigScripts/alphaPowerAndPhaseModSummaries.m
*** DONE: AlphaModFigScripts/avgFiringRatePlots.m
*** DONE: AlphaModFigScripts/behaviorPlots.m
*** DONE: AlphaModFigScripts/laminarDistributions.m
*** DONE: AlphaModFigScripts/lfpPowerByOutcome.m
*** DONE: AlphaModFigScripts/modulationAndBehaviorSummaries.m
*** DONE: AlphaModFigScripts/phaseModClasses.m
*** DONE: AlphaModFigScripts/phaseModSummaries.m